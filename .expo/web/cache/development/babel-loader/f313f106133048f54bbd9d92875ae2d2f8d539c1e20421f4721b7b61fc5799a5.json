{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { Avatar } from '@rneui/base';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar EditableImage = function EditableImage(_ref) {\n  var imageUri = _ref.imageUri,\n    setImageUri = _ref.setImageUri,\n    isModified = _ref.isModified;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isModalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var toggleModal = function toggleModal() {\n    setModalVisible(!isModalVisible);\n  };\n  var handleSave = function handleSave(uri) {\n    setImageUri(uri);\n    setModalVisible(false);\n    isModified(true);\n  };\n  var handleCancel = function handleCancel() {\n    setModalVisible(false);\n  };\n  var openImagePickerAsync = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var permissionResult = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (permissionResult.granted === false) {\n        alert('Permission to access camera roll is required!');\n        return;\n      }\n      var pickerResult = yield ImagePicker.launchImageLibraryAsync();\n      if (pickerResult.canceled === true) {\n        return;\n      }\n      if (pickerResult.assets && pickerResult.assets[0].uri) {\n        handleSave(pickerResult.assets[0].uri);\n      }\n    });\n    return function openImagePickerAsync() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: {\n      paddingTop: 5\n    },\n    children: imageUri ? _jsx(Avatar, {\n      rounded: true,\n      size: 100,\n      source: {\n        uri: imageUri\n      },\n      containerStyle: {\n        backgroundColor: 'transparent'\n      },\n      children: _jsx(Avatar.Accessory, {\n        size: 20,\n        reverse: true,\n        onPress: openImagePickerAsync,\n        name: \"pencil\",\n        type: \"ionicon\",\n        containerStyle: {\n          backgroundColor: 'transparent'\n        },\n        color: \"#2F4F4F\"\n      })\n    }) : _jsx(Avatar, {\n      rounded: true,\n      size: 100,\n      icon: {\n        name: 'add',\n        color: '#fff',\n        type: 'material'\n      },\n      containerStyle: {\n        backgroundColor: '#000'\n      },\n      children: _jsx(Avatar.Accessory, {\n        size: 20,\n        reverse: true,\n        onPress: openImagePickerAsync,\n        name: \"pencil\",\n        type: \"ionicon\",\n        containerStyle: {\n          backgroundColor: 'transparent'\n        },\n        color: \"#2F4F4F\"\n      })\n    })\n  });\n};\nvar styles = {\n  buttonsPicker: {\n    backgroundColor: '#122121',\n    padding: 5,\n    borderRadius: 3,\n    marginBottom: 20,\n    width: 100,\n    alignItems: 'center'\n  },\n  buttonText: {\n    padding: 2,\n    marginBottom: 4,\n    color: 'white',\n    fontFamily: \"WixMadeforDisplay-Bold\"\n  }\n};\nexport default EditableImage;","map":{"version":3,"names":["React","useState","View","ImagePicker","Avatar","jsx","_jsx","EditableImage","_ref","imageUri","setImageUri","isModified","_useState","_useState2","_slicedToArray","isModalVisible","setModalVisible","toggleModal","handleSave","uri","handleCancel","openImagePickerAsync","_ref2","_asyncToGenerator","permissionResult","requestMediaLibraryPermissionsAsync","granted","alert","pickerResult","launchImageLibraryAsync","canceled","assets","apply","arguments","style","paddingTop","children","rounded","size","source","containerStyle","backgroundColor","Accessory","reverse","onPress","name","type","color","icon","styles","buttonsPicker","padding","borderRadius","marginBottom","width","alignItems","buttonText","fontFamily"],"sources":["C:/Users/Benoitm/Documents/Coding/Kappze/MyKappze/src/components/general/EditableImage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Image, TouchableOpacity, View, Text } from 'react-native';\r\nimport Modal from 'react-native-modal';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n// import Icon from \"react-native-vector-icons/Ionicons\";\r\nimport { Icon, Avatar, Badge } from '@rneui/base';\r\n\r\nconst EditableImage = ({imageUri, setImageUri, isModified}) => {\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n  // const [imageUri, setImageUri] = useState(null);\r\n\r\n  const toggleModal = () => {\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n\r\n  const handleSave = uri => {\r\n    setImageUri(uri);\r\n    setModalVisible(false);\r\n    isModified(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const openImagePickerAsync = async () => {\r\n    let permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n\r\n    if (permissionResult.granted === false) {\r\n      alert('Permission to access camera roll is required!');\r\n      return;\r\n    }\r\n\r\n    let pickerResult = await ImagePicker.launchImageLibraryAsync();\r\n\r\n    if (pickerResult.canceled === true) {\r\n      return;\r\n    }\r\n\r\n    if (pickerResult.assets && pickerResult.assets[0].uri) {\r\n      handleSave(pickerResult.assets[0].uri);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{paddingTop: 5}}>\r\n      {/* <TouchableOpacity onPress={openImagePickerAsync} style={styles.buttonsPicker}>\r\n        <Text style={styles.buttonText}>\r\n          {imageUri ? 'Modifier' : 'Choisir'}\r\n        </Text>\r\n      </TouchableOpacity> */}\r\n\r\n      {imageUri ? \r\n        <Avatar\r\n          rounded\r\n          size={100}\r\n          source={{uri: imageUri}}\r\n          containerStyle={{ backgroundColor: 'transparent' }}\r\n          // containerStyle={{width: 200, height: 200}}\r\n        >\r\n          <Avatar.Accessory \r\n            size={20} \r\n            reverse\r\n            onPress={openImagePickerAsync}\r\n            name='pencil'\r\n            type='ionicon' \r\n            containerStyle={{ backgroundColor: 'transparent'}}\r\n            color = '#2F4F4F'\r\n            \r\n          />\r\n        </Avatar>\r\n        :\r\n        <Avatar\r\n          rounded\r\n          size={100}\r\n          icon={{name: 'add', color: '#fff', type: 'material'}}\r\n          containerStyle={{ backgroundColor: '#000' }}\r\n          // containerStyle={{width: 200, height: 200}}\r\n        >\r\n          <Avatar.Accessory \r\n            size={20} \r\n            reverse\r\n            onPress={openImagePickerAsync}\r\n            name='pencil'\r\n            type='ionicon' \r\n            containerStyle={{ backgroundColor: 'transparent'}}\r\n            color = '#2F4F4F'\r\n            \r\n          />\r\n        </Avatar>\r\n      }\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  buttonsPicker:{\r\n    backgroundColor: '#122121',\r\n    padding: 5,\r\n    borderRadius: 3,\r\n    marginBottom: 20,\r\n    width: 100,\r\n    alignItems: 'center'\r\n  },\r\n  buttonText: {\r\n    padding: 2,\r\n    marginBottom: 4,\r\n    color: 'white',\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n  },\r\n}\r\n\r\nexport default EditableImage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}