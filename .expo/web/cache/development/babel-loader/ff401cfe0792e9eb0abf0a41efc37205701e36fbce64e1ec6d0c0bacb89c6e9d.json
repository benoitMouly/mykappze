{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { getFirestore, collection, where, doc, query, getDocs, addDoc, getDoc, deleteDoc, writeBatch, updateDoc } from 'firebase/firestore';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nexport var fetchAnimalsByCanal = createAsyncThunk('animals/fetchAnimalsByCanal', function () {\n  var _ref = _asyncToGenerator(function* (canalId) {\n    var db = getFirestore();\n    var q = query(collection(db, 'animals'), where('canalId', '==', canalId));\n    var querySnapshot = yield getDocs(q);\n    var animalsData = [];\n    querySnapshot.forEach(function (doc) {\n      animalsData.push(_objectSpread({\n        id: doc.id\n      }, doc.data()));\n    });\n    return animalsData;\n  });\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\nexport var fetchAnimalById = createAsyncThunk('animals/fetchAnimalById', function () {\n  var _ref2 = _asyncToGenerator(function* (animalId) {\n    var db = getFirestore();\n    var animalRef = doc(collection(db, 'animals'), animalId);\n    var animalSnapshot = yield getDoc(animalRef);\n    return _objectSpread({\n      id: animalSnapshot.id\n    }, animalSnapshot.data());\n  });\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nexport var fetchMotherById = createAsyncThunk('animals/fetchMotherById', function () {\n  var _ref4 = _asyncToGenerator(function* (motherId, _ref3) {\n    var rejectWithValue = _ref3.rejectWithValue;\n    try {\n      var db = getFirestore();\n      var animalRef = doc(collection(db, 'animals'), motherId);\n      var animalSnapshot = yield getDoc(animalRef);\n      return _objectSpread({\n        id: animalSnapshot.id\n      }, animalSnapshot.data());\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  });\n  return function (_x3, _x4) {\n    return _ref4.apply(this, arguments);\n  };\n}());\nexport var fetchAnimalsByMother = createAsyncThunk('animals/fetchAnimalsByMother', function () {\n  var _ref5 = _asyncToGenerator(function* (motherId) {\n    var db = getFirestore();\n    var q = query(collection(db, 'animals'), where('motherAppId', '==', motherId));\n    var querySnapshot = yield getDocs(q);\n    var animalsData = [];\n    querySnapshot.forEach(function (doc) {\n      animalsData.push(_objectSpread({\n        id: doc.id\n      }, doc.data()));\n    });\n    return animalsData;\n  });\n  return function (_x5) {\n    return _ref5.apply(this, arguments);\n  };\n}());\nexport var fetchAnimalsByCitySector = createAsyncThunk('animals/fetchAnimalsByCitySector', function () {\n  var _ref6 = _asyncToGenerator(function* (citySectorId) {\n    var db = getFirestore();\n    var q = query(collection(db, 'animals'), where('citySectorId', '==', citySectorId));\n    var querySnapshot = yield getDocs(q);\n    var animalsData = [];\n    querySnapshot.forEach(function (doc) {\n      animalsData.push(_objectSpread({\n        id: doc.id\n      }, doc.data()));\n    });\n    return animalsData;\n  });\n  return function (_x6) {\n    return _ref6.apply(this, arguments);\n  };\n}());\nexport var fetchAnimalsBySector = createAsyncThunk('animals/fetchAnimalsBySector', function () {\n  var _ref7 = _asyncToGenerator(function* (sectorId) {\n    var db = getFirestore();\n    var q = query(collection(db, 'animals'), where('sectorId', '==', sectorId));\n    var querySnapshot = yield getDocs(q);\n    var animalsData = [];\n    querySnapshot.forEach(function (doc) {\n      animalsData.push(_objectSpread({\n        id: doc.id\n      }, doc.data()));\n    });\n    return animalsData;\n  });\n  return function (_x7) {\n    return _ref7.apply(this, arguments);\n  };\n}());\nexport var addAnimal = createAsyncThunk('animals/addAnimal', function () {\n  var _ref9 = _asyncToGenerator(function* (animalData, _ref8) {\n    var rejectWithValue = _ref8.rejectWithValue;\n    try {\n      var db = getFirestore();\n      var animalRef = collection(db, 'animals');\n      var newAnimalRef = yield addDoc(animalRef, animalData);\n      var newAnimalSnapshot = yield getDoc(newAnimalRef);\n      var newAnimal = _objectSpread({\n        id: newAnimalRef.id\n      }, newAnimalSnapshot.data());\n      return newAnimal;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  });\n  return function (_x8, _x9) {\n    return _ref9.apply(this, arguments);\n  };\n}());\nexport var updateAnimalSectorName = createAsyncThunk('animals/updateAnimalSectorName', function () {\n  var _ref12 = _asyncToGenerator(function* (_ref10, _ref11) {\n    var sectorId = _ref10.sectorId,\n      newSectorName = _ref10.newSectorName;\n    var rejectWithValue = _ref11.rejectWithValue;\n    try {\n      var db = getFirestore();\n      var q = query(collection(db, 'animals'), where('sectorId', '==', sectorId));\n      var querySnapshot = yield getDocs(q);\n      var batch = writeBatch(db);\n      querySnapshot.forEach(function (animalDoc) {\n        var animalRef = doc(db, 'animals', animalDoc.id);\n        batch.update(animalRef, {\n          sectorName: newSectorName\n        });\n      });\n      yield batch.commit();\n      return {\n        sectorId: sectorId,\n        newSectorName: newSectorName\n      };\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  });\n  return function (_x10, _x11) {\n    return _ref12.apply(this, arguments);\n  };\n}());\nexport var updateAnimalCitySectorName = createAsyncThunk('animals/updateAnimalCitySectorName', function () {\n  var _ref15 = _asyncToGenerator(function* (_ref13, _ref14) {\n    var citySectorId = _ref13.citySectorId,\n      newCitySectorName = _ref13.newCitySectorName;\n    var rejectWithValue = _ref14.rejectWithValue;\n    try {\n      var db = getFirestore();\n      var q = query(collection(db, 'animals'), where('citySectorId', '==', citySectorId));\n      var querySnapshot = yield getDocs(q);\n      var batch = writeBatch(db);\n      querySnapshot.forEach(function (animalDoc) {\n        var animalRef = doc(db, 'animals', animalDoc.id);\n        batch.update(animalRef, {\n          citySectorName: newCitySectorName\n        });\n      });\n      yield batch.commit();\n      return {\n        citySectorId: citySectorId,\n        newCitySectorName: newCitySectorName\n      };\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  });\n  return function (_x12, _x13) {\n    return _ref15.apply(this, arguments);\n  };\n}());\nexport var removeSectorFromAnimals = createAsyncThunk('animals/removeSectorFromAnimals', function () {\n  var _ref18 = _asyncToGenerator(function* (_ref16, _ref17) {\n    var sectorId = _ref16.sectorId,\n      citySectorId = _ref16.citySectorId;\n    var rejectWithValue = _ref17.rejectWithValue;\n    try {\n      var db = getFirestore();\n      var q = query(collection(db, 'animals'), where('sectorId', '==', sectorId), where('citySectorId', '==', citySectorId));\n      var querySnapshot = yield getDocs(q);\n      var batch = writeBatch(db);\n      querySnapshot.forEach(function (animalDoc) {\n        var animalRef = doc(db, 'animals', animalDoc.id);\n        batch.update(animalRef, {\n          sectorId: '',\n          sectorName: ''\n        });\n      });\n      yield batch.commit();\n      return sectorId;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  });\n  return function (_x14, _x15) {\n    return _ref18.apply(this, arguments);\n  };\n}());\nexport var removeCitySectorFromAnimals = createAsyncThunk('animals/removeCitySectorFromAnimals', function () {\n  var _ref20 = _asyncToGenerator(function* (citySectorId, _ref19) {\n    var rejectWithValue = _ref19.rejectWithValue;\n    try {\n      var db = getFirestore();\n      var q = query(collection(db, 'animals'), where('citySectorId', '==', citySectorId));\n      var querySnapshot = yield getDocs(q);\n      var batch = writeBatch(db);\n      querySnapshot.forEach(function (animalDoc) {\n        var animalRef = doc(db, 'animals', animalDoc.id);\n        batch.update(animalRef, {\n          citySectorId: '',\n          citySectorName: ''\n        });\n      });\n      yield batch.commit();\n      return citySectorId;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  });\n  return function (_x16, _x17) {\n    return _ref20.apply(this, arguments);\n  };\n}());\nexport var uploadImage = function () {\n  var _ref21 = _asyncToGenerator(function* (image) {\n    try {\n      var storage = getStorage();\n      var storageRef = ref(storage, `images/${image.name}`);\n      yield uploadBytes(storageRef, image);\n      var imageUrl = yield getDownloadURL(storageRef);\n      return imageUrl;\n    } catch (error) {\n      throw new Error(`Une erreur s'est produite lors du téléchargement de l'image : ${error.message}`);\n    }\n  });\n  return function uploadImage(_x18) {\n    return _ref21.apply(this, arguments);\n  };\n}();\nexport var updateAnimalImage = createAsyncThunk('animals/updateAnimalImage', function () {\n  var _ref24 = _asyncToGenerator(function* (_ref22, _ref23) {\n    var animalId = _ref22.animalId,\n      image = _ref22.image;\n    var rejectWithValue = _ref23.rejectWithValue;\n    try {\n      var imageUrl = yield uploadImage(image);\n      var db = getFirestore();\n      var animalRef = doc(db, 'animals', animalId);\n      yield updateDoc(animalRef, {\n        image: imageUrl\n      });\n      return {\n        animalId: animalId,\n        imageUrl: imageUrl\n      };\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  });\n  return function (_x19, _x20) {\n    return _ref24.apply(this, arguments);\n  };\n}());\nexport var updateAnimal = createAsyncThunk('animals/updateAnimal', function () {\n  var _ref27 = _asyncToGenerator(function* (_ref25, _ref26) {\n    var animalId = _ref25.animalId,\n      animalData = _ref25.animalData;\n    var rejectWithValue = _ref26.rejectWithValue;\n    try {\n      var db = getFirestore();\n      var animalRef = doc(db, 'animals', animalId);\n      yield updateDoc(animalRef, animalData);\n      return {\n        animalId: animalId,\n        animalData: animalData\n      };\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  });\n  return function (_x21, _x22) {\n    return _ref27.apply(this, arguments);\n  };\n}());\nexport var deleteAnimal = createAsyncThunk('animals/deleteAnimal', function () {\n  var _ref29 = _asyncToGenerator(function* (animalId, _ref28) {\n    var rejectWithValue = _ref28.rejectWithValue;\n    try {\n      var db = getFirestore();\n      var animalRef = doc(db, 'animals', animalId);\n      yield deleteDoc(animalRef);\n      return animalId;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  });\n  return function (_x23, _x24) {\n    return _ref29.apply(this, arguments);\n  };\n}());\nvar animalsSlice = createSlice({\n  name: 'animals',\n  initialState: {\n    status: 'idle',\n    data: [],\n    selectedAnimal: null,\n    motherAnimal: null,\n    motherAnimalsList: null,\n    error: null\n  },\n  reducers: {},\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(fetchAnimalsByCitySector.pending, function (state) {\n      state.status = 'loading';\n    }).addCase(fetchAnimalsByCitySector.fulfilled, function (state, action) {\n      state.status = 'succeeded';\n      state.data = action.payload;\n    }).addCase(fetchAnimalsByCitySector.rejected, function (state, action) {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(fetchAnimalsBySector.pending, function (state) {\n      state.status = 'loading';\n    }).addCase(fetchAnimalsBySector.fulfilled, function (state, action) {\n      state.status = 'succeeded';\n      state.data = action.payload;\n    }).addCase(fetchAnimalsBySector.rejected, function (state, action) {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(fetchAnimalsByCanal.pending, function (state) {\n      state.status = 'loading';\n    }).addCase(fetchAnimalsByCanal.fulfilled, function (state, action) {\n      state.status = 'succeeded';\n      state.data = action.payload;\n    }).addCase(fetchAnimalsByCanal.rejected, function (state, action) {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(fetchAnimalById.pending, function (state) {\n      state.status = 'loading';\n    }).addCase(fetchAnimalById.fulfilled, function (state, action) {\n      state.status = 'succeeded';\n      state.selectedAnimal = action.payload;\n    }).addCase(fetchAnimalById.rejected, function (state, action) {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(fetchMotherById.pending, function (state) {\n      state.status = 'loading';\n    }).addCase(fetchMotherById.fulfilled, function (state, action) {\n      state.status = 'succeeded';\n      state.motherAnimal = action.payload;\n    }).addCase(fetchMotherById.rejected, function (state, action) {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(fetchAnimalsByMother.pending, function (state) {\n      state.status = 'loading';\n    }).addCase(fetchAnimalsByMother.fulfilled, function (state, action) {\n      state.status = 'succeeded';\n      state.motherAnimalsList = action.payload;\n    }).addCase(fetchAnimalsByMother.rejected, function (state, action) {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(addAnimal.pending, function (state) {\n      state.status = 'loading';\n    }).addCase(addAnimal.fulfilled, function (state, action) {\n      state.status = 'succeeded';\n      state.data.push(action.payload);\n    }).addCase(addAnimal.rejected, function (state, action) {\n      state.status = 'failed';\n      state.error = action.payload;\n    }).addCase(updateAnimalSectorName.pending, function (state) {\n      state.status = 'loading';\n    }).addCase(updateAnimalSectorName.fulfilled, function (state, action) {\n      state.status = 'succeeded';\n      state.data = state.data.map(function (animal) {\n        if (animal.sectorId === action.payload.sectorId) {\n          return _objectSpread(_objectSpread({}, animal), {}, {\n            sectorName: action.payload.newSectorName\n          });\n        }\n        return animal;\n      });\n    }).addCase(updateAnimalSectorName.rejected, function (state, action) {\n      state.status = 'failed';\n      state.error = action.payload;\n    }).addCase(removeSectorFromAnimals.fulfilled, function (state, action) {\n      state.status = 'succeeded';\n      state.data = state.data.map(function (animal) {\n        if (animal.sectorId === action.payload) {\n          return _objectSpread(_objectSpread({}, animal), {}, {\n            sectorId: ''\n          });\n        }\n        return animal;\n      });\n    }).addCase(updateAnimalCitySectorName.pending, function (state) {\n      state.status = 'loading';\n    }).addCase(updateAnimalCitySectorName.fulfilled, function (state, action) {\n      state.status = 'succeeded';\n      state.data = state.data.map(function (animal) {\n        if (animal.citySectorId === action.payload.citySectorId) {\n          return _objectSpread(_objectSpread({}, animal), {}, {\n            citySectorName: action.payload.newCitySectorName\n          });\n        }\n        return animal;\n      });\n    }).addCase(updateAnimalCitySectorName.rejected, function (state, action) {\n      state.status = 'failed';\n      state.error = action.payload;\n    }).addCase(removeCitySectorFromAnimals.fulfilled, function (state, action) {\n      state.status = 'succeeded';\n      state.data = state.data.map(function (animal) {\n        if (animal.citySectorId === action.payload) {\n          return _objectSpread(_objectSpread({}, animal), {}, {\n            citySectorId: ''\n          });\n        }\n        return animal;\n      });\n    }).addCase(deleteAnimal.pending, function (state) {\n      state.status = 'loading';\n    }).addCase(deleteAnimal.fulfilled, function (state, action) {\n      state.status = 'succeeded';\n      state.data = state.data.filter(function (animal) {\n        return animal.id !== action.payload;\n      });\n    }).addCase(deleteAnimal.rejected, function (state, action) {\n      state.status = 'failed';\n      state.error = action.payload;\n    }).addCase(updateAnimal.pending, function (state) {\n      state.status = 'loading';\n    }).addCase(updateAnimal.fulfilled, function (state, action) {\n      state.status = 'succeeded';\n      state.data = state.data.map(function (animal) {\n        if (animal.id === action.payload.animalId) {\n          return _objectSpread(_objectSpread({}, animal), action.payload.animalData);\n        }\n        return animal;\n      });\n      if (state.selectedAnimal && state.selectedAnimal.id === action.payload.animalId) {\n        state.selectedAnimal = _objectSpread(_objectSpread({}, state.selectedAnimal), action.payload.animalData);\n      }\n    }).addCase(updateAnimal.rejected, function (state, action) {\n      state.status = 'failed';\n      state.error = action.payload;\n    }).addCase(updateAnimalImage.pending, function (state) {\n      state.status = 'loading';\n    }).addCase(updateAnimalImage.fulfilled, function (state, action) {\n      state.status = 'succeeded';\n      var _action$payload = action.payload,\n        animalId = _action$payload.animalId,\n        imageUrl = _action$payload.imageUrl;\n      var animal = state.data.find(function (animal) {\n        return animal.id === animalId;\n      });\n      if (animal) {\n        animal.image = imageUrl;\n      }\n      if (state.selectedAnimal && state.selectedAnimal.id === animalId) {\n        state.selectedAnimal.image = imageUrl;\n      }\n    }).addCase(updateAnimalImage.rejected, function (state, action) {\n      state.status = 'failed';\n      state.error = action.payload;\n    });\n  }\n});\nexport default animalsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","getFirestore","collection","where","doc","query","getDocs","addDoc","getDoc","deleteDoc","writeBatch","updateDoc","getStorage","ref","uploadBytes","getDownloadURL","fetchAnimalsByCanal","_ref","_asyncToGenerator","canalId","db","q","querySnapshot","animalsData","forEach","push","_objectSpread","id","data","_x","apply","arguments","fetchAnimalById","_ref2","animalId","animalRef","animalSnapshot","_x2","fetchMotherById","_ref4","motherId","_ref3","rejectWithValue","error","message","_x3","_x4","fetchAnimalsByMother","_ref5","_x5","fetchAnimalsByCitySector","_ref6","citySectorId","_x6","fetchAnimalsBySector","_ref7","sectorId","_x7","addAnimal","_ref9","animalData","_ref8","newAnimalRef","newAnimalSnapshot","newAnimal","_x8","_x9","updateAnimalSectorName","_ref12","_ref10","_ref11","newSectorName","batch","animalDoc","update","sectorName","commit","_x10","_x11","updateAnimalCitySectorName","_ref15","_ref13","_ref14","newCitySectorName","citySectorName","_x12","_x13","removeSectorFromAnimals","_ref18","_ref16","_ref17","_x14","_x15","removeCitySectorFromAnimals","_ref20","_ref19","_x16","_x17","uploadImage","_ref21","image","storage","storageRef","name","imageUrl","Error","_x18","updateAnimalImage","_ref24","_ref22","_ref23","_x19","_x20","updateAnimal","_ref27","_ref25","_ref26","_x21","_x22","deleteAnimal","_ref29","_ref28","_x23","_x24","animalsSlice","initialState","status","selectedAnimal","motherAnimal","motherAnimalsList","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","map","animal","filter","_action$payload","find","reducer"],"sources":["C:/Users/Benoitm/Documents/Coding/Kappze/MyKappze/src/features/animals/parentAnimalSlice.tsx"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getFirestore, collection, where, doc, query, getDocs, addDoc, getDoc, deleteDoc, writeBatch, updateDoc } from 'firebase/firestore';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\r\n\r\n/*\r\n* Retrieve animals by Canal\r\n***    \r\n*/\r\n\r\nexport const fetchAnimalsByCanal = createAsyncThunk('animals/fetchAnimalsByCanal', async (canalId) => {\r\n    const db = getFirestore();\r\n    const q = query(collection(db, 'animals'), where('canalId', '==', canalId));\r\n    const querySnapshot = await getDocs(q);\r\n    const animalsData = [];\r\n    querySnapshot.forEach((doc) => {\r\n        animalsData.push({ id: doc.id, ...doc.data() });\r\n    });\r\n    return animalsData;\r\n});\r\n\r\n\r\n/*\r\n* Retrieve animal by ID\r\n***    \r\n*/\r\n\r\nexport const fetchAnimalById = createAsyncThunk('animals/fetchAnimalById', async (animalId) => {\r\n    const db = getFirestore();\r\n    const animalRef = doc(collection(db, 'animals'), animalId);\r\n    const animalSnapshot = await getDoc(animalRef);\r\n    // console.log(id)\r\n    return { id: animalSnapshot.id, ...animalSnapshot.data() };\r\n});\r\n\r\n/*\r\n* Retrieve mother by ID\r\n***    \r\n*/\r\n\r\nexport const fetchMotherById = createAsyncThunk('animals/fetchMotherById', async (motherId, { rejectWithValue}) => {\r\n\r\n    try{\r\n        const db = getFirestore();\r\n        const animalRef = doc(collection(db, 'animals'), motherId);\r\n        const animalSnapshot = await getDoc(animalRef);\r\n        return { id: animalSnapshot.id, ...animalSnapshot.data() };\r\n    } catch(error){\r\n        return rejectWithValue(error.message);\r\n    }\r\n\r\n});\r\n\r\n\r\n/*\r\n* Retrieve animals by mother ID\r\n***\r\n*/\r\n\r\nexport const fetchAnimalsByMother = createAsyncThunk('animals/fetchAnimalsByMother', async (motherId) => {\r\n    const db = getFirestore();\r\n    const q = query(collection(db, 'animals'), where('motherAppId', '==', motherId));\r\n    const querySnapshot = await getDocs(q);\r\n    const animalsData = [];\r\n    querySnapshot.forEach((doc) => {\r\n        animalsData.push({ id: doc.id, ...doc.data() });\r\n    });\r\n    return animalsData;\r\n});\r\n\r\n\r\n/*\r\n* Retrieve animals by CitySector\r\n***    \r\n*/\r\n\r\nexport const fetchAnimalsByCitySector = createAsyncThunk('animals/fetchAnimalsByCitySector', async (citySectorId) => {\r\n    const db = getFirestore();\r\n    const q = query(collection(db, 'animals'), where('citySectorId', '==', citySectorId));\r\n    const querySnapshot = await getDocs(q);\r\n    const animalsData = [];\r\n    querySnapshot.forEach((doc) => {\r\n        animalsData.push({ id: doc.id, ...doc.data() });\r\n    });\r\n    return animalsData;\r\n});\r\n\r\n/*\r\n* Retrieve animals by Sector\r\n***    \r\n*/\r\n\r\nexport const fetchAnimalsBySector = createAsyncThunk('animals/fetchAnimalsBySector', async (sectorId) => {\r\n    const db = getFirestore();\r\n    const q = query(collection(db, 'animals'), where('sectorId', '==', sectorId));\r\n    const querySnapshot = await getDocs(q);\r\n    const animalsData = [];\r\n    querySnapshot.forEach((doc) => {\r\n        animalsData.push({ id: doc.id, ...doc.data() });\r\n    });\r\n    return animalsData;\r\n});\r\n\r\n\r\n\r\n/*\r\n* Add new animal\r\n***    \r\n*/\r\n\r\n\r\nexport const addAnimal = createAsyncThunk(\r\n    'animals/addAnimal',\r\n    async (animalData, { rejectWithValue }) => {\r\n        try {\r\n            const db = getFirestore();\r\n            const animalRef = collection(db, 'animals');\r\n            const newAnimalRef = await addDoc(animalRef, animalData);\r\n            const newAnimalSnapshot = await getDoc(newAnimalRef);\r\n            const newAnimal = { id: newAnimalRef.id, ...newAnimalSnapshot.data() };\r\n            return newAnimal;\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    }\r\n);\r\n\r\n\r\n\r\n/*\r\n* Update animal sector name\r\n***    \r\n*/\r\n\r\nexport const updateAnimalSectorName = createAsyncThunk(\r\n    'animals/updateAnimalSectorName',\r\n    async ({ sectorId, newSectorName }, { rejectWithValue }) => {\r\n        try {\r\n            const db = getFirestore();\r\n            const q = query(collection(db, 'animals'), where('sectorId', '==', sectorId));\r\n            const querySnapshot = await getDocs(q);\r\n\r\n            const batch = writeBatch(db);\r\n            querySnapshot.forEach((animalDoc) => {\r\n                const animalRef = doc(db, 'animals', animalDoc.id);\r\n                batch.update(animalRef, { sectorName: newSectorName });\r\n            });\r\n            await batch.commit();\r\n\r\n            // Return the payload\r\n            return { sectorId, newSectorName };\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    }\r\n);\r\n\r\n/*\r\n* Update animal sector name\r\n***    \r\n*/\r\n\r\nexport const updateAnimalCitySectorName = createAsyncThunk(\r\n    'animals/updateAnimalCitySectorName',\r\n    async ({ citySectorId, newCitySectorName }, { rejectWithValue }) => {\r\n        try {\r\n            const db = getFirestore();\r\n            const q = query(collection(db, 'animals'), where('citySectorId', '==', citySectorId));\r\n            const querySnapshot = await getDocs(q);\r\n\r\n            const batch = writeBatch(db);\r\n            querySnapshot.forEach((animalDoc) => {\r\n                const animalRef = doc(db, 'animals', animalDoc.id);\r\n                batch.update(animalRef, { citySectorName: newCitySectorName });\r\n            });\r\n            await batch.commit();\r\n\r\n            // Return the payload\r\n            return { citySectorId, newCitySectorName };\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    }\r\n);\r\n\r\n/*\r\n* Remove animal sector\r\n***    \r\n*/\r\n\r\nexport const removeSectorFromAnimals = createAsyncThunk(\r\n    'animals/removeSectorFromAnimals',\r\n    async ({ sectorId, citySectorId }, { rejectWithValue }) => {\r\n        try {\r\n            const db = getFirestore();\r\n            const q = query(\r\n                collection(db, 'animals'),\r\n                where('sectorId', '==', sectorId),\r\n                where('citySectorId', '==', citySectorId)\r\n            );\r\n            const querySnapshot = await getDocs(q);\r\n\r\n            const batch = writeBatch(db);\r\n            querySnapshot.forEach((animalDoc) => {\r\n                const animalRef = doc(db, 'animals', animalDoc.id);\r\n                batch.update(animalRef, { sectorId: '', sectorName: '' });\r\n            });\r\n            await batch.commit();\r\n\r\n            // Return the sectorId\r\n            return sectorId;\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    }\r\n);\r\n\r\n/*\r\n* Remove animal citySector\r\n***    \r\n*/\r\n\r\nexport const removeCitySectorFromAnimals = createAsyncThunk(\r\n    'animals/removeCitySectorFromAnimals',\r\n    async (citySectorId, { rejectWithValue }) => {\r\n        try {\r\n            const db = getFirestore();\r\n            const q = query(collection(db, 'animals'), where('citySectorId', '==', citySectorId));\r\n            const querySnapshot = await getDocs(q);\r\n\r\n            const batch = writeBatch(db);\r\n            querySnapshot.forEach((animalDoc) => {\r\n                const animalRef = doc(db, 'animals', animalDoc.id);\r\n                batch.update(animalRef, { citySectorId: '', citySectorName: '' });\r\n            });\r\n            await batch.commit();\r\n\r\n            // Return the sectorId\r\n            return citySectorId;\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    }\r\n);\r\n\r\n\r\n/*\r\n* Add animal profile image\r\n***    \r\n*/\r\n\r\n\r\nexport const uploadImage = async (image) => {\r\n    try {\r\n        const storage = getStorage();\r\n        const storageRef = ref(storage, `images/${image.name}`);\r\n        await uploadBytes(storageRef, image);\r\n        const imageUrl = await getDownloadURL(storageRef);\r\n        return imageUrl;\r\n    } catch (error) {\r\n        throw new Error(`Une erreur s'est produite lors du téléchargement de l'image : ${error.message}`);\r\n    }\r\n};\r\n\r\n/*\r\n* Update animal image\r\n***\r\n*/\r\n\r\nexport const updateAnimalImage = createAsyncThunk(\r\n    'animals/updateAnimalImage',\r\n    async ({ animalId, image }, { rejectWithValue }) => {\r\n        try {\r\n            const imageUrl = await uploadImage(image);\r\n\r\n            const db = getFirestore();\r\n            const animalRef = doc(db, 'animals', animalId);\r\n            await updateDoc(animalRef, { image: imageUrl });\r\n\r\n            return { animalId, imageUrl };\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    }\r\n);\r\n\r\n/*\r\n* Update animal informations\r\n***    \r\n*/\r\n\r\nexport const updateAnimal = createAsyncThunk(\r\n    'animals/updateAnimal',\r\n    async ({ animalId, animalData }, { rejectWithValue }) => {\r\n        try {\r\n            const db = getFirestore();\r\n            const animalRef = doc(db, 'animals', animalId);\r\n            await updateDoc(animalRef, animalData);\r\n            return { animalId, animalData };\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\nexport const deleteAnimal = createAsyncThunk(\r\n    'animals/deleteAnimal',\r\n    async (animalId, { rejectWithValue }) => {\r\n        try {\r\n            const db = getFirestore();\r\n            const animalRef = doc(db, 'animals', animalId);\r\n            await deleteDoc(animalRef);\r\n            return animalId;\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    }\r\n);\r\n\r\n\r\n/*\r\n* * * Animal Slice\r\n***    \r\n*/\r\n\r\nconst animalsSlice = createSlice({\r\n    name: 'animals',\r\n    initialState: {\r\n        status: 'idle',\r\n        data: [],\r\n        selectedAnimal: null,\r\n        motherAnimal: null,\r\n        motherAnimalsList: null,\r\n        error: null,\r\n    },\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchAnimalsByCitySector.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(fetchAnimalsByCitySector.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.data = action.payload;\r\n            })\r\n            .addCase(fetchAnimalsByCitySector.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.error.message;\r\n            })\r\n\r\n            .addCase(fetchAnimalsBySector.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(fetchAnimalsBySector.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.data = action.payload;\r\n            })\r\n            .addCase(fetchAnimalsBySector.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.error.message;\r\n            })\r\n\r\n            .addCase(fetchAnimalsByCanal.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(fetchAnimalsByCanal.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.data = action.payload;\r\n            })\r\n            .addCase(fetchAnimalsByCanal.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.error.message;\r\n            })\r\n\r\n            .addCase(fetchAnimalById.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(fetchAnimalById.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.selectedAnimal = action.payload;\r\n            })\r\n            .addCase(fetchAnimalById.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.error.message;\r\n            })\r\n\r\n            .addCase(fetchMotherById.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(fetchMotherById.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.motherAnimal = action.payload;\r\n            })\r\n            .addCase(fetchMotherById.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.error.message;\r\n            })\r\n\r\n            .addCase(fetchAnimalsByMother.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(fetchAnimalsByMother.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.motherAnimalsList = action.payload;\r\n            })\r\n            .addCase(fetchAnimalsByMother.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.error.message;\r\n            })\r\n\r\n            .addCase(addAnimal.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(addAnimal.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.data.push(action.payload);\r\n            })\r\n            .addCase(addAnimal.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.payload;\r\n            })\r\n\r\n            .addCase(updateAnimalSectorName.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(updateAnimalSectorName.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.data = state.data.map((animal) => {\r\n                    if (animal.sectorId === action.payload.sectorId) {\r\n                        return { ...animal, sectorName: action.payload.newSectorName };\r\n                    }\r\n                    return animal;\r\n                });\r\n            })\r\n            .addCase(updateAnimalSectorName.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.payload;\r\n            })\r\n            .addCase(removeSectorFromAnimals.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.data = state.data.map((animal) => {\r\n                    if (animal.sectorId === action.payload) {\r\n                        return { ...animal, sectorId: '' };\r\n                    }\r\n                    return animal;\r\n                });\r\n            })\r\n            .addCase(updateAnimalCitySectorName.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(updateAnimalCitySectorName.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.data = state.data.map((animal) => {\r\n                    if (animal.citySectorId === action.payload.citySectorId) {\r\n                        return { ...animal, citySectorName: action.payload.newCitySectorName };\r\n                    }\r\n                    return animal;\r\n                });\r\n            })\r\n            .addCase(updateAnimalCitySectorName.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.payload;\r\n            })\r\n            .addCase(removeCitySectorFromAnimals.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.data = state.data.map((animal) => {\r\n                    if (animal.citySectorId === action.payload) {\r\n                        return { ...animal, citySectorId: '' };\r\n                    }\r\n                    return animal;\r\n                });\r\n            })\r\n            .addCase(deleteAnimal.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(deleteAnimal.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.data = state.data.filter((animal) => animal.id !== action.payload);\r\n            })\r\n            .addCase(deleteAnimal.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.payload;\r\n            })\r\n            .addCase(updateAnimal.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(updateAnimal.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.data = state.data.map((animal) => {\r\n                    if (animal.id === action.payload.animalId) {\r\n                        return { ...animal, ...action.payload.animalData };\r\n                    }\r\n                    return animal;\r\n                });\r\n                if (state.selectedAnimal && state.selectedAnimal.id === action.payload.animalId) {\r\n                    state.selectedAnimal = { ...state.selectedAnimal, ...action.payload.animalData };\r\n                }\r\n            })\r\n            .addCase(updateAnimal.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.payload;\r\n            })\r\n            .addCase(updateAnimalImage.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(updateAnimalImage.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                const { animalId, imageUrl } = action.payload;\r\n                const animal = state.data.find((animal) => animal.id === animalId);\r\n                if (animal) {\r\n                    animal.image = imageUrl;\r\n                }\r\n                if (state.selectedAnimal && state.selectedAnimal.id === animalId) {\r\n                    state.selectedAnimal.image = imageUrl;\r\n                }\r\n            })\r\n            .addCase(updateAnimalImage.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.payload;\r\n            });\r\n    },\r\n});\r\n\r\nexport default animalsSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}