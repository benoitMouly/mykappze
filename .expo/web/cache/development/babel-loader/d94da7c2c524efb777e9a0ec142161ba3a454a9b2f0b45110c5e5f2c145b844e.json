{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useSelector } from \"react-redux\";\nimport { useAppDispatch } from \"../store/store\";\nimport { fetchCities } from \"../features/cities/citySlice\";\nimport { fetchAnimalsBySector, updateAnimalSectorName } from \"../features/animals/animalSlice\";\nimport { deleteSector, updateSector } from \"../features/sectors/sectorSlice\";\nimport { useRoute } from \"@react-navigation/native\";\nimport * as Font from \"expo-font\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport AnimalFilters from \"../components/animals/animalFilter\";\nimport { fetchSectors } from \"../features/sectors/sectorSlice\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport TextInputModal from \"../components/general/TextUpdateModal\";\nimport ConfirmationModal from \"../components/general/ConfirmationModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SectorDetails = function SectorDetails() {\n  var route = useRoute();\n  var dispatch = useAppDispatch();\n  var navigation = useNavigation();\n  var _ref = route.params,\n    id = _ref.id,\n    cityId = _ref.cityId,\n    associationId = _ref.associationId,\n    sectorId = _ref.sectorId;\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    isAuthenticated = _useSelector.isAuthenticated,\n    uid = _useSelector.uid;\n  var _useSelector2 = useSelector(function (state) {\n      return state.associations;\n    }),\n    associations = _useSelector2.data,\n    associationsStatus = _useSelector2.status;\n  var _useSelector3 = useSelector(function (state) {\n      return state.cities;\n    }),\n    cities = _useSelector3.data,\n    citiesStatus = _useSelector3.status;\n  var _useSelector4 = useSelector(function (state) {\n      return state.animals;\n    }),\n    animals = _useSelector4.data,\n    animalsStatus = _useSelector4.status;\n  var _useSelector5 = useSelector(function (state) {\n      return state.associationUsers;\n    }),\n    users = _useSelector5.data,\n    usersStatus = _useSelector5.status;\n  var _useSelector6 = useSelector(function (state) {\n      return state.sectors;\n    }),\n    sectors = _useSelector6.data,\n    sectorsStatus = _useSelector6.status;\n  var city = cities.find(function (city) {\n    return city.id === cityId;\n  });\n  var association = associations.find(function (asso) {\n    return asso.id === associationId;\n  });\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    editableFields = _useState2[0],\n    setEditableFields = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userIsAdmin = _useState4[0],\n    setUserRole = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isOpenBlock1 = _useState6[0],\n    setIsOpenBlock1 = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isOpenBlock2 = _useState8[0],\n    setIsOpenBlock2 = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isOpenBlock3 = _useState10[0],\n    setIsOpenBlock3 = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isOpenBlock4 = _useState12[0],\n    setIsOpenBlock4 = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isCopied = _useState14[0],\n    setIsCopied = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    sectorsList = _useState16[0],\n    setSectors = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    fontsLoaded = _useState18[0],\n    setFontsLoaded = _useState18[1];\n  var archiveType = \"sector\";\n  var sector = sectors.find(function (sector) {\n    return sector.id === sectorId;\n  });\n  var _useState19 = useState(\"\"),\n    _useState20 = _slicedToArray(_useState19, 2),\n    editedSectorName = _useState20[0],\n    setEditedSectorName = _useState20[1];\n  var _useState21 = useState(\"\"),\n    _useState22 = _slicedToArray(_useState21, 2),\n    currentSectorName = _useState22[0],\n    setCurrentSectorName = _useState22[1];\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    isConfirmationVisible = _useState24[0],\n    setConfirmationVisible = _useState24[1];\n  var _useState25 = useState(false),\n    _useState26 = _slicedToArray(_useState25, 2),\n    isTextUpdateVisible = _useState26[0],\n    setTextUpdateVisible = _useState26[1];\n  var _useState27 = useState(false),\n    _useState28 = _slicedToArray(_useState27, 2),\n    isAlertVisible = _useState28[0],\n    setAlertVisible = _useState28[1];\n  var _useState29 = useState(\"\"),\n    _useState30 = _slicedToArray(_useState29, 2),\n    alertMessage = _useState30[0],\n    setAlertMessage = _useState30[1];\n  var _useState31 = useState(false),\n    _useState32 = _slicedToArray(_useState31, 2),\n    isEditVisible = _useState32[0],\n    setEditVisible = _useState32[1];\n  var loadFonts = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      yield Font.loadAsync({\n        \"WixMadeforDisplay-Regular\": require(\"../assets/fonts/WixMadeforDisplay-Regular.ttf\"),\n        \"WixMadeforDisplay-Bold\": require(\"../assets/fonts/WixMadeforDisplay-Bold.otf\")\n      });\n      setFontsLoaded(true);\n    });\n    return function loadFonts() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    loadFonts();\n  }, []);\n  var numSterilizedCats = animals.filter(function (animal) {\n    return animal.isSterilise;\n  }).length;\n  var numNotIdentifiedCats = animals.filter(function (animal) {\n    return !animal.hasIdNumber;\n  }).length;\n  var numIsBelongedCats = animals.filter(function (animal) {\n    return !animal.isBelonged;\n  }).length;\n  useEffect(function () {\n    if (isAuthenticated) {\n      dispatch(fetchSectors(cityId));\n      dispatch(fetchAnimalsBySector(sectorId));\n      dispatch(fetchCities());\n    }\n  }, [dispatch, cityId, isAuthenticated]);\n  useEffect(function () {\n    users.forEach(function (user) {\n      if (user.id === uid) {\n        setUserRole(user.isAdmin);\n      }\n    });\n  }, [users]);\n  var handleCopy = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        yield navigator.clipboard.writeText(id);\n        setIsCopied(true);\n        setTimeout(function () {\n          return setIsCopied(false);\n        }, 2000);\n      } catch (err) {\n        console.error(\"Erreur de copie\", err);\n      }\n    });\n    return function handleCopy() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleDeleteSector = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (sector.id) {\n        setConfirmationVisible(true);\n      }\n    });\n    return function handleDeleteSector() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleConfirmSuppression = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      yield dispatch(deleteSector(sector.id));\n      setConfirmationVisible(false);\n      setAlertMessage(\"Le secteur a été supprimé avec succès\");\n      setAlertVisible(true);\n    });\n    return function handleConfirmSuppression() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var handleEditSector = function () {\n    var _ref6 = _asyncToGenerator(function* (newName) {\n      yield dispatch(updateSector({\n        id: sector.id,\n        name: newName\n      }));\n      yield dispatch(updateAnimalSectorName({\n        sectorId: sector.id,\n        newSectorName: newName\n      }));\n      setCurrentSectorName(newName);\n      console.log(\"EDIT CITY NAME : \", newName);\n      setEditVisible(false);\n    });\n    return function handleEditSector(_x) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    children: [_jsxs(ScrollView, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.header,\n        children: [userIsAdmin && _jsxs(View, {\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n            columnGap: 20\n          },\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return setEditVisible(true);\n            },\n            style: {\n              backgroundColor: '#fff',\n              padding: 5,\n              borderRadius: 50\n            },\n            children: _jsx(Icon, {\n              name: \"create-outline\",\n              size: 24,\n              color: \"#000\"\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return handleDeleteSector(sector.id);\n            },\n            style: {\n              backgroundColor: '#fff',\n              padding: 5,\n              borderRadius: 50\n            },\n            children: _jsx(Icon, {\n              name: \"trash-outline\",\n              size: 24,\n              color: \"#c40030\"\n            })\n          })]\n        }), _jsx(View, {\n          style: styles.header1st,\n          children: _jsxs(Text, {\n            style: styles.title,\n            children: [\"Secteur de : \", sector != null && sector.name ? sector == null ? void 0 : sector.name : \"\"]\n          })\n        }), _jsx(ConfirmationModal, {\n          visible: isConfirmationVisible,\n          onClose: function onClose() {\n            return setConfirmationVisible(false);\n          },\n          onConfirm: handleConfirmSuppression,\n          messageType: \"Voulez-vous vraiment supprimer ce secteur ?\"\n        }), _jsx(TextInputModal, {\n          visible: isEditVisible,\n          onClose: function onClose() {\n            return setEditVisible(false);\n          },\n          onConfirm: handleEditSector,\n          messageType: \"Entrez le nouveau nom du secteur\",\n          onChangeText: setEditedSectorName\n        }), _jsxs(View, {\n          style: styles.sectionShare,\n          children: [_jsx(Text, {\n            style: styles.sectionShare_title,\n            children: \"Partager le canal : \"\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return handleCopy;\n            },\n            style: styles.sectionShare_button,\n            children: _jsx(Text, {\n              style: styles.sectionShare_buttonText,\n              children: association == null ? void 0 : association.id\n            })\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.containerSection,\n        children: [_jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return setIsOpenBlock1(!isOpenBlock1);\n          },\n          style: styles.sectionHeader,\n          children: [_jsxs(Text, {\n            style: styles.sectionTitle,\n            children: [\"Animaux : (\", users.length, \")\"]\n          }), _jsx(Icon, {\n            name: isOpenBlock1 ? \"chevron-down\" : \"chevron-forward\",\n            size: 24,\n            color: \"#000\"\n          })]\n        }), isOpenBlock1 && _jsx(View, {\n          style: styles.section,\n          children: users.map(function (user) {\n            return _jsxs(View, {\n              children: [_jsx(Text, {\n                children: user.name\n              }), _jsx(Text, {\n                children: user.email\n              })]\n            }, user.id);\n          })\n        })]\n      }), _jsx(View, {\n        style: styles.line\n      }), _jsx(AnimalFilters, {\n        animals: animals,\n        archiveType: archiveType,\n        sectorized: sectorsList\n      })]\n    }), userIsAdmin && _jsx(View, {\n      style: styles.footer,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"AddCat\", {\n            associationId: association == null ? void 0 : association.id\n          });\n        },\n        style: styles.sectionBtns_btn,\n        children: _jsxs(View, {\n          style: styles.buttonGroupIcons,\n          children: [_jsx(Image, {\n            source: require(\"../assets/icon-paw.png\"),\n            style: styles.buttonIcon\n          }), _jsx(Text, {\n            style: {\n              color: \"white\"\n            },\n            children: \"+\"\n          })]\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: 0,\n    heigt: \"100%\",\n    marginBottom: 50\n  },\n  header: {\n    flexDirection: \"column\",\n    backgroundColor: \"#2F4F4F\",\n    padding: 30\n  },\n  header1st: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    backgroundColor: \"#2F4F4F\",\n    paddingTop: 20\n  },\n  sectionShare: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#2F4F4F\",\n    color: \"#FFF\"\n  },\n  sectionShare_title: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    marginBottom: 10,\n    color: \"#FFF\",\n    paddingTop: 5,\n    fontFamily: \"WixMadeforDisplay-Bold\"\n  },\n  sectionShare_button: {\n    backgroundColor: \"#fff\",\n    color: \"#000\",\n    padding: 5,\n    marginLeft: 10\n  },\n  sectionShare_buttonText: {\n    color: \"#000\"\n  },\n  sectionBtns: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    rowGap: 40,\n    columnGap: 10,\n    padding: 6,\n    marginTop: 20\n  },\n  sectionBtns_btn: {\n    flexDirection: \"row\",\n    columnGap: 8,\n    backgroundColor: \"#000\",\n    color: \"#FFF\",\n    padding: 10,\n    borderRadius: 2\n  },\n  sectionBtns_btnText: {\n    color: \"#FFF\",\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontSize: 10\n  },\n  image: {\n    width: 50,\n    height: 50,\n    marginRight: 10,\n    borderRadius: 50\n  },\n  title: {\n    color: \"#FFF\",\n    fontSize: 32,\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontWeight: \"600\"\n  },\n  containerSection: {\n    padding: 10\n  },\n  section: {\n    marginBottom: 20,\n    padding: 25,\n    paddingTop: 0\n  },\n  sectionHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 25,\n    paddingBottom: 5\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    marginBottom: 10\n  },\n  text: {\n    fontSize: 14\n  },\n  buttonGroupIcons: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  buttonIcon: {\n    marginRight: 5,\n    width: 15,\n    height: 15\n  },\n  addCat: {\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  iconAddCat: {\n    flexDirection: \"row\",\n    marginTop: 20\n  },\n  sectionCity: {\n    flexDirection: \"column\",\n    rowGap: 5,\n    justifyContent: \"center\"\n  },\n  cityList: {\n    maxWidth: 200\n  },\n  sectionBtns_btnCity: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    backgroundColor: \"#000\",\n    color: \"#FFF\",\n    padding: 10,\n    borderRadius: 2\n  },\n  sectionTitleCity: {\n    color: \"#FFF\",\n    fontSize: 14,\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontWeight: \"600\"\n  },\n  line: {\n    height: 2,\n    backgroundColor: \"#000\",\n    alignSelf: \"center\",\n    marginVertical: 20,\n    width: \"80%\"\n  },\n  footer: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    height: 60,\n    backgroundColor: \"#000\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    padding: 10,\n    marginTop: 10\n  }\n});\nexport default SectorDetails;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","TouchableOpacity","Image","ScrollView","useSelector","useAppDispatch","fetchCities","fetchAnimalsBySector","updateAnimalSectorName","deleteSector","updateSector","useRoute","Font","Icon","AnimalFilters","fetchSectors","useNavigation","TextInputModal","ConfirmationModal","jsx","_jsx","jsxs","_jsxs","SectorDetails","route","dispatch","navigation","_ref","params","id","cityId","associationId","sectorId","_useSelector","state","auth","isAuthenticated","uid","_useSelector2","associations","data","associationsStatus","status","_useSelector3","cities","citiesStatus","_useSelector4","animals","animalsStatus","_useSelector5","associationUsers","users","usersStatus","_useSelector6","sectors","sectorsStatus","city","find","association","asso","_useState","_useState2","_slicedToArray","editableFields","setEditableFields","_useState3","_useState4","userIsAdmin","setUserRole","_useState5","_useState6","isOpenBlock1","setIsOpenBlock1","_useState7","_useState8","isOpenBlock2","setIsOpenBlock2","_useState9","_useState10","isOpenBlock3","setIsOpenBlock3","_useState11","_useState12","isOpenBlock4","setIsOpenBlock4","_useState13","_useState14","isCopied","setIsCopied","_useState15","_useState16","sectorsList","setSectors","_useState17","_useState18","fontsLoaded","setFontsLoaded","archiveType","sector","_useState19","_useState20","editedSectorName","setEditedSectorName","_useState21","_useState22","currentSectorName","setCurrentSectorName","_useState23","_useState24","isConfirmationVisible","setConfirmationVisible","_useState25","_useState26","isTextUpdateVisible","setTextUpdateVisible","_useState27","_useState28","isAlertVisible","setAlertVisible","_useState29","_useState30","alertMessage","setAlertMessage","_useState31","_useState32","isEditVisible","setEditVisible","loadFonts","_ref2","_asyncToGenerator","loadAsync","require","apply","arguments","numSterilizedCats","filter","animal","isSterilise","length","numNotIdentifiedCats","hasIdNumber","numIsBelongedCats","isBelonged","forEach","user","isAdmin","handleCopy","_ref3","navigator","clipboard","writeText","setTimeout","err","console","error","handleDeleteSector","_ref4","handleConfirmSuppression","_ref5","handleEditSector","_ref6","newName","name","newSectorName","log","_x","children","style","styles","container","header","display","flexDirection","justifyContent","columnGap","onPress","backgroundColor","padding","borderRadius","size","color","header1st","title","visible","onClose","onConfirm","messageType","onChangeText","sectionShare","sectionShare_title","sectionShare_button","sectionShare_buttonText","containerSection","sectionHeader","sectionTitle","section","map","email","line","sectorized","footer","navigate","sectionBtns_btn","buttonGroupIcons","source","buttonIcon","create","heigt","marginBottom","alignItems","paddingTop","fontSize","fontWeight","fontFamily","marginLeft","sectionBtns","rowGap","marginTop","sectionBtns_btnText","image","width","height","marginRight","paddingBottom","text","addCat","iconAddCat","sectionCity","cityList","maxWidth","sectionBtns_btnCity","sectionTitleCity","alignSelf","marginVertical","position","bottom","left","right"],"sources":["C:/Users/Benoitm/Documents/Coding/Kappze/MyKappze/src/pages/SectorDetails.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Image,\r\n  Touchable,\r\n  ScrollView,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useAppDispatch } from \"../store/store\";\r\nimport { fetchCities, fetchAllSectors } from \"../features/cities/citySlice\";\r\nimport {\r\n  fetchAnimalsByAssociation,\r\n  fetchAnimalsByCity,\r\n  fetchAnimalsBySector,\r\n  updateAnimalSectorName,\r\n} from \"../features/animals/animalSlice\";\r\nimport {\r\n  deleteSector,\r\n  fetchSectorById,\r\n  updateSector,\r\n} from \"../features/sectors/sectorSlice\";\r\nimport { fetchAssociationUsers } from \"../features/associations/associationUsersSlice\";\r\nimport { useRoute } from \"@react-navigation/native\";\r\nimport * as Font from \"expo-font\";\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\nimport AnimalList from \"../components/animals/animalList\";\r\nimport AnimalFilters from \"../components/animals/animalFilter\";\r\nimport AddCityModal from \"../components/cities/addCityModal\";\r\nimport AddSectorModal from \"../components/sectors/addSectorModal\";\r\nimport AddCat from \"./AddCat\";\r\nimport { fetchSectors } from \"../features/sectors/sectorSlice\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport TextInputModal from \"../components/general/TextUpdateModal\";\r\nimport ConfirmationModal from \"../components/general/ConfirmationModal\";\r\n\r\n// définir les interfaces\r\ninterface Association {\r\n  id: string;\r\n  data: any[]; // Changez `any` en type approprié\r\n  // Autres propriétés...\r\n}\r\n\r\ninterface Animal {\r\n  isSterilise: boolean;\r\n  hasIdNumber: boolean;\r\n  isBelonged: boolean;\r\n  // Ajoutez d'autres champs ici si nécessaire\r\n}\r\n\r\ninterface User {\r\n  id: string;\r\n  isAdmin: boolean;\r\n  // Ajoutez d'autres champs ici si nécessaire\r\n}\r\n\r\ninterface City {\r\n  // Propriétés pour la ville...\r\n}\r\n\r\ninterface Sector {\r\n  // Propriétés pour le secteur...\r\n}\r\n\r\ninterface DataState<T> {\r\n  data: T[];\r\n  status: \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n  error: string | null;\r\n  // Ajoutez ici d'autres champs si nécessaire\r\n}\r\n\r\n// Utilisez cette interface dans l'interface RootState\r\ninterface RootState {\r\n  associations: DataState<Association>;\r\n  cities: DataState<City>;\r\n  animals: DataState<Animal>;\r\n  associationUsers: DataState<User>;\r\n  sectors: DataState<Sector>;\r\n  auth: {\r\n    isAuthenticated: boolean;\r\n    uid: string;\r\n  };\r\n}\r\n\r\ninterface RouteParams {\r\n  id: string;\r\n  associationId: string;\r\n  cityId: string;\r\n}\r\n\r\ntype RootStackParamList = {\r\n  AddCat: undefined;\r\n};\r\n\r\ntype AddCatScreenNavigationProp = StackNavigationProp<\r\n  RootStackParamList,\r\n  \"AddCat\"\r\n>;\r\n\r\nconst SectorDetails: React.FC = () => {\r\n  const route = useRoute();\r\n  const dispatch = useAppDispatch();\r\n  const navigation = useNavigation<AddCatScreenNavigationProp>();\r\n\r\n  const { id, cityId, associationId, sectorId } = route.params as RouteParams;\r\n\r\n  const { isAuthenticated, uid } = useSelector(\r\n    (state: RootState) => state.auth\r\n  );\r\n  const { data: associations, status: associationsStatus } = useSelector(\r\n    (state: RootState) => state.associations\r\n  );\r\n  const { data: cities, status: citiesStatus } = useSelector(\r\n    (state: RootState) => state.cities\r\n  );\r\n  const { data: animals, status: animalsStatus } = useSelector(\r\n    (state: RootState) => state.animals\r\n  );\r\n  const { data: users, status: usersStatus } = useSelector(\r\n    (state: RootState) => state.associationUsers\r\n  );\r\n  const { data: sectors, status: sectorsStatus } = useSelector(\r\n    (state: RootState) => state.sectors\r\n  );\r\n\r\n  const city = cities.find((city) => city.id === cityId);\r\n  const association = associations.find((asso) => asso.id === associationId);\r\n\r\n  const [editableFields, setEditableFields] = useState<string[]>([]);\r\n  const [userIsAdmin, setUserRole] = useState<boolean>(false);\r\n  const [isOpenBlock1, setIsOpenBlock1] = useState<boolean>(true);\r\n  const [isOpenBlock2, setIsOpenBlock2] = useState<boolean>(false);\r\n  const [isOpenBlock3, setIsOpenBlock3] = useState<boolean>(false);\r\n  const [isOpenBlock4, setIsOpenBlock4] = useState<boolean>(false);\r\n  const [isCopied, setIsCopied] = useState<boolean>(false);\r\n  const [sectorsList, setSectors] = useState<Sector[]>([]);\r\n  const [fontsLoaded, setFontsLoaded] = useState(false);\r\n  const archiveType = \"sector\";\r\n  const sector = sectors.find((sector) => sector.id === sectorId);\r\n\r\n  const [editedSectorName, setEditedSectorName] = useState(\"\");\r\n  const [currentSectorName, setCurrentSectorName] = useState(\"\");\r\n  const [isConfirmationVisible, setConfirmationVisible] = useState(false);\r\n  const [isTextUpdateVisible, setTextUpdateVisible] = useState(false);\r\n  const [isAlertVisible, setAlertVisible] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const [isEditVisible, setEditVisible] = useState(false);\r\n\r\n  const loadFonts = async () => {\r\n    await Font.loadAsync({\r\n      \"WixMadeforDisplay-Regular\": require(\"../assets/fonts/WixMadeforDisplay-Regular.ttf\"),\r\n      \"WixMadeforDisplay-Bold\": require(\"../assets/fonts/WixMadeforDisplay-Bold.otf\"), // charge également la variante en gras\r\n    });\r\n    setFontsLoaded(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadFonts();\r\n  }, []);\r\n\r\n  //   useEffect(() => {\r\n  //     dispatch(fetchSectors(cityId));\r\n  //   }, [isAuthenticated]);\r\n\r\n  const numSterilizedCats = animals.filter(\r\n    (animal) => animal.isSterilise\r\n  ).length;\r\n  const numNotIdentifiedCats = animals.filter(\r\n    (animal) => !animal.hasIdNumber\r\n  ).length;\r\n  const numIsBelongedCats = animals.filter(\r\n    (animal) => !animal.isBelonged\r\n  ).length;\r\n  // const archiveType = linkedCityId;\r\n\r\n  //   useEffect(() => {\r\n  //     if (isAuthenticated) {\r\n  //       dispatch(fetchCities());\r\n  //       // dispatch(fetchAnimalsByAssociation(associationId));\r\n  //       dispatch(fetchAssociationUsers(associationId));\r\n  //       dispatch(fetchAnimalsByCity(cityId))\r\n  //     }\r\n  //   }, [dispatch, isAuthenticated]);\r\n\r\n  // useEffect(() => {\r\n  //     if (isAuthenticated) {\r\n  //       dispatch(fetchCities());\r\n  //       // dispatch(fetchAnimalsByAssociation(associationId));\r\n  //       dispatch(fetchAssociationUsers(associationId));\r\n  //       dispatch(fetchAnimalsByCity(cityId))\r\n  //     }\r\n  //   }, [cityId, isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      dispatch(fetchSectors(cityId));\r\n      dispatch(fetchAnimalsBySector(sectorId))\r\n      dispatch(fetchCities());\r\n    }\r\n  }, [dispatch, cityId, isAuthenticated]);\r\n\r\n  //   useEffect(() => {\r\n  //     const fetchData = async () => {\r\n  //       if (isAuthenticated) {\r\n  //         // console.log(association)\r\n  //         const sectores = await fetchAllSectors(cities, dispatch);\r\n  //         setSectors(sectores);\r\n  //       }\r\n  //     };\r\n\r\n  //     // fetchData();\r\n  //   }, [association, cities, isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    users.forEach((user) => {\r\n      if (user.id === uid) {\r\n        setUserRole(user.isAdmin);\r\n      }\r\n    });\r\n  }, [users]);\r\n\r\n  // if (sectorsStatus === 'loading' || animalsStatus === 'loading' || associationsStatus === 'loading' || usersStatus === 'loading' || citiesStatus === 'loading') {\r\n  //     return <LoadingPage />;\r\n  // }\r\n\r\n  const handleCopy = async () => {\r\n    try {\r\n      await navigator.clipboard.writeText(id);\r\n      setIsCopied(true);\r\n      setTimeout(() => setIsCopied(false), 2000); // Réinitialiser après 2 secondes\r\n    } catch (err) {\r\n      console.error(\"Erreur de copie\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSector = async () => {\r\n    // console.log(id);\r\n    if (sector.id) {\r\n      setConfirmationVisible(true); // Affiche la modale de confirmation\r\n    }\r\n  };\r\n\r\n  const handleConfirmSuppression = async () => {\r\n    // console.log(id)\r\n    await dispatch(deleteSector(sector.id));\r\n    setConfirmationVisible(false); // Ferme la modale de confirmation\r\n    setAlertMessage(\"Le secteur a été supprimé avec succès\"); // Définir le message d'alerte\r\n    setAlertVisible(true); // Affiche la modale d'alerte\r\n  };\r\n\r\n  const handleEditSector = async (newName) => {\r\n    await dispatch(updateSector({ id: sector.id, name: newName }));\r\n    await dispatch(\r\n      updateAnimalSectorName({ sectorId: sector.id, newSectorName: newName })\r\n    );\r\n    setCurrentSectorName(newName); // Update the current city name\r\n    console.log(\"EDIT CITY NAME : \", newName);\r\n    setEditVisible(false);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}>\r\n      {userIsAdmin && (\r\n          <View style={{display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', columnGap: 20}}>\r\n\r\n            <TouchableOpacity onPress={() => setEditVisible(true)} style={{backgroundColor: '#fff', padding: 5, borderRadius: 50}}>\r\n                  <Icon name=\"create-outline\" size={24} color=\"#000\" />\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity  onPress={() => handleDeleteSector(sector.id)} style={{backgroundColor: '#fff', padding: 5, borderRadius: 50}}>\r\n            <Icon name=\"trash-outline\" size={24} color=\"#c40030\" />\r\n          </TouchableOpacity>\r\n\r\n          </View>\r\n        )}\r\n        <View style={styles.header1st}>\r\n          <Text style={styles.title}>\r\n            Secteur de : {sector?.name ? sector?.name : \"\"}\r\n          </Text>\r\n        </View>\r\n\r\n\r\n\r\n        <ConfirmationModal\r\n          visible={isConfirmationVisible}\r\n          onClose={() => setConfirmationVisible(false)}\r\n          onConfirm={handleConfirmSuppression}\r\n          messageType={\"Voulez-vous vraiment supprimer ce secteur ?\"}\r\n        />\r\n\r\n        <TextInputModal\r\n          visible={isEditVisible}\r\n          onClose={() => setEditVisible(false)} // Fermeture de la modale\r\n          onConfirm={handleEditSector}\r\n          messageType={\"Entrez le nouveau nom du secteur\"}\r\n          onChangeText={setEditedSectorName}\r\n        />\r\n\r\n        <View style={styles.sectionShare}>\r\n          <Text style={styles.sectionShare_title}>Partager le canal : </Text>\r\n          <TouchableOpacity\r\n            onPress={() => handleCopy}\r\n            style={styles.sectionShare_button}\r\n          >\r\n            <Text style={styles.sectionShare_buttonText}>\r\n              {association?.id}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.containerSection}>\r\n        <TouchableOpacity\r\n          onPress={() => setIsOpenBlock1(!isOpenBlock1)}\r\n          style={styles.sectionHeader}\r\n        >\r\n          <Text style={styles.sectionTitle}>Animaux : ({users.length})</Text>\r\n          <Icon\r\n            name={isOpenBlock1 ? \"chevron-down\" : \"chevron-forward\"}\r\n            size={24}\r\n            color=\"#000\"\r\n          />\r\n        </TouchableOpacity>\r\n        {isOpenBlock1 && (\r\n          <View style={styles.section}>\r\n            {users.map((user) => (\r\n              <View key={user.id}>\r\n                <Text>{user.name}</Text>\r\n                <Text>{user.email}</Text>\r\n              </View>\r\n            ))}\r\n          </View>\r\n        )}\r\n      </View>\r\n      <View style={styles.line} />\r\n\r\n      <AnimalFilters\r\n        animals={animals}\r\n        archiveType={archiveType}\r\n        sectorized={sectorsList}\r\n      />\r\n    </ScrollView>\r\n    {userIsAdmin && (\r\n      <View style={styles.footer}>\r\n      <TouchableOpacity\r\n        onPress={() =>\r\n          navigation.navigate(\"AddCat\", { associationId: association?.id })\r\n        }\r\n        style={styles.sectionBtns_btn}\r\n      >\r\n        <View style={styles.buttonGroupIcons}>\r\n          <Image\r\n            source={require(\"../assets/icon-paw.png\")}\r\n            style={styles.buttonIcon}\r\n          />\r\n          <Text style={{ color: \"white\" }}>+</Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    </View>\r\n)}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 0,\r\n    heigt: \"100%\",\r\n    marginBottom: 50\r\n  },\r\n  header: {\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"#2F4F4F\",\r\n    padding: 30,\r\n  },\r\n  header1st: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 20,\r\n    backgroundColor: \"#2F4F4F\",\r\n    paddingTop: 20,\r\n  },\r\n  sectionShare: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#2F4F4F\",\r\n    color: \"#FFF\",\r\n    // padding: 5\r\n  },\r\n  sectionShare_title: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 10,\r\n    color: \"#FFF\",\r\n    paddingTop: 5,\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n  },\r\n  sectionShare_button: {\r\n    backgroundColor: \"#fff\",\r\n    color: \"#000\",\r\n    padding: 5,\r\n    marginLeft: 10\r\n  },\r\n  sectionShare_buttonText: {\r\n    color: \"#000\",\r\n  },\r\n  sectionBtns: {\r\n    flexDirection: \"row\",\r\n    // flexWrap: \"nowrap\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    rowGap: 40,\r\n    columnGap: 10,\r\n    padding: 6,\r\n    marginTop: 20,\r\n  },\r\n  sectionBtns_btn: {\r\n    flexDirection: \"row\",\r\n    columnGap: 8,\r\n    backgroundColor: \"#000\",\r\n    color: \"#FFF\",\r\n    padding: 10,\r\n    borderRadius: 2,\r\n  },\r\n  sectionBtns_btnText: {\r\n    color: \"#FFF\",\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    fontSize: 10,\r\n  },\r\n  image: {\r\n    width: 50,\r\n    height: 50,\r\n    marginRight: 10,\r\n    borderRadius: 50,\r\n  },\r\n  title: {\r\n    color: \"#FFF\",\r\n    fontSize: 32,\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    fontWeight: \"600\",\r\n  },\r\n\r\n  containerSection: {\r\n    padding: 10,\r\n    // backgroundColor: '#C40030',\r\n    // margin: 5\r\n  },\r\n\r\n  section: {\r\n    marginBottom: 20,\r\n    padding: 25,\r\n    paddingTop: 0,\r\n    // borderWidth: 2,\r\n  },\r\n  sectionHeader: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: 25,\r\n    paddingBottom: 5,\r\n  },\r\n\r\n  sectionTitle: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 10,\r\n  },\r\n  text: {\r\n    fontSize: 14,\r\n  },\r\n  buttonGroupIcons: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  buttonIcon: {\r\n    marginRight: 5,\r\n    width: 15,\r\n    height: 15,\r\n  },\r\n  addCat: {\r\n    flexDirection: \"column\",\r\n    // justifyContent: 'center',\r\n    alignItems: \"center\",\r\n    // width: '100%'\r\n  },\r\n  iconAddCat: {\r\n    flexDirection: \"row\",\r\n    marginTop: 20,\r\n  },\r\n  sectionCity: {\r\n    flexDirection: \"column\",\r\n    rowGap: 5,\r\n    // alignItems: 'center',\r\n    justifyContent: \"center\",\r\n  },\r\n  cityList: {\r\n    maxWidth: 200,\r\n    // backgroundColor: 'blue'\r\n  },\r\n  sectionBtns_btnCity: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    backgroundColor: \"#000\",\r\n    color: \"#FFF\",\r\n    padding: 10,\r\n    borderRadius: 2,\r\n  },\r\n  sectionTitleCity: {\r\n    color: \"#FFF\",\r\n    fontSize: 14,\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    fontWeight: \"600\",\r\n  },\r\n  line: {\r\n    height: 2,\r\n    backgroundColor: \"#000\", // change this to fit your design\r\n    alignSelf: \"center\",\r\n    marginVertical: 20, // space above and below the line\r\n    width: \"80%\", // change this to fit your design\r\n  },\r\n  footer: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    height: 60, // Vous pouvez modifier cette valeur en fonction de vos besoins\r\n    backgroundColor: \"#000\", // Pour la visibilité\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\", // Pour espacer les boutons\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    marginTop: 10,\r\n  },\r\n});\r\n\r\nexport default SectorDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}