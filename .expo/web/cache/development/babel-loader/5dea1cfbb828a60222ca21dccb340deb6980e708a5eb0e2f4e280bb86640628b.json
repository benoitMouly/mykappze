{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { collection, addDoc, getDocs, getDoc, doc, getFirestore, deleteDoc, updateDoc, serverTimestamp } from 'firebase/firestore';\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport var fetchComments = createAsyncThunk('comments/fetchComments', function () {\n  var _ref2 = _asyncToGenerator(function* (animalId, _ref) {\n    var rejectWithValue = _ref.rejectWithValue;\n    try {\n      var db = getFirestore();\n      var querySnapshot = yield getDocs(collection(db, 'animals', animalId, 'commentaires'));\n      var comments = querySnapshot.docs.map(function (doc) {\n        return _objectSpread({\n          id: doc.id\n        }, doc.data());\n      });\n      comments.forEach(function (comment) {\n        comment.horodatage = comment.horodatage.toDate().toISOString();\n      });\n      return comments;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  });\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nexport var addComment = createAsyncThunk('comments/addComment', function () {\n  var _ref5 = _asyncToGenerator(function* (_ref3, _ref4) {\n    var animalId = _ref3.animalId,\n      comment = _ref3.comment,\n      uid = _ref3.uid;\n    var rejectWithValue = _ref4.rejectWithValue;\n    try {\n      var db = getFirestore();\n      var docRef = yield addDoc(collection(db, 'animals', animalId, 'commentaires'), _objectSpread(_objectSpread({}, comment), {}, {\n        horodatage: serverTimestamp(),\n        authorId: uid\n      }));\n      var docSnap = yield getDoc(docRef);\n      var newComment = _objectSpread({\n        id: docSnap.id\n      }, docSnap.data());\n      newComment.horodatage = newComment.horodatage.toDate().toISOString();\n      return newComment;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  });\n  return function (_x3, _x4) {\n    return _ref5.apply(this, arguments);\n  };\n}());\nexport var addCommentToState = createSlice({\n  name: 'comments/addCommentToState',\n  initialState: [],\n  reducers: {},\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(addCommentToState, function (state, action) {\n      state.push(action.payload);\n    });\n  }\n}).reducer;\nexport var deleteComment = createAsyncThunk('comments/deleteComment', function () {\n  var _ref8 = _asyncToGenerator(function* (_ref6, _ref7) {\n    var animalId = _ref6.animalId,\n      commentId = _ref6.commentId;\n    var rejectWithValue = _ref7.rejectWithValue;\n    try {\n      var db = getFirestore();\n      yield deleteDoc(doc(db, 'animals', animalId, 'commentaires', commentId));\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  });\n  return function (_x5, _x6) {\n    return _ref8.apply(this, arguments);\n  };\n}());\nexport var updateComment = createAsyncThunk('comments/updateComment', function () {\n  var _ref11 = _asyncToGenerator(function* (_ref9, _ref10) {\n    var animalId = _ref9.animalId,\n      commentId = _ref9.commentId,\n      updatedText = _ref9.updatedText;\n    var rejectWithValue = _ref10.rejectWithValue,\n      getState = _ref10.getState;\n    try {\n      var db = getFirestore();\n      var commentRef = doc(db, 'animals', animalId, 'commentaires', commentId);\n      yield updateDoc(commentRef, {\n        texte: updatedText,\n        horodatage: serverTimestamp()\n      });\n      var commentSnap = yield getDoc(commentRef);\n      var updatedComment = _objectSpread({\n        id: commentSnap.id\n      }, commentSnap.data());\n      updatedComment.horodatage = updatedComment.horodatage.toDate().toISOString();\n      return updatedComment;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  });\n  return function (_x7, _x8) {\n    return _ref11.apply(this, arguments);\n  };\n}());\nvar commentsSlice = createSlice({\n  name: 'comments',\n  initialState: [],\n  reducers: {},\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(fetchComments.fulfilled, function (state, action) {\n      return action.payload;\n    }).addCase(addComment.fulfilled, function (state, action) {\n      state.push(action.payload);\n    }).addCase(deleteComment.fulfilled, function (state, action) {\n      return state.filter(function (comment) {\n        return comment.id !== action.meta.arg.commentId;\n      });\n    }).addCase(updateComment.fulfilled, function (state, action) {\n      var index = state.findIndex(function (comment) {\n        return comment.id === action.payload.id;\n      });\n      if (index !== -1) {\n        state[index] = action.payload;\n      }\n    });\n  }\n});\nexport default commentsSlice.reducer;","map":{"version":3,"names":["collection","addDoc","getDocs","getDoc","doc","getFirestore","deleteDoc","updateDoc","serverTimestamp","createSlice","createAsyncThunk","fetchComments","_ref2","_asyncToGenerator","animalId","_ref","rejectWithValue","db","querySnapshot","comments","docs","map","_objectSpread","id","data","forEach","comment","horodatage","toDate","toISOString","error","message","_x","_x2","apply","arguments","addComment","_ref5","_ref3","_ref4","uid","docRef","authorId","docSnap","newComment","_x3","_x4","addCommentToState","name","initialState","reducers","extraReducers","builder","addCase","state","action","push","payload","reducer","deleteComment","_ref8","_ref6","_ref7","commentId","_x5","_x6","updateComment","_ref11","_ref9","_ref10","updatedText","getState","commentRef","texte","commentSnap","updatedComment","_x7","_x8","commentsSlice","fulfilled","filter","meta","arg","index","findIndex"],"sources":["C:/Users/Benoitm/Documents/Coding/Kappze/MyKappze/src/features/animals/commentsSlice.tsx"],"sourcesContent":["\r\nimport { collection, addDoc, getDocs, getDoc, orderBy, doc, getFirestore, deleteDoc, updateDoc,serverTimestamp } from 'firebase/firestore';\r\n\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n// Initialisez Firebase\r\n\r\n\r\n\r\n// Actions asynchrones\r\nexport const fetchComments = createAsyncThunk(\r\n  'comments/fetchComments',\r\n  async (animalId, { rejectWithValue }) => {\r\n    try {\r\n      const db = getFirestore();\r\n      const querySnapshot = await getDocs(collection(db, 'animals', animalId, 'commentaires'));\r\n\r\n      const comments = querySnapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n\r\n      // Convertir les Timestamps en chaînes ISO\r\n      comments.forEach(comment => {\r\n        comment.horodatage = comment.horodatage.toDate().toISOString();\r\n      });\r\n\r\n      return comments;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\n\r\nexport const addComment = createAsyncThunk(\r\n  'comments/addComment',\r\n  async ({ animalId, comment, uid }, { rejectWithValue }) => {\r\n    try {\r\n      const db = getFirestore();\r\n      const docRef = await addDoc(collection(db, 'animals', animalId, 'commentaires'), {\r\n        ...comment,\r\n        horodatage: serverTimestamp(),\r\n        authorId: uid\r\n      });\r\n\r\n      // Obtenir le nouveau commentaire ajouté avec son ID\r\n      const docSnap = await getDoc(docRef);\r\n      const newComment = { id: docSnap.id, ...docSnap.data() };\r\n\r\n      // Convertir le Timestamp en chaîne ISO\r\n      newComment.horodatage = newComment.horodatage.toDate().toISOString();\r\n\r\n      return newComment;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\n\r\n\r\nexport const addCommentToState = createSlice({\r\n  name: 'comments/addCommentToState',\r\n  initialState: [],\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(addCommentToState, (state, action) => {\r\n      state.push(action.payload);\r\n    });\r\n  },\r\n}).reducer;\r\n\r\n\r\n\r\nexport const deleteComment = createAsyncThunk(\r\n  'comments/deleteComment',\r\n  async ({ animalId, commentId }, { rejectWithValue }) => {\r\n    try {\r\n      const db = getFirestore();\r\n      await deleteDoc(doc(db, 'animals', animalId, 'commentaires', commentId));\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\n\r\nexport const updateComment = createAsyncThunk(\r\n  'comments/updateComment',\r\n  async ({ animalId, commentId, updatedText }, { rejectWithValue, getState }) => {\r\n    try {\r\n      const db = getFirestore();\r\n      const commentRef = doc(db, 'animals', animalId, 'commentaires', commentId);\r\n\r\n      await updateDoc(commentRef, {\r\n        texte: updatedText,\r\n        horodatage: serverTimestamp(),\r\n      });\r\n\r\n      // Get the updated comment\r\n      const commentSnap = await getDoc(commentRef);\r\n      const updatedComment = { id: commentSnap.id, ...commentSnap.data() };\r\n\r\n      // Convert the Timestamp to ISO string\r\n      updatedComment.horodatage = updatedComment.horodatage.toDate().toISOString();\r\n\r\n      return updatedComment;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\n\r\n\r\n// Slice\r\nconst commentsSlice = createSlice({\r\n  name: 'comments',\r\n  initialState: [],\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchComments.fulfilled, (state, action) => {\r\n        return action.payload;\r\n      })\r\n      .addCase(addComment.fulfilled, (state, action) => {\r\n        \r\n        // fetchComments(action.meta.arg.animalId);\r\n        state.push(action.payload);\r\n      })\r\n      .addCase(deleteComment.fulfilled, (state, action) => {\r\n        return state.filter(comment => comment.id !== action.meta.arg.commentId);\r\n      })\r\n      .addCase(updateComment.fulfilled, (state, action) => {\r\n        const index = state.findIndex((comment) => comment.id === action.payload.id);\r\n        if (index !== -1) {\r\n          state[index] = action.payload;\r\n        }\r\n      })\r\n  },\r\n});\r\n\r\nexport default commentsSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}