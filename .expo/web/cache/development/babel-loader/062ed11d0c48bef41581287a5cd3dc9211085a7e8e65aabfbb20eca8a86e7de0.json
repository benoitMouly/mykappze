{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport authReducer from \"../features/user/userSlice\";\nimport canalsReducer from \"../features/canals/canalSlice.tsx\";\nimport { useSelector } from 'react-redux';\nimport citiesSectorReducer from \"../features/citiesSector/citySectorSlice\";\nimport sectorsReducer from \"../features/sectors/sectorSlice\";\nimport animalsReducer from \"../features/animals/animalSlice\";\nimport canalsUsersReducer from \"../features/canals/canalUsersSlice\";\nimport notificationSlice from \"../features/notifications/notificationSlice.tsx\";\nimport commentsReducer from \"../features/animals/commentsSlice.tsx\";\nexport var store = configureStore({\n  reducer: {\n    auth: authReducer,\n    canals: canalsReducer,\n    citiesSector: citiesSectorReducer,\n    animals: animalsReducer,\n    sectors: sectorsReducer,\n    canalUsers: canalsUsersReducer,\n    notifications: notificationSlice,\n    comments: commentsReducer\n  }\n});\nexport var useAppDispatch = function useAppDispatch() {\n  return useDispatch();\n};\nexport var useAppSelector = useSelector;","map":{"version":3,"names":["configureStore","useDispatch","authReducer","canalsReducer","useSelector","citiesSectorReducer","sectorsReducer","animalsReducer","canalsUsersReducer","notificationSlice","commentsReducer","store","reducer","auth","canals","citiesSector","animals","sectors","canalUsers","notifications","comments","useAppDispatch","useAppSelector"],"sources":["C:/Users/Benoitm/Documents/Coding/Kappze/MyKappze/src/store/store.tsx"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport { useDispatch } from 'react-redux'\r\nimport authReducer from '../features/user/userSlice';\r\nimport canalsReducer from '../features/canals/canalSlice.tsx';\r\nimport { useSelector, TypedUseSelectorHook } from 'react-redux';\r\nimport citiesSectorReducer from '../features/citiesSector/citySectorSlice';\r\nimport sectorsReducer from '../features/sectors/sectorSlice';\r\nimport animalsReducer from '../features/animals/animalSlice';\r\nimport canalsUsersReducer from '../features/canals/canalUsersSlice';\r\nimport notificationSlice from '../features/notifications/notificationSlice.tsx';\r\nimport commentsReducer from '../features/animals/commentsSlice.tsx'\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        auth: authReducer,\r\n        canals: canalsReducer,\r\n        citiesSector: citiesSectorReducer,\r\n        animals: animalsReducer,\r\n        sectors: sectorsReducer,\r\n        canalUsers: canalsUsersReducer,\r\n        notifications: notificationSlice,\r\n        comments: commentsReducer\r\n    },\r\n    // devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\ntype AppDispatch = typeof store.dispatch\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,WAAW;AAClB,OAAOC,mBAAmB;AAC1B,SAASC,WAAW,QAA8B,aAAa;AAC/D,OAAOC,aAAa;AACpB,OAAOC,cAAc;AACrB,OAAOC,cAAc;AACrB,OAAOC,wBAAwB;AAC/B,OAAOC,iBAAiB;AACxB,OAAOC,eAAe;AAEtB,OAAO,IAAMC,KAAK,GAAGX,cAAc,CAAC;EAChCY,OAAO,EAAE;IACLC,IAAI,EAAEX,WAAW;IACjBY,YAAY,EAAEX,mBAAmB;IACjCY,MAAM,EAAEV,aAAa;IACrBW,OAAO,EAAET,cAAc;IACvBU,OAAO,EAAEX,cAAc;IACvBY,gBAAgB,EAAEV,wBAAwB;IAC1CW,aAAa,EAAEV,iBAAiB;IAChCW,QAAQ,EAAEV;EACd;AAEJ,CAAC,CAAC;AAKF,OAAO,IAAMW,cAAc,GAAG,SAAjBA,cAAcA,CAAA;EAAA,OAASpB,WAAW,CAAc,CAAC;AAAA;AAC9D,OAAO,IAAMqB,cAA+C,GAAGlB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}