{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { createSlice, createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\nimport { registerForPushNotificationsAsync } from \"../../../App\";\nimport { createUserWithEmailAndPassword, getAuth, signInWithEmailAndPassword, sendPasswordResetEmail, updateEmail as updateEmailAuth, updatePassword as updatePasswordAuth, signOut, deleteUser as deleteAuthUser } from \"firebase/auth\";\nimport { updateDoc, getFirestore, doc, getDoc, collection, query, where, getDocs, setDoc, deleteDoc, addDoc } from \"firebase/firestore\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nexport var createAndSendNotification = createAsyncThunk('notifications/createAndSend', function () {\n  var _ref2 = _asyncToGenerator(function* (_ref, thunkAPI) {\n    var userIds = _ref.userIds,\n      message = _ref.message;\n    try {\n      var db = getFirestore();\n      var notificationsCollection = collection(db, 'notifications');\n      yield addDoc(notificationsCollection, {\n        userIds: userIds,\n        message: message,\n        view: false,\n        date: Date.now()\n      });\n    } catch (error) {\n      console.log(error);\n      return thunkAPI.rejectWithValue(error.toString());\n    }\n  });\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nexport var loginUser = createAsyncThunk(\"auth/loginUser\", function () {\n  var _ref5 = _asyncToGenerator(function* (_ref3, _ref4) {\n    var email = _ref3.email,\n      password = _ref3.password;\n    var dispatch = _ref4.dispatch,\n      rejectWithValue = _ref4.rejectWithValue;\n    try {\n      var auth = getAuth();\n      var userCredential = yield signInWithEmailAndPassword(auth, email, password);\n      var user = userCredential.user;\n      var db = getFirestore();\n      var userRef = doc(db, \"users\", user.uid);\n      var docSnapshot = yield getDoc(userRef);\n      try {\n        var expoPushToken = yield registerForPushNotificationsAsync();\n        yield updateDoc(userRef, {\n          expoPushToken: expoPushToken\n        });\n      } catch (error) {\n        console.error('Error getting Expo push token or updating Firestore:', error);\n      }\n      if (docSnapshot.exists()) {\n        var _docSnapshot$data = docSnapshot.data(),\n          name = _docSnapshot$data.name,\n          surname = _docSnapshot$data.surname;\n        dispatch(setName(name));\n        dispatch(setSurname(surname));\n      }\n      yield AsyncStorage.setItem(\"@userIsLoggedIn\", \"true\");\n      console.log(\"CONNECTE\");\n      return {\n        uid: user.uid,\n        email: user.email\n      };\n    } catch (error) {\n      console.log(\"error in loginUser\", error);\n      yield AsyncStorage.removeItem(\"@userIsLoggedIn\");\n      return rejectWithValue(error.message);\n    }\n  });\n  return function (_x3, _x4) {\n    return _ref5.apply(this, arguments);\n  };\n}());\nexport var logoutAsync = createAsyncThunk(\"auth/logoutAsync\", _asyncToGenerator(function* () {\n  yield AsyncStorage.removeItem(\"@userIsLoggedIn\");\n  return {};\n}));\nexport var registerUser = createAsyncThunk('user/registerUser', function () {\n  var _ref9 = _asyncToGenerator(function* (_ref7, _ref8) {\n    var email = _ref7.email,\n      password = _ref7.password,\n      name = _ref7.name,\n      surname = _ref7.surname;\n    var dispatch = _ref8.dispatch,\n      rejectWithValue = _ref8.rejectWithValue;\n    try {\n      var auth = getAuth();\n      var userCredential = yield createUserWithEmailAndPassword(auth, email, password);\n      var user = userCredential.user;\n      var db = getFirestore();\n      var userDoc = doc(db, 'users', user.uid);\n      var userData = {\n        name: name,\n        surname: surname,\n        email: email\n      };\n      yield setDoc(userDoc, userData);\n      return {\n        uid: user.uid,\n        email: user.email\n      };\n    } catch (error) {\n      return rejectWithValue(error.toString());\n    }\n  });\n  return function (_x5, _x6) {\n    return _ref9.apply(this, arguments);\n  };\n}());\nexport var updateUserName = createAsyncThunk('user/updateUserName', function () {\n  var _ref11 = _asyncToGenerator(function* (_ref10) {\n    var userId = _ref10.userId,\n      newName = _ref10.newName;\n    var db = getFirestore();\n    var userRef = doc(db, 'users', userId);\n    yield updateDoc(userRef, {\n      name: newName\n    });\n    return {\n      newName: newName\n    };\n  });\n  return function (_x7) {\n    return _ref11.apply(this, arguments);\n  };\n}());\nexport var updateUserSurname = createAsyncThunk('user/updateUserSurname', function () {\n  var _ref13 = _asyncToGenerator(function* (_ref12) {\n    var userId = _ref12.userId,\n      newSurname = _ref12.newSurname;\n    var db = getFirestore();\n    var userRef = doc(db, 'users', userId);\n    yield updateDoc(userRef, {\n      surname: newSurname\n    });\n    return {\n      newSurname: newSurname\n    };\n  });\n  return function (_x8) {\n    return _ref13.apply(this, arguments);\n  };\n}());\nexport var resetPassword = createAsyncThunk('auth/resetPassword', function () {\n  var _ref14 = _asyncToGenerator(function* (email) {\n    var auth = getAuth();\n    yield sendPasswordResetEmail(auth, email);\n  });\n  return function (_x9) {\n    return _ref14.apply(this, arguments);\n  };\n}());\nexport var resetStatus = createAction('auth/resetStatus');\nvar checkEmailExistsInDatabase = function () {\n  var _ref15 = _asyncToGenerator(function* (email) {\n    var db = getFirestore();\n    var usersCollection = collection(db, 'users');\n    var emailQuery = query(usersCollection, where('email', '==', email));\n    var querySnapshot = yield getDocs(emailQuery);\n    return querySnapshot.size > 0;\n  });\n  return function checkEmailExistsInDatabase(_x10) {\n    return _ref15.apply(this, arguments);\n  };\n}();\nexport var checkEmailExists = createAsyncThunk('auth/checkEmailExists', function () {\n  var _ref16 = _asyncToGenerator(function* (email) {\n    var exists = yield checkEmailExistsInDatabase(email);\n    if (!exists) {\n      throw new Error('Adresse e-mail non valide');\n    }\n  });\n  return function (_x11) {\n    return _ref16.apply(this, arguments);\n  };\n}());\nexport var updateEmail = createAsyncThunk('user/updateEmail', function () {\n  var _ref17 = _asyncToGenerator(function* (newEmail) {\n    var auth = getAuth();\n    var user = auth.currentUser;\n    if (user) {\n      yield updateEmailAuth(user, newEmail);\n    }\n  });\n  return function (_x12) {\n    return _ref17.apply(this, arguments);\n  };\n}());\nexport var updateUserEmail = createAsyncThunk('user/updateUserEmail', function () {\n  var _ref19 = _asyncToGenerator(function* (_ref18) {\n    var userId = _ref18.userId,\n      newEmail = _ref18.newEmail;\n    var auth = getAuth();\n    var user = auth.currentUser;\n    if (user) {\n      yield signOut(auth);\n      yield updateEmailAuth(user, newEmail);\n      var db = getFirestore();\n      var userRef = doc(db, 'users', userId);\n      yield updateDoc(userRef, {\n        email: newEmail\n      });\n    }\n    return {\n      newEmail: newEmail\n    };\n  });\n  return function (_x13) {\n    return _ref19.apply(this, arguments);\n  };\n}());\nexport var updatePassword = createAsyncThunk('user/updatePassword', function () {\n  var _ref20 = _asyncToGenerator(function* (newPassword) {\n    var auth = getAuth();\n    var user = auth.currentUser;\n    if (user) {\n      yield updatePasswordAuth(user, newPassword);\n    }\n  });\n  return function (_x14) {\n    return _ref20.apply(this, arguments);\n  };\n}());\nexport var deleteUser = createAsyncThunk('user/deleteUser', function () {\n  var _ref22 = _asyncToGenerator(function* (_, _ref21) {\n    var getState = _ref21.getState;\n    var state = getState();\n    var uid = state.auth.uid;\n    var auth = getAuth();\n    var user = auth.currentUser;\n    yield deleteAuthUser(user);\n    var db = getFirestore();\n    var userRef = doc(db, 'users', uid);\n    yield deleteDoc(userRef);\n    return uid;\n  });\n  return function (_x15, _x16) {\n    return _ref22.apply(this, arguments);\n  };\n}());\nvar initialState = {\n  isAuthenticated: false,\n  isLoggedIn: false,\n  error: null,\n  name: null,\n  surname: null,\n  uid: null,\n  email: null,\n  status: \"idle\"\n};\nvar authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialState,\n  reducers: {\n    resetError: function resetError(state) {\n      state.error = null;\n    },\n    loginSuccess: function loginSuccess(state, action) {\n      state.isAuthenticated = true;\n      state.error = null;\n      state.uid = action.payload.uid;\n      state.email = action.payload.email;\n      state.isLoggedIn = true;\n    },\n    loginFailure: function loginFailure(state, action) {\n      console.log(\"euh\");\n      state.isAuthenticated = false;\n      state.error = action.payload;\n    },\n    logout: function logout(state, action) {\n      state.isAuthenticated = false;\n      state.name = null;\n      state.surname = null;\n      state.error = null;\n      state.isLoggedIn = false;\n    },\n    setName: function setName(state, action) {\n      state.name = action.payload;\n    },\n    setSurname: function setSurname(state, action) {\n      state.surname = action.payload;\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(loginUser.fulfilled, function (state, action) {\n      state.uid = action.payload.uid;\n      state.email = action.payload.email;\n      state.isAuthenticated = true;\n      state.error = null;\n    });\n    builder.addCase(loginUser.pending, function (state) {\n      state.status = \"loading\";\n      state.error = null;\n    });\n    builder.addCase(loginUser.rejected, function (state, action) {\n      state.status = \"failed\";\n      state.isAuthenticated = false;\n      if (action.payload) {\n        var _errorMessage$split$;\n        var errorMessage = action.payload || \"\";\n        var errorCode = (_errorMessage$split$ = errorMessage.split(\"Error (\")[1]) == null ? void 0 : _errorMessage$split$.split(\").\")[0];\n        state.error = errorCode;\n      } else {\n        state.error = action.error.message;\n      }\n    });\n    builder.addCase(logoutAsync.fulfilled, function (state) {\n      state.isAuthenticated = false;\n      state.name = null;\n      state.surname = null;\n      state.error = null;\n      state.isLoggedIn = false;\n    });\n    builder.addCase(resetPassword.fulfilled, function (state) {\n      state.status = 'fulfilled';\n      state.error = null;\n    });\n    builder.addCase(resetPassword.pending, function (state) {\n      state.status = 'loading';\n      state.error = null;\n    });\n    builder.addCase(resetPassword.rejected, function (state, action) {\n      state.status = 'failed';\n      state.error = action.error.code;\n    });\n    builder.addCase(checkEmailExists.rejected, function (state, action) {\n      state.status = 'failed';\n      if (action.payload) {\n        var errorCode = action.payload.code;\n        state.error = errorCode;\n      }\n    });\n    builder.addCase(resetStatus, function (state) {\n      state.status = null;\n      state.error = null;\n    });\n    builder.addCase(updateEmail.fulfilled, function (state, action) {\n      state.email = action.payload;\n    });\n    builder.addCase(updatePassword.fulfilled, function (state, action) {\n      state.password = action.payload;\n    });\n    builder.addCase(registerUser.fulfilled, function (state, action) {\n      state.uid = action.payload.uid;\n      state.email = action.payload.email;\n      state.error = null;\n    });\n    builder.addCase(registerUser.rejected, function (state, action) {\n      state.status = 'failed';\n      state.isAuthenticated = false;\n      if (action.payload) {\n        var _errorMessage$split$2;\n        var errorMessage = action.payload || \"\";\n        var errorCode = (_errorMessage$split$2 = errorMessage.split(\"Error (\")[1]) == null ? void 0 : _errorMessage$split$2.split(\").\")[0];\n        state.error = errorCode;\n      } else {\n        state.error = action.error.message;\n      }\n    });\n    builder.addCase(updateUserName.fulfilled, function (state, action) {\n      state.name = action.payload.newName;\n    });\n    builder.addCase(updateUserName.rejected, function (state, action) {\n      state.status = 'failed';\n      state.error = action.error ? action.error.message : \"Une erreur s'est produite lors de la mise à jour du nom.\";\n    });\n    builder.addCase(updateUserSurname.fulfilled, function (state, action) {\n      state.surname = action.payload.newSurname;\n    });\n    builder.addCase(deleteUser.fulfilled, function (state, action) {});\n    builder.addCase(deleteUser.rejected, function (state, action) {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nvar _authSlice$actions = authSlice.actions,\n  loginSuccess = _authSlice$actions.loginSuccess,\n  logout = _authSlice$actions.logout,\n  setName = _authSlice$actions.setName,\n  setSurname = _authSlice$actions.setSurname;\nexport { loginSuccess, logout, setName, setSurname };\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","createAction","registerForPushNotificationsAsync","createUserWithEmailAndPassword","getAuth","signInWithEmailAndPassword","sendPasswordResetEmail","updateEmail","updateEmailAuth","updatePassword","updatePasswordAuth","signOut","deleteUser","deleteAuthUser","updateDoc","getFirestore","doc","getDoc","collection","query","where","getDocs","setDoc","deleteDoc","addDoc","AsyncStorage","createAndSendNotification","_ref2","_asyncToGenerator","_ref","thunkAPI","userIds","message","db","notificationsCollection","view","date","Date","now","error","console","log","rejectWithValue","toString","_x","_x2","apply","arguments","loginUser","_ref5","_ref3","_ref4","email","password","dispatch","auth","userCredential","user","userRef","uid","docSnapshot","expoPushToken","exists","_docSnapshot$data","data","name","surname","setName","setSurname","setItem","removeItem","_x3","_x4","logoutAsync","registerUser","_ref9","_ref7","_ref8","userDoc","userData","_x5","_x6","updateUserName","_ref11","_ref10","userId","newName","_x7","updateUserSurname","_ref13","_ref12","newSurname","_x8","resetPassword","_ref14","_x9","resetStatus","checkEmailExistsInDatabase","_ref15","usersCollection","emailQuery","querySnapshot","size","_x10","checkEmailExists","_ref16","Error","_x11","_ref17","newEmail","currentUser","_x12","updateUserEmail","_ref19","_ref18","_x13","_ref20","newPassword","_x14","_ref22","_","_ref21","getState","state","_x15","_x16","initialState","isAuthenticated","isLoggedIn","status","authSlice","reducers","resetError","loginSuccess","action","payload","loginFailure","logout","extraReducers","builder","addCase","fulfilled","pending","rejected","_errorMessage$split$","errorMessage","errorCode","split","code","_errorMessage$split$2","_authSlice$actions","actions","reducer"],"sources":["C:/Users/Benoitm/Documents/Coding/Kappze/MyKappze/src/features/user/userSlice.tsx"],"sourcesContent":["import { createSlice, createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\r\nimport { registerForPushNotificationsAsync } from '../../../App';\r\nimport axios from 'axios';\r\n\r\nimport firebase from \"firebase/compat/app\";\r\nimport * as Notifications from 'expo-notifications';\r\nimport Constants from 'expo-constants';\r\nimport { Platform } from 'react-native';\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  sendPasswordResetEmail,\r\n  updateEmail as updateEmailAuth,\r\n  updatePassword as updatePasswordAuth,\r\n  signOut,\r\n  deleteUser as deleteAuthUser,\r\n  signInWithCustomToken,\r\n} from \"firebase/auth\";\r\nimport {\r\n  updateDoc,\r\n  getFirestore,\r\n  doc,\r\n  getDoc,\r\n  collection,\r\n  query,\r\n  where,\r\n  getDocs,\r\n  setDoc,\r\n  deleteDoc,\r\n  addDoc,\r\n} from \"firebase/firestore\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\n// import messaging from '@react-native-firebase/messaging';\r\n// import PushNotification from 'react-native-push-notification';\r\n\r\n// Enregistrez `expoPushToken` dans le document de l'utilisateur dans Firestore\r\n\r\n\r\n\r\n\r\n\r\n\r\n// async function requestUserPermission() {\r\n//   const authStatus = await messaging().requestPermission();\r\n//   const enabled =\r\n//     authStatus === messaging.AuthorizationStatus.AUTHORIZED ||\r\n//     authStatus === messaging.AuthorizationStatus.PROVISIONAL;\r\n\r\n//   if (enabled) {\r\n//     console.log('Authorization status:', authStatus);\r\n//   }\r\n// }\r\n\r\n// async function getToken(userId) {\r\n//   let fcmToken = await messaging().getToken();\r\n//   if (fcmToken) {\r\n//     console.log(fcmToken);\r\n\r\n//     // Enregistrez le token FCM dans le document de l'utilisateur dans Firestore\r\n//     const db = getFirestore();\r\n//     await updateDoc(doc(db, 'users', userId), {\r\n//       fcmToken: fcmToken,\r\n//     });\r\n//   }\r\n// }\r\n\r\n\r\n\r\nexport const createAndSendNotification = createAsyncThunk(\r\n  'notifications/createAndSend',\r\n  async ({ userIds, message }, thunkAPI) => {\r\n    try {\r\n      const db = getFirestore();\r\n\r\n      // Créez la notification dans Firestore\r\n      const notificationsCollection = collection(db, 'notifications');\r\n      await addDoc(notificationsCollection, {\r\n        userIds,\r\n        message,\r\n        view: false,\r\n        date: Date.now(),\r\n      });\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n      return thunkAPI.rejectWithValue(error.toString());\r\n    }\r\n  }\r\n);\r\n\r\nexport const loginUser = createAsyncThunk<\r\n  { uid: string; email: string | null },\r\n  { email: string; password: string },\r\n  { rejectValue: string }\r\n>(\r\n  \"auth/loginUser\",\r\n  async ({ email, password }, { dispatch, rejectWithValue }) => {\r\n    try {\r\n      const auth = getAuth();\r\n      // console.log('auth', auth);\r\n\r\n      const userCredential = await signInWithEmailAndPassword(\r\n        auth,\r\n        email,\r\n        password\r\n      );\r\n      // console.log('userCredential', userCredential);\r\n\r\n      const user = userCredential.user;\r\n      // console.log('user', user);\r\n\r\n      const db = getFirestore();\r\n      // console.log('db', db);\r\n\r\n      const userRef = doc(db, \"users\", user.uid);\r\n      // console.log('userRef', userRef);\r\n\r\n      const docSnapshot = await getDoc(userRef);\r\n      // console.log('docSnapshot', docSnapshot);\r\n\r\n      try {\r\n        // Obtenir le token Expo Push\r\n        const expoPushToken = await registerForPushNotificationsAsync();\r\n      \r\n        // Stocker le token dans Firestore\r\n        // const db = getFirestore();\r\n        // const userRef = doc(db, 'users', userId);\r\n        await updateDoc(userRef, { expoPushToken });\r\n      } catch (error) {\r\n        console.error('Error getting Expo push token or updating Firestore:', error);\r\n      }\r\n      \r\n      if (docSnapshot.exists()) {\r\n        const { name, surname } = docSnapshot.data();\r\n        // console.log('name, surname', name, surname);\r\n        dispatch(setName(name));\r\n        dispatch(setSurname(surname));\r\n      }\r\n\r\n      // Si la connexion est réussie, mettez à jour AsyncStorage\r\n      await AsyncStorage.setItem(\"@userIsLoggedIn\", \"true\");\r\n\r\n      console.log(\"CONNECTE\");\r\n      // console.log(AsyncStorage.getItem('userIsLoggedIn'));\r\n      return { uid: user.uid, email: user.email };\r\n    } catch (error) {\r\n      console.log(\"error in loginUser\", error);\r\n\r\n      // En cas d'erreur, supprimez également la valeur d'AsyncStorage\r\n      await AsyncStorage.removeItem(\"@userIsLoggedIn\");\r\n\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\n// Async action for logging out\r\nexport const logoutAsync = createAsyncThunk(\"auth/logoutAsync\", async () => {\r\n  await AsyncStorage.removeItem(\"@userIsLoggedIn\");\r\n  return {}; // Just return an empty object. We don't need any payload for logging out.\r\n});\r\n\r\nexport const registerUser = createAsyncThunk<\r\n{ uid: string; email: string | null },\r\n{ email: string; password: string; name: string; surname: string;},\r\n{ rejectValue: string }\r\n>(\r\n    'user/registerUser',\r\n    async ({ email, password, name, surname }, {dispatch, rejectWithValue}) => {\r\n        try { const auth = getAuth();\r\n        const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n        const user = userCredential.user;\r\n\r\n        const db = getFirestore();\r\n        const userDoc = doc(db, 'users', user.uid);\r\n        const userData = {\r\n            name,\r\n            surname,\r\n            email,\r\n        };\r\n        await setDoc(userDoc, userData);\r\n\r\n        return { uid: user.uid, email: user.email };\r\n    } catch (error) {\r\n        return rejectWithValue(error.toString());\r\n    }\r\n}\r\n);\r\n\r\n\r\n/* GOOGLE */ \r\n\r\n\r\n// export const signIn = async () => {\r\n//   try {\r\n//     await GoogleSignin.hasPlayServices();\r\n//     const userInfo = await GoogleSignin.signIn();\r\n//     const token = userInfo.idToken;\r\n\r\n//     // Envoyez ce token à votre fonction Cloud pour authentification côté serveur\r\n//     const firebaseToken = await authenticateWithCloudFunction(token);\r\n\r\n//     // Utilisez firebaseToken pour vous authentifier avec Firebase dans votre application\r\n//     const auth = getAuth();\r\n//     await signInWithCustomToken(auth, firebaseToken);\r\n\r\n//   } catch (error) {\r\n//     console.error(error);\r\n//   }\r\n// };\r\n\r\n// const authenticateWithCloudFunction = async (token) => {\r\n//   // Utilisez axios ou fetch pour envoyer une requête à votre fonction Cloud\r\n//   const response = await axios.post('https://us-central1-kappze.cloudfunctions.net/authenticateWithGoogle', { token: token });\r\n//   return response.data.firebaseToken;\r\n// };\r\n\r\n\r\n// const signOutGoogle = async () => {\r\n//   try {\r\n//     // Déconnectez-vous de Firebase\r\n//     const auth = getAuth();\r\n//     await signOut(auth);\r\n\r\n//     // Déconnectez-vous de Google Sign-In\r\n//     await GoogleSignin.revokeAccess();\r\n//     await GoogleSignin.signOut();\r\n//   } catch (error) {\r\n//     console.error(error);\r\n//   }\r\n// };\r\n\r\n\r\n\r\n/* *********************** */ \r\n\r\nexport const updateUserName = createAsyncThunk(\r\n    'user/updateUserName',\r\n    async ({ userId, newName }) => {\r\n        const db = getFirestore();\r\n        const userRef = doc(db, 'users', userId);\r\n        await updateDoc(userRef, { name: newName });\r\n        return { newName };\r\n    }\r\n);\r\n\r\nexport const updateUserSurname = createAsyncThunk(\r\n    'user/updateUserSurname',\r\n    async ({ userId, newSurname }) => {\r\n        const db = getFirestore();\r\n        const userRef = doc(db, 'users', userId);\r\n        await updateDoc(userRef, { surname: newSurname });\r\n        return { newSurname }\r\n    }\r\n);\r\n\r\nexport const resetPassword = createAsyncThunk(\r\n    'auth/resetPassword',\r\n    async (email) => {\r\n        const auth = getAuth();\r\n        await sendPasswordResetEmail(auth, email);\r\n    }\r\n);\r\n\r\nexport const resetStatus = createAction('auth/resetStatus');\r\n\r\nconst checkEmailExistsInDatabase = async (email) => {\r\n    const db = getFirestore();\r\n    const usersCollection = collection(db, 'users');\r\n    const emailQuery = query(usersCollection, where('email', '==', email));\r\n    const querySnapshot = await getDocs(emailQuery);\r\n    return querySnapshot.size > 0; // Vérifiez si la taille du querySnapshot est supérieure à zéro pour déterminer si l'e-mail existe\r\n};\r\n\r\nexport const checkEmailExists = createAsyncThunk(\r\n    'auth/checkEmailExists',\r\n    async (email) => {\r\n        // Vérifier si l'adresse e-mail existe dans votre base de données ou autre source de données\r\n        const exists = await checkEmailExistsInDatabase(email);\r\n\r\n        if (!exists) {\r\n            throw new Error('Adresse e-mail non valide');\r\n        }\r\n    }\r\n);\r\n\r\nexport const updateEmail = createAsyncThunk(\r\n    'user/updateEmail',\r\n    async (newEmail) => {\r\n        const auth = getAuth();\r\n        const user = auth.currentUser;\r\n        if (user) {\r\n            await updateEmailAuth(user, newEmail);\r\n        }\r\n    }\r\n);\r\n\r\nexport const updateUserEmail = createAsyncThunk(\r\n    'user/updateUserEmail',\r\n    async ({ userId, newEmail }) => {\r\n        const auth = getAuth();\r\n        const user = auth.currentUser;\r\n        if (user) {\r\n            await signOut(auth); // Déconnecter l'utilisateur\r\n\r\n            await updateEmailAuth(user, newEmail);\r\n            const db = getFirestore();\r\n            const userRef = doc(db, 'users', userId);\r\n            await updateDoc(userRef, { email: newEmail });\r\n        }\r\n\r\n        return { newEmail };\r\n    }\r\n);\r\n\r\nexport const updatePassword = createAsyncThunk(\r\n    'user/updatePassword',\r\n    async (newPassword) => {\r\n        const auth = getAuth();\r\n        const user = auth.currentUser;\r\n        if (user) {\r\n            await updatePasswordAuth(user, newPassword);\r\n        }\r\n    }\r\n);\r\n\r\nexport const deleteUser = createAsyncThunk(\r\n    'user/deleteUser',\r\n    async (_, { getState }) => {\r\n        const state = getState();\r\n        const { uid } = state.auth;\r\n\r\n        const auth = getAuth();\r\n        const user = auth.currentUser;\r\n\r\n        // Supprimez l'utilisateur de Firebase Authentication\r\n        await deleteAuthUser(user);\r\n        const db = getFirestore();\r\n        const userRef = doc(db, 'users', uid);\r\n        await deleteDoc(userRef);\r\n        return uid;\r\n    }\r\n);\r\n\r\ninterface AuthState {\r\n  uid: string | null;\r\n  email: string | null;\r\n  status: \"idle\" | \"loading\" | \"failed\" | \"succeeded\";\r\n  isAuthenticated: boolean;\r\n  error: string | null;\r\n  name: string | null;\r\n  surname: string | null;\r\n  isLoggedIn: boolean;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  isAuthenticated: false,\r\n  isLoggedIn: false,\r\n  error: null,\r\n  name: null,\r\n  surname: null,\r\n  uid: null,\r\n  email: null,\r\n  status: \"idle\", // ajoutez cela car vous avez défini le status dans AuthState\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    resetError: (state) => {\r\n      state.error = null;\r\n    },\r\n\r\n    loginSuccess: (state, action) => {\r\n      state.isAuthenticated = true;\r\n      state.error = null;\r\n      state.uid = action.payload.uid;\r\n      state.email = action.payload.email;\r\n      state.isLoggedIn = true;\r\n    },\r\n    loginFailure: (state, action) => {\r\n      console.log(\"euh\");\r\n      state.isAuthenticated = false;\r\n      state.error = action.payload;\r\n    },\r\n    logout: (state, action) => {\r\n      state.isAuthenticated = false;\r\n      state.name = null;\r\n      state.surname = null;\r\n      state.error = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    setName: (state, action) => {\r\n      state.name = action.payload;\r\n    },\r\n    setSurname: (state, action) => {\r\n      state.surname = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(loginUser.fulfilled, (state, action) => {\r\n      state.uid = action.payload.uid;\r\n      state.email = action.payload.email;\r\n      state.isAuthenticated = true;\r\n      state.error = null;\r\n    });\r\n    builder.addCase(loginUser.pending, (state) => {\r\n      state.status = \"loading\";\r\n      state.error = null;\r\n    });\r\n    builder.addCase(loginUser.rejected, (state, action) => {\r\n      state.status = \"failed\";\r\n      state.isAuthenticated = false;\r\n      if (action.payload) {\r\n        const errorMessage = action.payload || \"\";\r\n        const errorCode = errorMessage.split(\"Error (\")[1]?.split(\").\")[0];\r\n        state.error = errorCode;\r\n      } else {\r\n        state.error = action.error.message; // this is the fallback if payload is not available\r\n      }\r\n    });\r\n    builder.addCase(logoutAsync.fulfilled, (state) => {\r\n      state.isAuthenticated = false;\r\n      state.name = null;\r\n      state.surname = null;\r\n      state.error = null;\r\n      state.isLoggedIn = false;\r\n    });\r\n\r\n    builder.addCase(resetPassword.fulfilled, (state) => {\r\n        state.status = 'fulfilled';\r\n        state.error = null;\r\n    });\r\n    builder.addCase(resetPassword.pending, (state) => {\r\n        state.status = 'loading';\r\n        state.error = null;\r\n    });\r\n    builder.addCase(resetPassword.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.code;\r\n    });\r\n    builder.addCase(checkEmailExists.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        // state.error = action.error.message;\r\n        if(action.payload){\r\n            const errorCode = action.payload.code;\r\n            state.error = errorCode;\r\n        }\r\n\r\n    });\r\n    builder.addCase(resetStatus, (state) => {\r\n        state.status = null;\r\n        state.error = null;\r\n    });\r\n    builder.addCase(updateEmail.fulfilled, (state, action) => {\r\n        state.email = action.payload;\r\n    });\r\n    builder.addCase(updatePassword.fulfilled, (state, action) => {\r\n        state.password = action.payload;\r\n    });\r\n    builder.addCase(registerUser.fulfilled, (state, action) => {\r\n        state.uid = action.payload.uid;\r\n        state.email = action.payload.email;\r\n        state.error = null;\r\n    });\r\n    builder.addCase(registerUser.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.isAuthenticated = false;\r\n        if (action.payload) {\r\n            const errorMessage = action.payload || \"\";\r\n            const errorCode = errorMessage.split(\"Error (\")[1]?.split(\").\")[0];\r\n            state.error = errorCode;\r\n          } else {\r\n            state.error = action.error.message; // this is the fallback if payload is not available\r\n          }\r\n    });\r\n    builder.addCase(updateUserName.fulfilled, (state, action) => {\r\n        // Mettre à jour l'état avec le nouveau nom\r\n        state.name = action.payload.newName;\r\n    });\r\n    builder.addCase(updateUserName.rejected, (state, action) => {\r\n        // Mettre à jour l'état avec le nouveau nom\r\n        state.status = 'failed';\r\n        state.error = action.error ? action.error.message : \"Une erreur s'est produite lors de la mise à jour du nom.\";\r\n\r\n    });\r\n    builder.addCase(updateUserSurname.fulfilled, (state, action) => {\r\n        // Mettre à jour l'état avec le nouveau prénom\r\n        state.surname = action.payload.newSurname;\r\n    });\r\n    builder.addCase(deleteUser.fulfilled, (state, action) => {\r\n        // Effectuez les actions nécessaires après la suppression de l'utilisateur, si nécessaire\r\n    });\r\n\r\n    builder.addCase(deleteUser.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n\r\n        // Gérez les erreurs lors de la suppression de l'utilisateur, si nécessaire\r\n    });\r\n  },\r\n});\r\n\r\n// export const { resetError, loginSuccess, loginFailure, logout, setName, setSurname } = authSlice.actions;\r\n\r\nexport const { loginSuccess, logout, setName, setSurname } = authSlice.actions;\r\n// export const selectIsLoggedIn = (state) => state.user.isLoggedIn;\r\nexport default authSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}