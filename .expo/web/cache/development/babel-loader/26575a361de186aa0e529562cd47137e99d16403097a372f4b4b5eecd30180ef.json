{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { fetchCanals, removeCanal } from \"../features/canals/canalSlice\";\nimport TextInputModal from \"../components/general/TextUpdateModal\";\nimport { deleteUser, logout, updatePassword, updateUserEmail, updateUserName, updateUserSurname } from \"../features/user/userSlice\";\nimport { removeUserFromCanal } from \"../features/canals/canalUsersSlice\";\nimport CustomAlert from \"../components/general/CustomAlert\";\nimport ConfirmationModal from \"../components/general/ConfirmationModal\";\nimport { HeaderEditAnimal } from \"../components/general/headerEditAnimal\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Settings = function Settings() {\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    name = _useSelector.name,\n    surname = _useSelector.surname,\n    email = _useSelector.email,\n    isAuthenticated = _useSelector.isAuthenticated,\n    uid = _useSelector.uid;\n  var userId = uid;\n  var _useSelector2 = useSelector(function (state) {\n      return state.canals;\n    }),\n    canals = _useSelector2.data;\n  var _useSelector3 = useSelector(function (state) {\n      return state.canalUsers;\n    }),\n    users = _useSelector3.data;\n  var dispatch = useDispatch();\n  var navigate = useNavigation();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    editableFields = _useState2[0],\n    setEditableFields = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showConfirmation = _useState4[0],\n    setShowConfirmation = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showConfirmationUnlinkedCanal = _useState6[0],\n    setShowConfirmationUnlinkCanal = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showConfirmationDeleteCanal = _useState8[0],\n    setShowConfirmationDeleteCanal = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    selectedCanalId = _useState10[0],\n    setSelectedCanalId = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    creatorCanal = _useState12[0],\n    setCreatorCanal = _useState12[1];\n  var _useState13 = useState({}),\n    _useState14 = _slicedToArray(_useState13, 2),\n    userIsAdmin = _useState14[0],\n    setUserRole = _useState14[1];\n  var sectorsStatus = useSelector(function (state) {\n    return state.sectors.status;\n  });\n  var animalsStatus = useSelector(function (state) {\n    return state.animals.status;\n  });\n  var canalsStatus = useSelector(function (state) {\n    return state.canals.status;\n  });\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isEditNameVisible = _useState16[0],\n    setEditVisible = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isEditSurnameVisible = _useState18[0],\n    setEditVisibleSurname = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    isEditEmailVisible = _useState20[0],\n    setEditVisibleEmail = _useState20[1];\n  var _useState21 = useState(false),\n    _useState22 = _slicedToArray(_useState21, 2),\n    isEditPasswordVisible = _useState22[0],\n    setEditVisiblePassword = _useState22[1];\n  var _useState23 = useState(\"\"),\n    _useState24 = _slicedToArray(_useState23, 2),\n    editedName = _useState24[0],\n    setEditedName = _useState24[1];\n  var _useState25 = useState(\"\"),\n    _useState26 = _slicedToArray(_useState25, 2),\n    editedSurname = _useState26[0],\n    setEditedSurname = _useState26[1];\n  var _useState27 = useState(\"\"),\n    _useState28 = _slicedToArray(_useState27, 2),\n    editedEmail = _useState28[0],\n    setEditedEmail = _useState28[1];\n  var _useState29 = useState(\"\"),\n    _useState30 = _slicedToArray(_useState29, 2),\n    editedPassword = _useState30[0],\n    setEditedPassword = _useState30[1];\n  var _useState31 = useState(false),\n    _useState32 = _slicedToArray(_useState31, 2),\n    isConfirmationVisible = _useState32[0],\n    setConfirmationVisible = _useState32[1];\n  var _useState33 = useState(\"\"),\n    _useState34 = _slicedToArray(_useState33, 2),\n    alertMessage = _useState34[0],\n    setAlertMessage = _useState34[1];\n  var _useState35 = useState(false),\n    _useState36 = _slicedToArray(_useState35, 2),\n    isAlertVisible = _useState36[0],\n    setAlertVisible = _useState36[1];\n  var _useState37 = useState(null),\n    _useState38 = _slicedToArray(_useState37, 2),\n    selectedUserId = _useState38[0],\n    setSelectedUserId = _useState38[1];\n  var _useState39 = useState(false),\n    _useState40 = _slicedToArray(_useState39, 2),\n    deassociateModal = _useState40[0],\n    setDeassociateModal = _useState40[1];\n  var _useState41 = useState(false),\n    _useState42 = _slicedToArray(_useState41, 2),\n    deleteModal = _useState42[0],\n    setDeleteModal = _useState42[1];\n  var _useState43 = useState(false),\n    _useState44 = _slicedToArray(_useState43, 2),\n    deleteAccountModal = _useState44[0],\n    setDeleteAccountModal = _useState44[1];\n  var _useState45 = useState(null),\n    _useState46 = _slicedToArray(_useState45, 2),\n    messageType = _useState46[0],\n    setMessageType = _useState46[1];\n  useEffect(function () {\n    if (isAuthenticated) {}\n  }, [dispatch, userId, isAuthenticated]);\n  useEffect(function () {\n    if (isAuthenticated) {\n      dispatch(fetchCanals(userId));\n      if (uid && uid === userId) {\n        var creatorCanals = [];\n        for (var canal of canals) {\n          if (Array.isArray(canal.role)) {\n            for (var role of canal.role) {\n              if (role.isAdmin === true && role.uid === userId) {\n                creatorCanals.push(canal);\n                break;\n              }\n            }\n          }\n        }\n        setCreatorCanal(creatorCanals);\n      } else {\n        setCreatorCanal([]);\n      }\n    }\n  }, [dispatch, userId, isAuthenticated]);\n  useEffect(function () {\n    users.forEach(function (user) {\n      if (user.id === uid) {\n        setUserRole(user.isAdmin);\n      }\n    });\n  }, [users]);\n  var openDeleteModal = function openDeleteModal(userId, canalId) {\n    setSelectedUserId(userId);\n    setSelectedCanalId(canalId);\n    setDeleteModal(true);\n  };\n  var openDeassociateModal = function openDeassociateModal() {\n    setDeassociateModal(true);\n  };\n  var openDeleteAccountModal = function openDeleteAccountModal(userId, canalId) {\n    setDeleteAccountModal(true);\n  };\n  var handleUpdateName = function handleUpdateName(newName) {\n    dispatch(updateUserName({\n      userId: userId,\n      newName: newName\n    }));\n    setEditVisible(false);\n  };\n  var handleUpdateSurname = function handleUpdateSurname(newSurname) {\n    dispatch(updateUserSurname({\n      userId: userId,\n      newSurname: newSurname\n    }));\n    setEditVisibleSurname(false);\n  };\n  var handleUpdateEmail = function handleUpdateEmail(newEmail) {\n    dispatch(updateUserEmail({\n      userId: userId,\n      newEmail: newEmail\n    }));\n    setEditVisibleEmail(false);\n    dispatch(logout());\n  };\n  var handleUpdatePassword = function handleUpdatePassword(newPassword) {\n    dispatch(updatePassword(newPassword));\n    setEditVisiblePassword(false);\n  };\n  var handleConfirmUnlinkCanal = function () {\n    var _ref = _asyncToGenerator(function* () {\n      yield dispatch(removeUserFromCanal({\n        userId: selectedUserId,\n        canalId: selectedCanalId\n      }));\n      setConfirmationVisible(false);\n      setAlertMessage(\"L'utilisateur a été désassocié avec succès\");\n      setAlertVisible(true);\n      setSelectedUserId(null);\n    });\n    return function handleConfirmUnlinkCanal() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleConfirmDeleteCanal = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      yield dispatch(removeCanal({\n        userId: selectedUserId,\n        canalId: selectedCanalId\n      }));\n      setConfirmationVisible(false);\n      setAlertMessage(\"L'canal a été supprimée avec succès'\");\n      setAlertVisible(true);\n      setSelectedUserId(null);\n    });\n    return function handleConfirmDeleteCanal() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleDeleteUser = function handleDeleteUser() {\n    dispatch(deleteUser());\n    dispatch(logout());\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(HeaderEditAnimal, {\n      navigation: navigate,\n      animalName: surname\n    }), _jsxs(ScrollView, {\n      style: styles.mainView,\n      children: [_jsxs(View, {\n        style: styles.sectionGeneral,\n        children: [_jsx(Text, {\n          style: styles.title2,\n          children: \"Informations g\\xE9n\\xE9rales de l'utilisateur\"\n        }), _jsxs(View, {\n          style: styles.inputsModify,\n          children: [_jsxs(View, {\n            style: styles.inputModify,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: name\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setEditVisible(true);\n              },\n              style: styles.sectionHeader,\n              children: _jsx(View, {\n                style: styles.buttonIcon,\n                children: _jsx(Icon, {\n                  style: styles.buttonIconElt,\n                  name: \"pencil-outline\",\n                  size: 15,\n                  color: \"#fff\"\n                })\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.inputModify,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: surname\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setEditVisibleSurname(true);\n              },\n              style: styles.sectionHeader,\n              children: _jsx(View, {\n                style: styles.buttonIcon,\n                children: _jsx(Icon, {\n                  style: styles.buttonIconElt,\n                  name: \"pencil-outline\",\n                  size: 15,\n                  color: \"#fff\"\n                })\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.inputModify,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: email\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setEditVisibleEmail(true);\n              },\n              style: styles.sectionHeader,\n              children: _jsx(View, {\n                style: styles.buttonIcon,\n                children: _jsx(Icon, {\n                  style: styles.buttonIconElt,\n                  name: \"pencil-outline\",\n                  size: 15,\n                  color: \"#fff\"\n                })\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.inputModify,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: \"Modifier le mot de passe\"\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setEditVisiblePassword(true);\n              },\n              style: styles.sectionHeader,\n              children: _jsx(View, {\n                style: styles.buttonIcon,\n                children: _jsx(Icon, {\n                  style: styles.buttonIconElt,\n                  name: \"pencil-outline\",\n                  size: 15,\n                  color: \"#fff\"\n                })\n              })\n            })]\n          })]\n        })]\n      }), _jsx(View, {\n        style: styles.sectionCanalMember,\n        children: canals.length > 0 && _jsxs(_Fragment, {\n          children: [_jsx(Text, {\n            style: styles.title2,\n            children: \"Canals dont vous \\xEAtes membres\"\n          }), _jsx(View, {\n            style: styles.inputsModify,\n            children: canals.map(function (canal, index) {\n              return _jsx(View, {\n                style: styles.inputModify,\n                children: canal.adminId !== userId ? _jsxs(_Fragment, {\n                  children: [_jsxs(Text, {\n                    style: styles.text,\n                    children: [canal.name, \" (\", userIsAdmin ? \"admin\" : \"visiteur\", \")\"]\n                  }), _jsx(TouchableOpacity, {\n                    onPress: function onPress() {\n                      return openDeassociateModal(uid, canal.id, \"Se désassocier de cette canal ?\");\n                    },\n                    style: styles.btnDeassociate,\n                    children: _jsx(Text, {\n                      style: styles.btnDeassociateText,\n                      children: \"Retirer de vos canals\"\n                    })\n                  })]\n                }) : _jsxs(Text, {\n                  style: styles.text,\n                  children: [canal.name, \" (Super admin)\"]\n                })\n              }, index);\n            })\n          })]\n        })\n      }), _jsxs(View, {\n        style: styles.sectionCanalAdmin,\n        children: [_jsxs(Text, {\n          style: styles.title2,\n          children: [\"Canals dont vous avez la gestion :\", \" \"]\n        }), _jsx(View, {\n          style: styles.inputsModify,\n          children: creatorCanal.map(function (asso, index) {\n            return _jsx(_Fragment, {\n              children: _jsxs(View, {\n                style: styles.inputModify,\n                children: [_jsxs(Text, {\n                  style: styles.text,\n                  children: [asso.name, \" (\", asso.adminId === userId ? \"Super admin\" : \"admin\", \")\"]\n                }, index), _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    return openDeleteModal(uid, asso.id, \"Supprimer cette canal ?\");\n                  },\n                  style: styles.btnSuppCanal,\n                  children: _jsx(Text, {\n                    style: styles.btnSuppCanalText,\n                    children: \"Supprimer cette canal\"\n                  })\n                })]\n              }, index)\n            });\n          })\n        })]\n      }), _jsx(View, {\n        style: styles.suppAccount,\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return openDeleteAccountModal();\n          },\n          style: styles.btnSupp,\n          children: _jsx(Text, {\n            style: styles.buttonSuppText,\n            children: \"SUPPRIMER LE COMPTE\"\n          })\n        })\n      }), _jsx(TextInputModal, {\n        visible: isEditNameVisible,\n        onClose: function onClose() {\n          return setEditVisible(false);\n        },\n        onConfirm: handleUpdateName,\n        messageType: \"Entrer un nouveau nom\",\n        onChangeText: setEditedName\n      }), _jsx(TextInputModal, {\n        visible: isEditSurnameVisible,\n        onClose: function onClose() {\n          return setEditVisible(false);\n        },\n        onConfirm: handleUpdateSurname,\n        messageType: \"Entrer un nouveau prénom\",\n        onChangeText: setEditedSurname\n      }), _jsx(TextInputModal, {\n        visible: isEditEmailVisible,\n        onClose: function onClose() {\n          return setEditVisible(false);\n        },\n        onConfirm: handleUpdateEmail,\n        messageType: \"Entrez le nouvel email\",\n        onChangeText: setEditedEmail\n      }), _jsx(TextInputModal, {\n        visible: isEditPasswordVisible,\n        onClose: function onClose() {\n          return setEditVisible(false);\n        },\n        onConfirm: handleUpdatePassword,\n        messageType: \"Entrez le nouveau mot de passe\",\n        onChangeText: setEditedPassword\n      }), _jsx(ConfirmationModal, {\n        visible: deassociateModal,\n        onClose: function onClose() {\n          return setDeassociateModal(false);\n        },\n        onConfirm: handleConfirmUnlinkCanal,\n        messageType: \"Voulez vous désassocier le compte ? \"\n      }), _jsx(ConfirmationModal, {\n        visible: deleteModal,\n        onClose: function onClose() {\n          return setDeleteModal(false);\n        },\n        onConfirm: handleConfirmDeleteCanal,\n        messageType: \"Voulez vous supprimer l'canal ?\"\n      }), _jsx(ConfirmationModal, {\n        visible: deleteAccountModal,\n        onClose: function onClose() {\n          return setDeleteAccountModal(false);\n        },\n        onConfirm: handleDeleteUser,\n        messageType: \"Voulez vous supprimer votre compte ?\"\n      }), _jsx(CustomAlert, {\n        visible: isAlertVisible,\n        onClose: function onClose() {\n          return setAlertVisible(false);\n        },\n        message: alertMessage\n      })]\n    })]\n  });\n};\nvar styles = {\n  container: {\n    height: '100%',\n    backgroundColor: \"#2F4F4F\",\n    flexDirection: 'column'\n  },\n  mainView: {\n    backgroundColor: \"#2F4F4F\",\n    padding: 20,\n    height: '100%',\n    paddingBottom: 100\n  },\n  title1: {\n    color: \"#FFF\",\n    fontSize: 32,\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontWeight: \"600\"\n  },\n  sectionGeneral: {\n    marginTop: 20,\n    marginBottom: 10\n  },\n  sectionCanalMember: {\n    marginVertical: 10\n  },\n  sectionCanalAdmin: {\n    marginVertical: 10\n  },\n  title2: {\n    color: \"#FFF\",\n    fontSize: 19,\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontWeight: \"600\"\n  },\n  inputsModify: {\n    rowGap: 10,\n    marginVertical: 20\n  },\n  inputModify: {\n    flexDirection: \"row\",\n    columnGap: 10\n  },\n  text: {\n    color: \"#FFF\",\n    fontSize: 14,\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontWeight: \"600\"\n  },\n  editAnimal: {\n    padding: 5,\n    flexDirection: \"column\",\n    rowGap: 50\n  },\n  editUnicalSection: {\n    flexDirection: \"column\",\n    rowGap: 20,\n    margin: 5\n  },\n  editUnicalSectionTitle: {\n    fontSize: 18,\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontWeight: \"600\"\n  },\n  viewImg: {},\n  editElt: {\n    marginHorizontal: 15,\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  line: {\n    height: 2,\n    backgroundColor: \"#000\",\n    marginVertical: 20,\n    width: \"40%\"\n  },\n  editEltCheckboxes: {\n    marginHorizontal: 15,\n    flexDirection: \"column\"\n  },\n  editEltSelects: {\n    marginHorizontal: 15,\n    flexDirection: \"column\"\n  },\n  editEltDocuments: {\n    marginHorizontal: 15,\n    flexDirection: \"column\"\n  },\n  editEltLabel: {\n    color: \"#2F2F2F\",\n    fontSize: 15,\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontWeight: \"600\"\n  },\n  textInput: {},\n  buttonsPicker: {\n    backgroundColor: \"#2F2F2F\",\n    padding: 5,\n    borderRadius: 3\n  },\n  buttonText: {\n    padding: 2,\n    color: \"white\",\n    fontFamily: \"WixMadeforDisplay-Bold\"\n  },\n  btnSectionSuppSave: {\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    marginBottom: 20,\n    rowGap: 20\n  },\n  btnSupp: {\n    backgroundColor: \"#c40030\"\n  },\n  buttonSaveText: {\n    padding: 20,\n    color: \"white\",\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    textAlign: \"center\"\n  },\n  buttonSuppText: {\n    padding: 20,\n    color: \"white\",\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    textAlign: \"center\"\n  },\n  btnSave: {\n    backgroundColor: \"green\"\n  },\n  buttonGroupIcons: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  buttonIcon: {\n    backgroundColor: \"black\",\n    borderRadius: 2,\n    paddingTop: 1\n  },\n  buttonIconElt: {\n    margin: 7\n  },\n  btnDeassociate: {\n    backgroundColor: \"#c40030\"\n  },\n  btnDeassociateText: {\n    padding: 5,\n    color: \"white\",\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    textAlign: \"center\",\n    fontSize: 10\n  },\n  btnSuppCanal: {\n    backgroundColor: \"#c40030\",\n    width: '50%'\n  },\n  btnSuppCanalText: {\n    padding: 5,\n    color: \"white\",\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    textAlign: \"center\",\n    fontSize: 10\n  },\n  suppAccount: {\n    paddingBottom: 100\n  }\n};\nexport default Settings;","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","useNavigation","View","Text","TouchableOpacity","ScrollView","fetchCanals","removeCanal","TextInputModal","deleteUser","logout","updatePassword","updateUserEmail","updateUserName","updateUserSurname","removeUserFromCanal","CustomAlert","ConfirmationModal","HeaderEditAnimal","Icon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Settings","_useSelector","state","auth","name","surname","email","isAuthenticated","uid","userId","_useSelector2","canals","data","_useSelector3","canalUsers","users","dispatch","navigate","_useState","_useState2","_slicedToArray","editableFields","setEditableFields","_useState3","_useState4","showConfirmation","setShowConfirmation","_useState5","_useState6","showConfirmationUnlinkedCanal","setShowConfirmationUnlinkCanal","_useState7","_useState8","showConfirmationDeleteCanal","setShowConfirmationDeleteCanal","_useState9","_useState10","selectedCanalId","setSelectedCanalId","_useState11","_useState12","creatorCanal","setCreatorCanal","_useState13","_useState14","userIsAdmin","setUserRole","sectorsStatus","sectors","status","animalsStatus","animals","canalsStatus","_useState15","_useState16","isEditNameVisible","setEditVisible","_useState17","_useState18","isEditSurnameVisible","setEditVisibleSurname","_useState19","_useState20","isEditEmailVisible","setEditVisibleEmail","_useState21","_useState22","isEditPasswordVisible","setEditVisiblePassword","_useState23","_useState24","editedName","setEditedName","_useState25","_useState26","editedSurname","setEditedSurname","_useState27","_useState28","editedEmail","setEditedEmail","_useState29","_useState30","editedPassword","setEditedPassword","_useState31","_useState32","isConfirmationVisible","setConfirmationVisible","_useState33","_useState34","alertMessage","setAlertMessage","_useState35","_useState36","isAlertVisible","setAlertVisible","_useState37","_useState38","selectedUserId","setSelectedUserId","_useState39","_useState40","deassociateModal","setDeassociateModal","_useState41","_useState42","deleteModal","setDeleteModal","_useState43","_useState44","deleteAccountModal","setDeleteAccountModal","_useState45","_useState46","messageType","setMessageType","creatorCanals","canal","Array","isArray","role","isAdmin","push","forEach","user","id","openDeleteModal","canalId","openDeassociateModal","openDeleteAccountModal","handleUpdateName","newName","handleUpdateSurname","newSurname","handleUpdateEmail","newEmail","handleUpdatePassword","newPassword","handleConfirmUnlinkCanal","_ref","_asyncToGenerator","apply","arguments","handleConfirmDeleteCanal","_ref2","handleDeleteUser","style","styles","container","children","navigation","animalName","mainView","sectionGeneral","title2","inputsModify","inputModify","text","onPress","sectionHeader","buttonIcon","buttonIconElt","size","color","sectionCanalMember","length","map","index","adminId","btnDeassociate","btnDeassociateText","sectionCanalAdmin","asso","btnSuppCanal","btnSuppCanalText","suppAccount","btnSupp","buttonSuppText","visible","onClose","onConfirm","onChangeText","message","height","backgroundColor","flexDirection","padding","paddingBottom","title1","fontSize","fontFamily","fontWeight","marginTop","marginBottom","marginVertical","rowGap","columnGap","editAnimal","editUnicalSection","margin","editUnicalSectionTitle","viewImg","editElt","marginHorizontal","alignItems","line","width","editEltCheckboxes","editEltSelects","editEltDocuments","editEltLabel","textInput","buttonsPicker","borderRadius","buttonText","btnSectionSuppSave","justifyContent","buttonSaveText","textAlign","btnSave","buttonGroupIcons","display","paddingTop"],"sources":["C:/Users/Benoitm/Documents/Coding/Kappze/MyKappze/src/pages/SettingsUser.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Button,\r\n  Alert,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport {\r\n  fetchCanals,\r\n  removeCanal,\r\n} from \"../features/canals/canalSlice\";\r\nimport TextInputModal from \"../components/general/TextUpdateModal\";\r\nimport {\r\n  deleteUser,\r\n  logout,\r\n  updatePassword,\r\n  updateUserEmail,\r\n  updateUserName,\r\n  updateUserSurname,\r\n} from \"../features/user/userSlice\";\r\nimport { removeUserFromCanal } from \"../features/canals/canalUsersSlice\";\r\nimport CustomAlert from \"../components/general/CustomAlert\";\r\nimport ConfirmationModal from \"../components/general/ConfirmationModal\";\r\nimport { HeaderEditAnimal } from \"../components/general/headerEditAnimal\";\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\nconst Settings = () => {\r\n  //   const {\r\n  //     params: { userId },\r\n  //   } = useRoute();\r\n  const { name, surname, email, isAuthenticated, uid } = useSelector(\r\n    (state) => state.auth\r\n  );\r\n  const userId = uid;\r\n  const { data: canals } = useSelector((state) => state.canals);\r\n  const { data: users } = useSelector((state) => state.canalUsers);\r\n  //   const user =\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigation();\r\n\r\n  const [editableFields, setEditableFields] = useState([]);\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n  const [\r\n    showConfirmationUnlinkedCanal,\r\n    setShowConfirmationUnlinkCanal,\r\n  ] = useState(false);\r\n  const [\r\n    showConfirmationDeleteCanal,\r\n    setShowConfirmationDeleteCanal,\r\n  ] = useState(false);\r\n\r\n  const [selectedCanalId, setSelectedCanalId] = useState(null);\r\n  const [creatorCanal, setCreatorCanal] = useState([]);\r\n  const [userIsAdmin, setUserRole] = useState({});\r\n\r\n  const sectorsStatus = useSelector((state) => state.sectors.status);\r\n  const animalsStatus = useSelector((state) => state.animals.status);\r\n  const canalsStatus = useSelector((state) => state.canals.status);\r\n  const [isEditNameVisible, setEditVisible] = useState(false);\r\n  const [isEditSurnameVisible, setEditVisibleSurname] = useState(false);\r\n  const [isEditEmailVisible, setEditVisibleEmail] = useState(false);\r\n  const [isEditPasswordVisible, setEditVisiblePassword] = useState(false);\r\n  const [editedName, setEditedName] = useState(\"\");\r\n  const [editedSurname, setEditedSurname] = useState(\"\");\r\n  const [editedEmail, setEditedEmail] = useState(\"\");\r\n  const [editedPassword, setEditedPassword] = useState(\"\");\r\n  const [isConfirmationVisible, setConfirmationVisible] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const [isAlertVisible, setAlertVisible] = useState(false);\r\n  const [selectedUserId, setSelectedUserId] = useState(null);\r\n  const [deassociateModal, setDeassociateModal] = useState(false);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [deleteAccountModal, setDeleteAccountModal] = useState(false);\r\n  const [messageType, setMessageType] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      // Dispatch your fetchCanals action if needed\r\n    }\r\n  }, [dispatch, userId, isAuthenticated]);\r\n\r\n  //   useEffect(() => {\r\n  //     if (uid && uid === userId) {\r\n  //       const fields = [\r\n  //         { key: \"name\", label: \"Nom utilisateur\", value: name },\r\n  //         { key: \"surname\", label: \"Prénom utilisateur\", value: surname },\r\n  //         { key: \"email\", label: \"Email utilisateur\", value: email },\r\n  //         { key: \"password\", label: \"Modifier le mot de passe\", value: \"\" }, // Update this line to remove the password value\r\n  //       ];\r\n  //       setEditableFields(fields);\r\n  //     } else {\r\n  //       setEditableFields([]);\r\n  //     }\r\n  //   }, [userId]);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      dispatch(fetchCanals(userId));\r\n      if (uid && uid === userId) {\r\n        let creatorCanals = [];\r\n\r\n        for (let canal of canals) {\r\n          if (Array.isArray(canal.role)) {\r\n            for (let role of canal.role) {\r\n              if (role.isAdmin === true && role.uid === userId) {\r\n                creatorCanals.push(canal);\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        setCreatorCanal(creatorCanals);\r\n      } else {\r\n        setCreatorCanal([]);\r\n      }\r\n    }\r\n  }, [dispatch, userId, isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    // Initialiser userRoles avec les rôles actuels des utilisateurs\r\n    users.forEach(user => {\r\n\r\n        if (user.id === uid) {\r\n            setUserRole(user.isAdmin);\r\n        }\r\n    });\r\n}, [users]);\r\n\r\n  //   const openModal = (userId, canalId, message) => {\r\n  //     setSelectedUserId(userId);\r\n  //     setSelectedCanalId(canalId);\r\n  //     setMessageType(message);\r\n  //   };\r\n\r\n  const openDeleteModal = (userId, canalId) => {\r\n    setSelectedUserId(userId);\r\n    setSelectedCanalId(canalId);\r\n    setDeleteModal(true);\r\n  };\r\n\r\n  const openDeassociateModal = () => {\r\n    setDeassociateModal(true);\r\n  };\r\n\r\n  const openDeleteAccountModal = (userId, canalId) => {\r\n    setDeleteAccountModal(true);\r\n  };\r\n\r\n  const handleUpdateName = (newName) => {\r\n    dispatch(updateUserName({ userId: userId, newName: newName }));\r\n    setEditVisible(false);\r\n    // dispatch(logout());\r\n  };\r\n\r\n  const handleUpdateSurname = (newSurname) => {\r\n    dispatch(updateUserSurname({ userId: userId, newSurname: newSurname }));\r\n    // dispatch(logout());\r\n    setEditVisibleSurname(false);\r\n  };\r\n\r\n  const handleUpdateEmail = (newEmail) => {\r\n    dispatch(updateUserEmail({ userId: userId, newEmail }));\r\n    setEditVisibleEmail(false);\r\n    dispatch(logout());\r\n  };\r\n\r\n  const handleUpdatePassword = (newPassword) => {\r\n    dispatch(updatePassword(newPassword));\r\n    setEditVisiblePassword(false);\r\n    // dispatch(logout());\r\n  };\r\n\r\n  //   const handleConfirmSuppression = async () => {\r\n  //     // console.log(id)\r\n  //     await dispatch(\r\n  //       removeUserFromCanal({\r\n  //         userId: selectedUserId,\r\n  //         canalId: canal.id,\r\n  //       })\r\n  //     );\r\n  //     setConfirmationVisible(false); // Ferme la modale de confirmation\r\n  //     setAlertMessage(\"L'utilisateur a été désassocié avec succès\"); // Définir le message d'alerte\r\n  //     setAlertVisible(true); // Affiche la modale d'alerte\r\n  //     setSelectedUserId(null); // ferme la modale\r\n  //   };\r\n\r\n  const handleConfirmUnlinkCanal = async () => {\r\n    // console.log(id)\r\n    await dispatch(\r\n      removeUserFromCanal({\r\n        userId: selectedUserId,\r\n        canalId: selectedCanalId,\r\n      })\r\n    );\r\n    setConfirmationVisible(false); // Ferme la modale de confirmation\r\n    setAlertMessage(\"L'utilisateur a été désassocié avec succès\"); // Définir le message d'alerte\r\n    setAlertVisible(true); // Affiche la modale d'alerte\r\n    setSelectedUserId(null); // ferme la modale\r\n  };\r\n\r\n  const handleConfirmDeleteCanal = async () => {\r\n    // console.log(id)\r\n    await dispatch(\r\n      removeCanal({\r\n        userId: selectedUserId,\r\n        canalId: selectedCanalId,\r\n      })\r\n    );\r\n    setConfirmationVisible(false); // Ferme la modale de confirmation\r\n    setAlertMessage(\"L'canal a été supprimée avec succès'\"); // Définir le message d'alerte\r\n    setAlertVisible(true); // Affiche la modale d'alerte\r\n    setSelectedUserId(null); // ferme la modale\r\n  };\r\n\r\n  const handleDeleteUser = () => {\r\n    dispatch(deleteUser());\r\n    dispatch(logout());\r\n  };\r\n\r\n  // Add all your handler functions here\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n    {/* <> */}\r\n      <HeaderEditAnimal navigation={navigate} animalName={surname} />\r\n      <ScrollView style={styles.mainView}>\r\n        <View style={styles.sectionGeneral}>\r\n          <Text style={styles.title2}>\r\n            Informations générales de l'utilisateur\r\n          </Text>\r\n\r\n          <View style={styles.inputsModify}>\r\n            <View style={styles.inputModify}>\r\n              <Text style={styles.text}>{name}</Text>\r\n              <TouchableOpacity\r\n                onPress={() => setEditVisible(true)}\r\n                style={styles.sectionHeader}\r\n              >\r\n                <View style={styles.buttonIcon}>\r\n                  <Icon\r\n                    style={styles.buttonIconElt}\r\n                    name=\"pencil-outline\"\r\n                    size={15}\r\n                    color=\"#fff\"\r\n                  />\r\n                </View>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.inputModify}>\r\n              <Text style={styles.text}>{surname}</Text>\r\n              <TouchableOpacity\r\n                onPress={() => setEditVisibleSurname(true)}\r\n                style={styles.sectionHeader}\r\n              >\r\n                <View style={styles.buttonIcon}>\r\n                  <Icon\r\n                    style={styles.buttonIconElt}\r\n                    name=\"pencil-outline\"\r\n                    size={15}\r\n                    color=\"#fff\"\r\n                  />\r\n                </View>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.inputModify}>\r\n              <Text style={styles.text}>{email}</Text>\r\n              <TouchableOpacity\r\n                onPress={() => setEditVisibleEmail(true)}\r\n                style={styles.sectionHeader}\r\n              >\r\n                <View style={styles.buttonIcon}>\r\n                  <Icon\r\n                    style={styles.buttonIconElt}\r\n                    name=\"pencil-outline\"\r\n                    size={15}\r\n                    color=\"#fff\"\r\n                  />\r\n                </View>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.inputModify}>\r\n              <Text style={styles.text}>Modifier le mot de passe</Text>\r\n              <TouchableOpacity\r\n                onPress={() => setEditVisiblePassword(true)}\r\n                style={styles.sectionHeader}\r\n              >\r\n                <View style={styles.buttonIcon}>\r\n                  <Icon\r\n                    style={styles.buttonIconElt}\r\n                    name=\"pencil-outline\"\r\n                    size={15}\r\n                    color=\"#fff\"\r\n                  />\r\n                </View>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.sectionCanalMember}>\r\n          {canals.length > 0 && (\r\n            <>\r\n              <Text style={styles.title2}>\r\n                Canals dont vous êtes membres\r\n              </Text>\r\n              <View style={styles.inputsModify}>\r\n                {canals.map((canal, index) => (\r\n                  <View style={styles.inputModify} key={index}>\r\n                    {canal.adminId !== userId ? (\r\n                      <>\r\n                        <Text style={styles.text}>\r\n                          {canal.name} (\r\n                          {userIsAdmin ? \"admin\" : \"visiteur\"})\r\n                        </Text>\r\n                        <TouchableOpacity\r\n                          onPress={() =>\r\n                            openDeassociateModal(\r\n                              uid,\r\n                              canal.id,\r\n                              \"Se désassocier de cette canal ?\"\r\n                            )\r\n                          }\r\n                          style={styles.btnDeassociate}\r\n                        >\r\n                          <Text style={styles.btnDeassociateText}>\r\n                            Retirer de vos canals\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      </>\r\n                    ) : (\r\n                      <Text style={styles.text}>\r\n                        {canal.name} (Super admin)\r\n                      </Text>\r\n                    )}\r\n                  </View>\r\n                ))}\r\n              </View>\r\n            </>\r\n          )}\r\n        </View>\r\n\r\n        <View style={styles.sectionCanalAdmin}>\r\n          <Text style={styles.title2}>\r\n            Canals dont vous avez la gestion :{\" \"}\r\n          </Text>\r\n\r\n          <View style={styles.inputsModify}>\r\n            {creatorCanal.map((asso, index) => (\r\n              <>\r\n                <View key={index} style={styles.inputModify}>\r\n                  <Text key={index} style={styles.text}>\r\n                    {asso.name} (\r\n                    {asso.adminId === userId ? \"Super admin\" : \"admin\"})\r\n                  </Text>\r\n                  <TouchableOpacity\r\n                  onPress={() =>\r\n                    openDeleteModal(\r\n                      uid,\r\n                      asso.id,\r\n                      \"Supprimer cette canal ?\"\r\n                    )\r\n                  }\r\n                  style={styles.btnSuppCanal}\r\n                >\r\n                  <Text style={styles.btnSuppCanalText}>\r\n                    Supprimer cette canal\r\n                  </Text>\r\n                </TouchableOpacity>\r\n                </View>\r\n\r\n              </>\r\n            ))}\r\n          </View>\r\n        </View>\r\n        <View style={styles.suppAccount}>\r\n          <TouchableOpacity\r\n            onPress={() => openDeleteAccountModal()}\r\n            style={styles.btnSupp}\r\n          >\r\n            <Text style={styles.buttonSuppText}>SUPPRIMER LE COMPTE</Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* Add all the other interface elements here */}\r\n        </View>\r\n\r\n        <TextInputModal\r\n          visible={isEditNameVisible}\r\n          onClose={() => setEditVisible(false)} // Fermeture de la modale\r\n          onConfirm={handleUpdateName}\r\n          messageType={\"Entrer un nouveau nom\"}\r\n          onChangeText={setEditedName}\r\n        />\r\n\r\n        <TextInputModal\r\n          visible={isEditSurnameVisible}\r\n          onClose={() => setEditVisible(false)} // Fermeture de la modale\r\n          onConfirm={handleUpdateSurname}\r\n          messageType={\"Entrer un nouveau prénom\"}\r\n          onChangeText={setEditedSurname}\r\n        />\r\n\r\n        <TextInputModal\r\n          visible={isEditEmailVisible}\r\n          onClose={() => setEditVisible(false)} // Fermeture de la modale\r\n          onConfirm={handleUpdateEmail}\r\n          messageType={\"Entrez le nouvel email\"}\r\n          onChangeText={setEditedEmail}\r\n        />\r\n\r\n        <TextInputModal\r\n          visible={isEditPasswordVisible}\r\n          onClose={() => setEditVisible(false)} // Fermeture de la modale\r\n          onConfirm={handleUpdatePassword}\r\n          messageType={\"Entrez le nouveau mot de passe\"}\r\n          onChangeText={setEditedPassword}\r\n        />\r\n\r\n        <ConfirmationModal\r\n          visible={deassociateModal}\r\n          onClose={() => setDeassociateModal(false)}\r\n          onConfirm={handleConfirmUnlinkCanal}\r\n          messageType={\"Voulez vous désassocier le compte ? \"}\r\n        />\r\n        <ConfirmationModal\r\n          visible={deleteModal}\r\n          onClose={() => setDeleteModal(false)}\r\n          onConfirm={handleConfirmDeleteCanal}\r\n          messageType={\"Voulez vous supprimer l'canal ?\"}\r\n        />\r\n        <ConfirmationModal\r\n          visible={deleteAccountModal}\r\n          onClose={() => setDeleteAccountModal(false)}\r\n          onConfirm={handleDeleteUser}\r\n          messageType={\"Voulez vous supprimer votre compte ?\"}\r\n        />\r\n        <CustomAlert\r\n          visible={isAlertVisible}\r\n          onClose={() => setAlertVisible(false)}\r\n          message={alertMessage}\r\n        />\r\n      {/* </ScrollView> */}\r\n    </ScrollView>\r\n    {/* </> */}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container:{\r\n    height: '100%',\r\n    backgroundColor: \"#2F4F4F\",\r\n    // marginBottom: 150\r\n    flexDirection: 'column'\r\n  },\r\n  mainView: {\r\n    backgroundColor: \"#2F4F4F\",\r\n    // backgroundColor: \"#075bb5\",\r\n    padding: 20,\r\n    height : '100%',\r\n    paddingBottom: 100\r\n  },\r\n  title1: {\r\n    color: \"#FFF\",\r\n    fontSize: 32,\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    fontWeight: \"600\",\r\n  },\r\n  sectionGeneral: {\r\n    marginTop: 20,\r\n    marginBottom: 10,\r\n  },\r\n  sectionCanalMember: {\r\n    marginVertical: 10,\r\n  },\r\n  sectionCanalAdmin: {\r\n    marginVertical: 10,\r\n  },\r\n  title2: {\r\n    color: \"#FFF\",\r\n    fontSize: 19,\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    fontWeight: \"600\",\r\n  },\r\n  inputsModify: {\r\n    rowGap: 10,\r\n    marginVertical: 20,\r\n  },\r\n  inputModify: {\r\n    flexDirection: \"row\",\r\n    columnGap: 10,\r\n  },\r\n  text: {\r\n    color: \"#FFF\",\r\n    fontSize: 14,\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    fontWeight: \"600\",\r\n  },\r\n  editAnimal: {\r\n    padding: 5,\r\n    flexDirection: \"column\",\r\n    rowGap: 50,\r\n  },\r\n  editUnicalSection: {\r\n    flexDirection: \"column\",\r\n    rowGap: 20,\r\n    // backgroundColor: 'blue',\r\n    margin: 5,\r\n  },\r\n  editUnicalSectionTitle: {\r\n    fontSize: 18,\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    fontWeight: \"600\",\r\n  },\r\n  viewImg: {},\r\n  editElt: {\r\n    marginHorizontal: 15,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  line: {\r\n    height: 2,\r\n    backgroundColor: \"#000\", // change this to fit your design\r\n    // alignSelf: 'start',\r\n    marginVertical: 20, // space above and below the line\r\n    width: \"40%\", // change this to fit your design\r\n  },\r\n  editEltCheckboxes: {\r\n    marginHorizontal: 15,\r\n    flexDirection: \"column\",\r\n  },\r\n  editEltSelects: {\r\n    marginHorizontal: 15,\r\n    flexDirection: \"column\",\r\n  },\r\n  editEltDocuments: {\r\n    marginHorizontal: 15,\r\n    flexDirection: \"column\",\r\n  },\r\n  editEltLabel: {\r\n    color: \"#2F2F2F\",\r\n    fontSize: 15,\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    fontWeight: \"600\",\r\n  },\r\n  textInput: {},\r\n  buttonsPicker: {\r\n    backgroundColor: \"#2F2F2F\",\r\n    padding: 5,\r\n    borderRadius: 3,\r\n  },\r\n  buttonText: {\r\n    padding: 2,\r\n    color: \"white\",\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n  },\r\n  btnSectionSuppSave: {\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 20,\r\n    rowGap: 20,\r\n  },\r\n  btnSupp: {\r\n    backgroundColor: \"#c40030\",\r\n  },\r\n  buttonSaveText: {\r\n    padding: 20,\r\n    color: \"white\",\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  buttonSuppText: {\r\n    padding: 20,\r\n    color: \"white\",\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  btnSave: {\r\n    backgroundColor: \"green\",\r\n  },\r\n  buttonGroupIcons: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  buttonIcon: {\r\n    backgroundColor: \"black\",\r\n    borderRadius: 2,\r\n    paddingTop: 1,\r\n  },\r\n  buttonIconElt: {\r\n    margin: 7,\r\n  },\r\n  btnDeassociate: {\r\n    backgroundColor: \"#c40030\",\r\n  },\r\n  btnDeassociateText: {\r\n    padding: 5,\r\n    color: \"white\",\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    textAlign: \"center\",\r\n    fontSize: 10\r\n  },\r\n  btnSuppCanal:{\r\n    backgroundColor: \"#c40030\",\r\n    width: '50%'\r\n  },\r\n  btnSuppCanalText: {\r\n    padding: 5,\r\n    color: \"white\",\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    textAlign: \"center\",\r\n    fontSize: 10,\r\n    \r\n  },\r\n  suppAccount: {\r\n    paddingBottom: 100\r\n  }\r\n};\r\n\r\nexport default Settings;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}