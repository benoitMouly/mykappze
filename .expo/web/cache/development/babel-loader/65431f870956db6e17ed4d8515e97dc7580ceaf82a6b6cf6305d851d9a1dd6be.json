{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport AnimalList from \"./animalList\";\nimport { getFilteredAnimals } from \"./getFilteredAnimal\";\nimport { useSelector } from \"react-redux\";\nimport { COLORS } from \"../../data/colors\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar AnimalFilters = function AnimalFilters(_ref) {\n  var animals = _ref.animals,\n    sectorized = _ref.sectorized,\n    archiveType = _ref.archiveType;\n  var _useSelector = useSelector(function (state) {\n      return state.cities;\n    }),\n    cities = _useSelector.data,\n    citiesStatus = _useSelector.status;\n  var _useSelector2 = useSelector(function (state) {\n      return state.sectors;\n    }),\n    sectors = _useSelector2.data,\n    sectorsStatus = _useSelector2.status;\n  console.log(sectors);\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedCity = _useState2[0],\n    setSelectedCity = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedCityId = _useState4[0],\n    setSelectedCityId = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedSector = _useState6[0],\n    setSelectedSector = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedSectorId = _useState8[0],\n    setSelectedSectorId = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    selectedColor = _useState10[0],\n    setSelectedColor = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    filterByDisease = _useState12[0],\n    setFilterByDisease = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    filterBySterilization = _useState14[0],\n    setFilterBySterilization = _useState14[1];\n  var _useState15 = useState(null),\n    _useState16 = _slicedToArray(_useState15, 2),\n    filterByIdentification = _useState16[0],\n    setFilterByIdentification = _useState16[1];\n  var _useState17 = useState(null),\n    _useState18 = _slicedToArray(_useState17, 2),\n    filterByOwner = _useState18[0],\n    setFilterByOwner = _useState18[1];\n  var _useState19 = useState(\"\"),\n    _useState20 = _slicedToArray(_useState19, 2),\n    filterBySex = _useState20[0],\n    setFilterBySex = _useState20[1];\n  var _useState21 = useState(\"\"),\n    _useState22 = _slicedToArray(_useState21, 2),\n    filterByName = _useState22[0],\n    setFilterByName = _useState22[1];\n  var _useState23 = useState(null),\n    _useState24 = _slicedToArray(_useState23, 2),\n    filterByMom = _useState24[0],\n    setFilterByMom = _useState24[1];\n  var _useState25 = useState({\n      text: \"\",\n      selectCity: \"option1\",\n      selectSector: \"option1\"\n    }),\n    _useState26 = _slicedToArray(_useState25, 2),\n    filters = _useState26[0],\n    setFilters = _useState26[1];\n  var _useState27 = useState([]),\n    _useState28 = _slicedToArray(_useState27, 2),\n    filteredSectors = _useState28[0],\n    setFilteredSectors = _useState28[1];\n  useEffect(function () {\n    if (selectedCityId) {\n      var relevantSectors = sectorized.filter(function (sector) {\n        return sector.cityId === selectedCityId;\n      });\n      console.log(relevantSectors);\n      setFilteredSectors(relevantSectors);\n    }\n  }, [selectedCityId]);\n  var handleNameChange = function handleNameChange(name, value) {\n    setFilters(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, name, value));\n    });\n  };\n  var cityOptions = [{\n    id: \"\",\n    label: \"Toutes\"\n  }].concat(_toConsumableArray(cities.map(function (city) {\n    return {\n      id: city.id,\n      label: city.name\n    };\n  })));\n  var handleCityChange = function handleCityChange(value) {\n    var selectedCity = cityOptions.find(function (city) {\n      return city.id === value;\n    });\n    if (selectedCity) {\n      setSelectedCityId(selectedCity.id);\n      setSelectedCity(selectedCity.label);\n    } else {\n      setSelectedCityId(null);\n      setSelectedCity(\"\");\n    }\n    setSelectedSector(\"\");\n  };\n  var sectorOptions = [{\n    id: \"\",\n    label: \"Tous\"\n  }].concat(_toConsumableArray(filteredSectors.map(function (sector) {\n    return {\n      id: sector.id,\n      label: sector.name\n    };\n  })));\n  var sectorizedOptions = [{\n    id: \"\",\n    label: \"Tous\"\n  }].concat(_toConsumableArray(sectors.map(function (sector) {\n    return {\n      id: sector.id,\n      label: sector.name\n    };\n  })));\n  var handleSectorChange = function handleSectorChange(value) {\n    var selectedSector = sectorOptions.find(function (sector) {\n      return sector.id === value;\n    });\n    if (selectedSector) {\n      setSelectedSectorId(selectedSector.id);\n      setSelectedSector(selectedSector.label);\n    } else {\n      setSelectedSectorId(null);\n      setSelectedSector(\"\");\n    }\n  };\n  var handleColorChange = function handleColorChange(value) {\n    setSelectedColor(value);\n  };\n  var handleDiseaseChange = function handleDiseaseChange(value) {\n    setFilterByDisease(value);\n  };\n  var handleSexChange = function handleSexChange(value) {\n    setFilterBySex(value);\n  };\n  var handleMomChange = function handleMomChange(value) {\n    setFilterByMom(value);\n  };\n  var handleSterilizationChange = function handleSterilizationChange(value) {\n    setFilterBySterilization(value);\n  };\n  var handleIdentificationChange = function handleIdentificationChange(value) {\n    setFilterByIdentification(value);\n  };\n  var handleOwnerChange = function handleOwnerChange(value) {\n    setFilterByOwner(value);\n  };\n  var filteredAnimals = getFilteredAnimals(animals, selectedCity, selectedSector, selectedColor, filterByDisease, filterBySterilization, filterByIdentification, filterByOwner, filterBySex, filterByMom, filters.text);\n  var _useState29 = useState(false),\n    _useState30 = _slicedToArray(_useState29, 2),\n    modalVisible = _useState30[0],\n    setModalVisible = _useState30[1];\n  return _jsxs(SafeAreaView, {\n    children: [_jsx(View, {\n      style: styles.sectionBtns,\n      children: _jsx(TouchableOpacity, {\n        style: styles.sectionBtns_btn,\n        onPress: function onPress() {\n          return setModalVisible(true);\n        },\n        children: _jsx(Icon, {\n          name: \"options-outline\",\n          size: 24,\n          color: \"#000\"\n        })\n      })\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        setModalVisible(!modalVisible);\n      },\n      children: _jsx(View, {\n        style: {\n          flex: 1,\n          backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n          justifyContent: \"center\"\n        },\n        children: _jsxs(ScrollView, {\n          style: styles.modalView,\n          children: [_jsxs(View, {\n            style: styles.filterContainer,\n            children: [_jsx(Text, {\n              style: styles.filterLabel,\n              children: \"Nom : \"\n            }), _jsx(TextInput, {\n              style: styles.filterInput,\n              value: filters.text,\n              onChangeText: function onChangeText(value) {\n                return handleNameChange(\"text\", value);\n              }\n            })]\n          }), archiveType === \"association\" ? _jsxs(View, {\n            style: styles.filterContainer,\n            children: [_jsx(Text, {\n              style: styles.filterLabel,\n              children: \"Ville :\"\n            }), _jsx(Picker, {\n              style: {\n                height: 50,\n                width: 150\n              },\n              selectedValue: selectedCityId,\n              onValueChange: handleCityChange,\n              children: cityOptions.map(function (city) {\n                return _jsx(Picker.Item, {\n                  label: city.label,\n                  value: city.id\n                }, city.id);\n              })\n            })]\n          }) : _jsx(_Fragment, {}), archiveType !== \"sector\" ? _jsxs(View, {\n            style: styles.filterContainer,\n            children: [_jsx(Text, {\n              style: styles.filterLabel,\n              children: \"Secteurs :\"\n            }), _jsx(Picker, {\n              style: {\n                height: 50,\n                width: 150\n              },\n              selectedValue: selectedSectorId,\n              onValueChange: handleSectorChange,\n              children: sectorOptions.length > 1 ? sectorOptions.map(function (sector) {\n                return _jsx(Picker.Item, {\n                  label: sector.label,\n                  value: sector.id\n                }, sector.id);\n              }) : sectorizedOptions.length > 1 && archiveType !== \"association\" ? sectorizedOptions.map(function (sector) {\n                return _jsx(Picker.Item, {\n                  label: sector.label,\n                  value: sector.id\n                }, sector.id);\n              }) : _jsx(Picker.Item, {\n                label: 'Tous',\n                value: ''\n              }, '')\n            })]\n          }) : _jsx(_Fragment, {}), _jsxs(View, {\n            style: styles.filterContainer,\n            children: [_jsx(Text, {\n              style: styles.filterLabel,\n              children: \"Robe :\"\n            }), _jsxs(Picker, {\n              style: {\n                height: 50,\n                width: 150\n              },\n              selectedValue: selectedColor,\n              onValueChange: handleColorChange,\n              children: [_jsx(Picker.Item, {\n                label: \"Toutes\",\n                value: \"\"\n              }), COLORS.map(function (color) {\n                return _jsx(Picker.Item, {\n                  label: color,\n                  value: color\n                }, color);\n              })]\n            })]\n          }), _jsxs(View, {\n            style: styles.filterContainer,\n            children: [_jsx(Text, {\n              style: styles.filterLabel,\n              children: \"Sexe :\"\n            }), _jsxs(Picker, {\n              style: {\n                height: 50,\n                width: 150\n              },\n              selectedValue: filterBySex,\n              onValueChange: handleSexChange,\n              children: [_jsx(Picker.Item, {\n                label: \"Toutes\",\n                value: \"\"\n              }), _jsx(Picker.Item, {\n                label: \"M\\xE2le\",\n                value: \"Mâle\"\n              }), _jsx(Picker.Item, {\n                label: \"Femelle\",\n                value: \"Femelle\"\n              }), _jsx(Picker.Item, {\n                label: \"Inconnu\",\n                value: \"Inconnu\"\n              })]\n            })]\n          }), _jsxs(View, {\n            style: styles.filterContainer,\n            children: [_jsx(Text, {\n              style: styles.filterLabel,\n              children: \"St\\xE9rilis\\xE9s :\"\n            }), _jsxs(Picker, {\n              style: {\n                height: 50,\n                width: 150\n              },\n              selectedValue: filterBySterilization,\n              onValueChange: handleSterilizationChange,\n              children: [_jsx(Picker.Item, {\n                label: \"-\",\n                value: null\n              }), _jsx(Picker.Item, {\n                label: \"Oui\",\n                value: true\n              }), _jsx(Picker.Item, {\n                label: \"Non\",\n                value: false\n              })]\n            })]\n          }), _jsxs(View, {\n            style: styles.filterContainer,\n            children: [_jsx(Text, {\n              style: styles.filterLabel,\n              children: \"Maladies :\"\n            }), _jsxs(Picker, {\n              style: {\n                height: 50,\n                width: 150\n              },\n              selectedValue: filterByDisease,\n              onValueChange: handleDiseaseChange,\n              children: [_jsx(Picker.Item, {\n                label: \"-\",\n                value: null\n              }), _jsx(Picker.Item, {\n                label: \"Oui\",\n                value: true\n              }), _jsx(Picker.Item, {\n                label: \"Non\",\n                value: \"\"\n              })]\n            })]\n          }), _jsxs(View, {\n            style: styles.filterContainer,\n            children: [_jsx(Text, {\n              style: styles.filterLabel,\n              children: \"Identifi\\xE9 :\"\n            }), _jsxs(Picker, {\n              style: {\n                height: 50,\n                width: 150\n              },\n              selectedValue: filterByIdentification,\n              onValueChange: handleIdentificationChange,\n              children: [_jsx(Picker.Item, {\n                label: \"-\",\n                value: null\n              }), _jsx(Picker.Item, {\n                label: \"Oui\",\n                value: true\n              }), _jsx(Picker.Item, {\n                label: \"Non\",\n                value: \"\"\n              })]\n            })]\n          }), _jsxs(View, {\n            style: styles.filterContainer,\n            children: [_jsx(Text, {\n              style: styles.filterLabel,\n              children: \"Appartient \\xE0 un propri\\xE9taire :\"\n            }), _jsxs(Picker, {\n              style: {\n                height: 50,\n                width: 150\n              },\n              selectedValue: filterByOwner,\n              onValueChange: handleOwnerChange,\n              children: [_jsx(Picker.Item, {\n                label: \"-\",\n                value: null\n              }), _jsx(Picker.Item, {\n                label: \"Oui\",\n                value: true\n              }), _jsx(Picker.Item, {\n                label: \"Non\",\n                value: \"\"\n              })]\n            })]\n          }), _jsxs(View, {\n            style: styles.filterContainer,\n            children: [_jsx(Text, {\n              style: styles.filterLabel,\n              children: \"Est une m\\xE8re :\"\n            }), _jsxs(Picker, {\n              style: {\n                height: 50,\n                width: 150\n              },\n              selectedValue: filterByMom,\n              onValueChange: handleMomChange,\n              children: [_jsx(Picker.Item, {\n                label: \"-\",\n                value: null\n              }), _jsx(Picker.Item, {\n                label: \"Oui\",\n                value: true\n              }), _jsx(Picker.Item, {\n                label: \"Non\",\n                value: \"\"\n              })]\n            })]\n          }), _jsx(View, {\n            style: styles.sectionBtns,\n            children: _jsx(TouchableOpacity, {\n              style: styles.sectionBtns_btnCheck,\n              onPress: function onPress() {\n                return setModalVisible(false);\n              },\n              children: _jsx(Text, {\n                style: styles.sectionBtns_btnText,\n                children: \"Valider\"\n              })\n            })\n          })]\n        })\n      })\n    }), _jsx(AnimalList, {\n      animals: filteredAnimals\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  filterContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  filterLabel: {\n    flex: 1,\n    fontWeight: \"bold\"\n  },\n  filterInput: {\n    flex: 2,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    padding: 10,\n    borderRadius: 4\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 3,\n    padding: 10,\n    rowGap: 30,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4\n  },\n  sectionBtns: {\n    flexDirection: \"column\",\n    alignItems: \"flex-end\",\n    margin: 20\n  },\n  sectionBtns_btn: {\n    flexDirection: \"row\",\n    columnGap: 8,\n    backgroundColor: \"transparent\",\n    color: \"#FFF\",\n    borderWidth: 2,\n    paddingTop: 2,\n    paddingBottom: 2,\n    paddingRight: 15,\n    paddingLeft: 15,\n    borderRadius: 2\n  },\n  sectionBtns_btnCheck: {\n    flexDirection: \"row\",\n    columnGap: 8,\n    backgroundColor: \"black\",\n    color: \"#FFF\",\n    borderWidth: 2,\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingRight: 20,\n    paddingLeft: 20,\n    borderRadius: 2\n  },\n  sectionBtns_btnText: {\n    color: \"#FFF\",\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontSize: 10\n  }\n});\nexport default AnimalFilters;","map":{"version":3,"names":["React","useEffect","useState","View","Text","TextInput","StyleSheet","SafeAreaView","Modal","ScrollView","TouchableOpacity","Picker","AnimalList","getFilteredAnimals","useSelector","COLORS","Icon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AnimalFilters","_ref","animals","sectorized","archiveType","_useSelector","state","cities","data","citiesStatus","status","_useSelector2","sectors","sectorsStatus","console","log","_useState","_useState2","_slicedToArray","selectedCity","setSelectedCity","_useState3","_useState4","selectedCityId","setSelectedCityId","_useState5","_useState6","selectedSector","setSelectedSector","_useState7","_useState8","selectedSectorId","setSelectedSectorId","_useState9","_useState10","selectedColor","setSelectedColor","_useState11","_useState12","filterByDisease","setFilterByDisease","_useState13","_useState14","filterBySterilization","setFilterBySterilization","_useState15","_useState16","filterByIdentification","setFilterByIdentification","_useState17","_useState18","filterByOwner","setFilterByOwner","_useState19","_useState20","filterBySex","setFilterBySex","_useState21","_useState22","filterByName","setFilterByName","_useState23","_useState24","filterByMom","setFilterByMom","_useState25","text","selectCity","selectSector","_useState26","filters","setFilters","_useState27","_useState28","filteredSectors","setFilteredSectors","relevantSectors","filter","sector","cityId","handleNameChange","name","value","prev","_objectSpread","_defineProperty","cityOptions","id","label","concat","_toConsumableArray","map","city","handleCityChange","find","sectorOptions","sectorizedOptions","handleSectorChange","handleColorChange","handleDiseaseChange","handleSexChange","handleMomChange","handleSterilizationChange","handleIdentificationChange","handleOwnerChange","filteredAnimals","_useState29","_useState30","modalVisible","setModalVisible","children","style","styles","sectionBtns","sectionBtns_btn","onPress","size","color","animationType","transparent","visible","onRequestClose","flex","backgroundColor","justifyContent","modalView","filterContainer","filterLabel","filterInput","onChangeText","height","width","selectedValue","onValueChange","Item","length","sectionBtns_btnCheck","sectionBtns_btnText","create","flexDirection","alignItems","marginBottom","fontWeight","borderWidth","borderColor","padding","borderRadius","margin","rowGap","shadowColor","shadowOffset","shadowOpacity","shadowRadius","columnGap","paddingTop","paddingBottom","paddingRight","paddingLeft","fontFamily","fontSize"],"sources":["C:/Users/Benoitm/Documents/Coding/Kappze/MyKappze/src/components/animals/animalFilter.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  Button,\r\n  Modal,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport AnimalList from \"./animalList\";\r\nimport { getFilteredAnimals } from \"./getFilteredAnimal\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { COLORS } from \"../../data/colors\";\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\n\r\ninterface FilterValues {\r\n  text: string;\r\n  selectCity: string;\r\n  selectSector: string;\r\n}\r\n\r\n// interface FilteredSectors {\r\n//   id: string;\r\n//   city: string;\r\n//   cityId: string;\r\n//   associationid: string;\r\n//   name: string;\r\n//   userId: string;\r\n// }\r\n\r\ninterface Animal {\r\n  id: string;\r\n  name: string;\r\n  image?: string;\r\n  sex: string;\r\n  isMother: boolean;\r\n  cityName: string;\r\n  sectorName: string;\r\n}\r\n\r\ninterface Sector {\r\n  id: string;\r\n  city: string;\r\n  cityId: string;\r\n  associationid: string;\r\n  name: string;\r\n  userId: string;\r\n}\r\n\r\ninterface City {\r\n  id: string;\r\n  associationid: string;\r\n  name: string;\r\n  userId: string;\r\n}\r\n\r\ninterface AnimalFiltersProps {\r\n  animals: Animal[];\r\n  sectorized: Sector[];\r\n  archiveType: string;\r\n}\r\n\r\ninterface DataState<T> {\r\n  data: T[];\r\n  status: \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n  error: string | null;\r\n  // Ajoutez ici d'autres champs si nécessaire\r\n}\r\n\r\n// Utilisez cette interface dans l'interface RootState\r\ninterface RootState {\r\n  cities: DataState<City>;\r\n  animals: DataState<Animal>;\r\n  sectors: DataState<Sector>;\r\n  auth: {\r\n    isAuthenticated: boolean;\r\n    uid: string;\r\n  };\r\n}\r\n\r\nconst AnimalFilters: React.FC<AnimalFiltersProps> = ({\r\n  animals,\r\n  sectorized,\r\n  archiveType,\r\n}) => {\r\n  const { data: cities, status: citiesStatus } = useSelector(\r\n    (state: RootState) => state.cities\r\n  );\r\n\r\n  const { data: sectors, status: sectorsStatus } = useSelector(\r\n    (state: RootState) => state.sectors\r\n  );\r\n\r\n  console.log(sectors);\r\n  const [selectedCity, setSelectedCity] = useState(\"\");\r\n  const [selectedCityId, setSelectedCityId] = useState<string | null>(null);\r\n  const [selectedSector, setSelectedSector] = useState(\"\");\r\n  const [selectedSectorId, setSelectedSectorId] = useState<string | null>(null);\r\n\r\n  const [selectedColor, setSelectedColor] = useState(\"\");\r\n  const [filterByDisease, setFilterByDisease] = useState(null);\r\n  const [filterBySterilization, setFilterBySterilization] = useState(null);\r\n  const [filterByIdentification, setFilterByIdentification] = useState(null);\r\n  const [filterByOwner, setFilterByOwner] = useState(null);\r\n  const [filterBySex, setFilterBySex] = useState(\"\");\r\n  const [filterByName, setFilterByName] = useState(\"\");\r\n  const [filterByMom, setFilterByMom] = useState(null);\r\n  const [filters, setFilters] = useState<FilterValues>({\r\n    text: \"\",\r\n    selectCity: \"option1\",\r\n    selectSector: \"option1\",\r\n  });\r\n\r\n  const [filteredSectors, setFilteredSectors] = useState([]);\r\n  // useEffect(() => {\r\n  //   if (selectedCityId) {\r\n  //     const relevantSectors = sectorized.filter(\r\n  //       (sector) => sector.cityId === selectedCityId\r\n  //     );\r\n  //     console.log(relevantSectors);\r\n  //     setFilteredSectors(relevantSectors);\r\n  //   } else if (archiveType === \"city\") {\r\n  //     console.log('SECTORIZED')\r\n  //     console.log(sectorized)\r\n  //     const relevantSectors = sectors;\r\n  //     console.log(relevantSectors);\r\n  //     setFilteredSectors(relevantSectors);\r\n  //   }\r\n  // }, [selectedCityId], sectors);\r\n\r\n  useEffect(() => {\r\n    if (selectedCityId) {\r\n      const relevantSectors = sectorized.filter(\r\n        (sector) => sector.cityId === selectedCityId\r\n      );\r\n      console.log(relevantSectors);\r\n      setFilteredSectors(relevantSectors);\r\n    }\r\n\r\n    // else if (archiveType === \"city\") {\r\n    //   console.log('SECTORIZED')\r\n    //   console.log(sectorized)\r\n    //   const relevantSectors = sectors;\r\n    //   console.log(relevantSectors);\r\n    //   setFilteredSectors(relevantSectors);\r\n    // }\r\n  }, [selectedCityId]);\r\n\r\n  const handleNameChange = (name: string, value: any) => {\r\n    setFilters((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const cityOptions = [\r\n    { id: \"\", label: \"Toutes\" },\r\n    ...cities.map((city) => ({ id: city.id, label: city.name })),\r\n  ];\r\n\r\n  const handleCityChange = (value: string) => {\r\n    const selectedCity = cityOptions.find((city) => city.id === value);\r\n    if (selectedCity) {\r\n      setSelectedCityId(selectedCity.id);\r\n      setSelectedCity(selectedCity.label);\r\n    } else {\r\n      setSelectedCityId(null); // Réinitialisez la valeur sélectionnée\r\n      setSelectedCity(\"\"); // Réinitialisez le label sélectionné\r\n    }\r\n\r\n    setSelectedSector(\"\");\r\n  };\r\n\r\n  const sectorOptions = [\r\n    { id: \"\", label: \"Tous\" },\r\n    ...filteredSectors.map((sector) => ({ id: sector.id, label: sector.name })),\r\n  ];\r\n\r\n  let sectorizedOptions = [\r\n    { id: \"\", label: \"Tous\" },\r\n    ...sectors.map((sector) => ({ id: sector.id, label: sector.name })),\r\n  ];\r\n\r\n  const handleSectorChange = (value: string) => {\r\n    const selectedSector = sectorOptions.find((sector) => sector.id === value);\r\n    if (selectedSector) {\r\n      setSelectedSectorId(selectedSector.id);\r\n      setSelectedSector(selectedSector.label);\r\n    } else {\r\n      setSelectedSectorId(null); // Réinitialisez la valeur sélectionnée\r\n      setSelectedSector(\"\"); // Réinitialisez le label sélectionné\r\n    }\r\n  };\r\n\r\n  const handleColorChange = (value: string) => {\r\n    setSelectedColor(value);\r\n  };\r\n\r\n  const handleDiseaseChange = (value: boolean) => {\r\n    setFilterByDisease(value);\r\n  };\r\n\r\n  const handleSexChange = (value: string) => {\r\n    setFilterBySex(value);\r\n  };\r\n\r\n  const handleMomChange = (value: boolean) => {\r\n    setFilterByMom(value);\r\n  };\r\n\r\n  const handleSterilizationChange = (value: boolean) => {\r\n    setFilterBySterilization(value);\r\n  };\r\n\r\n  const handleIdentificationChange = (value: boolean) => {\r\n    setFilterByIdentification(value);\r\n  };\r\n\r\n  const handleOwnerChange = (value: boolean) => {\r\n    setFilterByOwner(value);\r\n  };\r\n\r\n  // Filtrer les animaux par le nom.\r\n  const filteredAnimals = getFilteredAnimals(\r\n    animals,\r\n    selectedCity,\r\n    selectedSector,\r\n    selectedColor,\r\n    filterByDisease,\r\n    filterBySterilization,\r\n    filterByIdentification,\r\n    filterByOwner,\r\n    filterBySex,\r\n    filterByMom,\r\n    filters.text // Utiliser la valeur du champ de texte pour filtrer par le nom.\r\n  );\r\n\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      {/* <View style={styles.filterContainer}>\r\n        <Button\r\n          title=\"Filtrer\"\r\n          onPress={() => setModalVisible(true)}\r\n        />\r\n      </View> */}\r\n\r\n      <View style={styles.sectionBtns}>\r\n        <TouchableOpacity\r\n          style={styles.sectionBtns_btn}\r\n          onPress={() => setModalVisible(true)}\r\n        >\r\n          {/* <Text style={styles.sectionBtns_btnText}>Filter</Text> */}\r\n          {/* <ion-icon name=\"options-outline\"></ion-icon> */}\r\n          <Icon name={\"options-outline\"} size={24} color=\"#000\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          setModalVisible(!modalVisible);\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            backgroundColor: \"rgba(0, 0, 0, 0.8)\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <ScrollView style={styles.modalView}>\r\n            <View style={styles.filterContainer}>\r\n              <Text style={styles.filterLabel}>Nom : </Text>\r\n              <TextInput\r\n                style={styles.filterInput}\r\n                value={filters.text}\r\n                onChangeText={(value) => handleNameChange(\"text\", value)}\r\n              />\r\n            </View>\r\n            {archiveType === \"association\" ? (\r\n              <View style={styles.filterContainer}>\r\n                <Text style={styles.filterLabel}>Ville :</Text>\r\n                <Picker\r\n                  style={{ height: 50, width: 150 }}\r\n                  selectedValue={selectedCityId}\r\n                  onValueChange={handleCityChange}\r\n                >\r\n                  {cityOptions.map((city) => (\r\n                    <Picker.Item\r\n                      key={city.id}\r\n                      label={city.label}\r\n                      value={city.id}\r\n                    />\r\n                  ))}\r\n                </Picker>\r\n              </View>\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            {archiveType !== \"sector\" ? (\r\n              <View style={styles.filterContainer}>\r\n                <Text style={styles.filterLabel}>Secteurs :</Text>\r\n                <Picker\r\n                  style={{ height: 50, width: 150 }}\r\n                  selectedValue={selectedSectorId}\r\n                  onValueChange={handleSectorChange}\r\n                >\r\n                  {sectorOptions.length > 1 ? (\r\n                    sectorOptions.map((sector) => (\r\n                      <Picker.Item\r\n                        key={sector.id}\r\n                        label={sector.label}\r\n                        value={sector.id}\r\n                      />\r\n                    ))\r\n                  ) : sectorizedOptions.length > 1 &&\r\n                    archiveType !== \"association\" ? (\r\n                    sectorizedOptions.map((sector) => (\r\n                      <Picker.Item\r\n                        key={sector.id}\r\n                        label={sector.label}\r\n                        value={sector.id}\r\n                      />\r\n                    ))\r\n                  ) : (\r\n                    <Picker.Item\r\n                      key={''}\r\n                      label={'Tous'}\r\n                      value={''}\r\n                    />\r\n                  )}\r\n                </Picker>\r\n\r\n                {/* </Picker> */}\r\n              </View>\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            <View style={styles.filterContainer}>\r\n              <Text style={styles.filterLabel}>Robe :</Text>\r\n              <Picker\r\n                style={{ height: 50, width: 150 }}\r\n                selectedValue={selectedColor}\r\n                onValueChange={handleColorChange}\r\n              >\r\n                <Picker.Item label=\"Toutes\" value={\"\"} />\r\n                {COLORS.map((color) => (\r\n                  <Picker.Item key={color} label={color} value={color} />\r\n                ))}\r\n              </Picker>\r\n            </View>\r\n\r\n            <View style={styles.filterContainer}>\r\n              <Text style={styles.filterLabel}>Sexe :</Text>\r\n              <Picker\r\n                style={{ height: 50, width: 150 }}\r\n                selectedValue={filterBySex}\r\n                onValueChange={handleSexChange}\r\n              >\r\n                <Picker.Item label=\"Toutes\" value={\"\"} />\r\n                <Picker.Item label=\"Mâle\" value={\"Mâle\"} />\r\n                <Picker.Item label=\"Femelle\" value={\"Femelle\"} />\r\n                <Picker.Item label=\"Inconnu\" value={\"Inconnu\"} />\r\n              </Picker>\r\n            </View>\r\n\r\n            <View style={styles.filterContainer}>\r\n              <Text style={styles.filterLabel}>Stérilisés :</Text>\r\n              <Picker\r\n                style={{ height: 50, width: 150 }}\r\n                selectedValue={filterBySterilization}\r\n                onValueChange={handleSterilizationChange}\r\n              >\r\n                <Picker.Item label=\"-\" value={null} />\r\n                <Picker.Item label=\"Oui\" value={true} />\r\n                <Picker.Item label=\"Non\" value={false} />\r\n              </Picker>\r\n            </View>\r\n\r\n            <View style={styles.filterContainer}>\r\n              <Text style={styles.filterLabel}>Maladies :</Text>\r\n              <Picker\r\n                style={{ height: 50, width: 150 }}\r\n                selectedValue={filterByDisease}\r\n                onValueChange={handleDiseaseChange}\r\n              >\r\n                <Picker.Item label=\"-\" value={null} />\r\n                <Picker.Item label=\"Oui\" value={true} />\r\n                <Picker.Item label=\"Non\" value={\"\"} />\r\n              </Picker>\r\n            </View>\r\n\r\n            <View style={styles.filterContainer}>\r\n              <Text style={styles.filterLabel}>Identifié :</Text>\r\n              <Picker\r\n                style={{ height: 50, width: 150 }}\r\n                selectedValue={filterByIdentification}\r\n                onValueChange={handleIdentificationChange}\r\n              >\r\n                <Picker.Item label=\"-\" value={null} />\r\n                <Picker.Item label=\"Oui\" value={true} />\r\n                <Picker.Item label=\"Non\" value={\"\"} />\r\n              </Picker>\r\n            </View>\r\n\r\n            <View style={styles.filterContainer}>\r\n              <Text style={styles.filterLabel}>\r\n                Appartient à un propriétaire :\r\n              </Text>\r\n              <Picker\r\n                style={{ height: 50, width: 150 }}\r\n                selectedValue={filterByOwner}\r\n                onValueChange={handleOwnerChange}\r\n              >\r\n                <Picker.Item label=\"-\" value={null} />\r\n                <Picker.Item label=\"Oui\" value={true} />\r\n                <Picker.Item label=\"Non\" value={\"\"} />\r\n              </Picker>\r\n            </View>\r\n\r\n            <View style={styles.filterContainer}>\r\n              <Text style={styles.filterLabel}>Est une mère :</Text>\r\n              <Picker\r\n                style={{ height: 50, width: 150 }}\r\n                selectedValue={filterByMom}\r\n                onValueChange={handleMomChange}\r\n              >\r\n                <Picker.Item label=\"-\" value={null} />\r\n                <Picker.Item label=\"Oui\" value={true} />\r\n                <Picker.Item label=\"Non\" value={\"\"} />\r\n              </Picker>\r\n\r\n              {/* <View style={styles.filterContainer}>\r\n                <Button\r\n                  title=\"Valider\"\r\n                  onPress={() => setModalVisible(false)}\r\n                />\r\n              </View> */}\r\n            </View>\r\n            <View style={styles.sectionBtns}>\r\n              <TouchableOpacity\r\n                style={styles.sectionBtns_btnCheck}\r\n                onPress={() => setModalVisible(false)}\r\n              >\r\n                <Text style={styles.sectionBtns_btnText}>Valider</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </ScrollView>\r\n        </View>\r\n      </Modal>\r\n\r\n      <AnimalList animals={filteredAnimals} />\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  filterContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  filterLabel: {\r\n    flex: 1,\r\n    fontWeight: \"bold\",\r\n  },\r\n  filterInput: {\r\n    flex: 2,\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    padding: 10,\r\n    borderRadius: 4,\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 3,\r\n    padding: 10,\r\n    // alignItems: \"center\",\r\n    rowGap: 30,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    // elevation: 5,\r\n  },\r\n  sectionBtns: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\",\r\n    margin: 20,\r\n  },\r\n  sectionBtns_btn: {\r\n    flexDirection: \"row\",\r\n    // justifyContent: \"flex-end\",\r\n    columnGap: 8,\r\n    backgroundColor: \"transparent\",\r\n    color: \"#FFF\",\r\n    borderWidth: 2,\r\n    paddingTop: 2,\r\n    paddingBottom: 2,\r\n    paddingRight: 15,\r\n    paddingLeft: 15,\r\n    borderRadius: 2,\r\n    // width: 100,\r\n  },\r\n  sectionBtns_btnCheck: {\r\n    flexDirection: \"row\",\r\n    // justifyContent: \"flex-end\",\r\n    columnGap: 8,\r\n    backgroundColor: \"black\",\r\n    color: \"#FFF\",\r\n    borderWidth: 2,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    paddingRight: 20,\r\n    paddingLeft: 20,\r\n    borderRadius: 2,\r\n    // width: 100,\r\n  },\r\n  sectionBtns_btnText: {\r\n    color: \"#FFF\",\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    fontSize: 10,\r\n  },\r\n});\r\n\r\nexport default AnimalFilters;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}