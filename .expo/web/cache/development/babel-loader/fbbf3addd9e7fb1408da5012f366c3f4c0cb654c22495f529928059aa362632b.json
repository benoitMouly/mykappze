{"ast":null,"code":"import React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useSelector } from 'react-redux';\nimport { fetchCanals } from \"../features/canals/canalSlice\";\nimport CanalCard from \"../components/canal/canalCard\";\nimport { useAppDispatch } from \"../store/store\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProfileUser = function ProfileUser() {\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    uid = _useSelector.uid,\n    isAuthenticated = _useSelector.isAuthenticated;\n  var _useSelector2 = useSelector(function (state) {\n      return state.canals;\n    }),\n    canals = _useSelector2.data,\n    status = _useSelector2.status,\n    error = _useSelector2.error;\n  var dispatch = useAppDispatch();\n  useEffect(function () {\n    if (isAuthenticated && uid) {\n      dispatch(fetchCanals(uid));\n    }\n    console.log(canals);\n  }, [dispatch, uid, isAuthenticated]);\n  return _jsx(ScrollView, {\n    style: styles.container,\n    children: canals.length ? _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Voici la liste de vos canals :\"\n      }), _jsx(View, {\n        style: styles.listCanal,\n        children: canals.map(function (canal) {\n          return _jsx(CanalCard, {\n            canal: canal\n          }, canal.id);\n        })\n      })]\n    }) : _jsx(View, {\n      style: styles.authPage,\n      children: _jsx(Text, {\n        children: \"Vous n'avez pas encore d'canals. \"\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    backgroundColor: '#2F4F4F'\n  },\n  title: {\n    fontSize: 20,\n    color: '#fff',\n    padding: 10,\n    marginTop: 0,\n    fontFamily: \"WixMadeforDisplay-Bold\"\n  },\n  listCanal: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    rowGap: 10,\n    columnGap: 0,\n    paddingTop: 30,\n    paddingHorizontal: 5\n  },\n  authPage: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default ProfileUser;","map":{"version":3,"names":["React","useEffect","View","Text","StyleSheet","ScrollView","useSelector","fetchCanals","CanalCard","useAppDispatch","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ProfileUser","_useSelector","state","auth","uid","isAuthenticated","_useSelector2","canals","data","status","error","dispatch","console","log","style","styles","container","children","length","title","listCanal","map","canal","id","authPage","create","flex","padding","backgroundColor","fontSize","color","marginTop","fontFamily","flexDirection","flexWrap","justifyContent","rowGap","columnGap","paddingTop","paddingHorizontal","alignItems","errorContainer"],"sources":["C:/Users/Benoitm/Documents/Coding/Kappze/MyKappze/src/pages/ProfileUser.tsx"],"sourcesContent":["// ProfileUser.tsx\r\nimport React, { useEffect } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchCanals } from '../features/canals/canalSlice';\r\nimport CanalCard from '../components/canal/canalCard'\r\nimport { RootState, useAppDispatch } from \"../store/store\";\r\n\r\nimport LoadingPage from '../components/general/loadingPage'; // Importez votre composant de chargement ici\r\n\r\nconst ProfileUser = () => {\r\n    const { uid, isAuthenticated } = useSelector((state: RootState) => state.auth);\r\n    const { data: canals, status, error } = useSelector((state: RootState) => state.canals);\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated && uid) {\r\n            dispatch(fetchCanals(uid));\r\n        }\r\n\r\n        console.log(canals)\r\n    }, [dispatch, uid, isAuthenticated]);\r\n\r\n    return (\r\n        <ScrollView style={styles.container}>\r\n            {canals.length ? \r\n                <>\r\n                    <Text style={styles.title}>Voici la liste de vos canals :</Text>\r\n                    <View style={styles.listCanal}>\r\n                        {canals.map((canal) => (\r\n                            <CanalCard key={canal.id} canal={canal} />\r\n                        ))}\r\n                    </View>\r\n                </> : (\r\n                    <View style={styles.authPage}>\r\n                        <Text>Vous n'avez pas encore d'canals. </Text>\r\n                    </View>\r\n                )\r\n            }\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 10,\r\n        backgroundColor: '#2F4F4F'\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        color: '#fff',\r\n        padding: 10,\r\n        marginTop: 0,\r\n        fontFamily: \"WixMadeforDisplay-Bold\",\r\n    },\r\n    listCanal: {\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n        rowGap: 10,\r\n        columnGap: 0,\r\n        paddingTop: 30,\r\n        paddingHorizontal: 5\r\n    },\r\n    authPage: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    errorContainer: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nexport default ProfileUser;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}