{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Checkbox } from 'react-native-paper';\nimport { COLORS } from \"../../data/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ColorSelect = function ColorSelect(_ref) {\n  var selectedColors = _ref.selectedColors,\n    onChange = _ref.onChange;\n  var handleColorChange = function handleColorChange(color) {\n    if (onChange) {\n      onChange(color);\n      console.log(color);\n    }\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: COLORS.map(function (color, index) {\n      return _jsxs(View, {\n        style: styles.item,\n        children: [_jsx(Checkbox, {\n          status: selectedColors && selectedColors.includes(color) ? 'checked' : 'unchecked',\n          onPress: function onPress() {\n            return handleColorChange(color);\n          },\n          color: '#d15e41',\n          uncheckedColor: \"#fff\"\n        }), _jsx(Text, {\n          style: styles.label,\n          children: color.charAt(0).toUpperCase() + color.slice(1)\n        })]\n      }, index);\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 16,\n    paddingBottom: 16,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start'\n  },\n  item: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '33%',\n    padding: 8\n  },\n  label: {\n    color: '#fff'\n  }\n});\nexport default ColorSelect;","map":{"version":3,"names":["React","View","Text","StyleSheet","Checkbox","COLORS","jsx","_jsx","jsxs","_jsxs","ColorSelect","_ref","selectedColors","onChange","handleColorChange","color","console","log","style","styles","container","children","map","index","item","status","includes","onPress","uncheckedColor","label","charAt","toUpperCase","slice","create","paddingTop","paddingBottom","flexDirection","flexWrap","alignItems","justifyContent","width","padding"],"sources":["C:/Users/Benoitm/Documents/Coding/Kappze/MyKappze/src/components/animals/colorSelect.tsx"],"sourcesContent":["import React, { FC } from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport { Checkbox } from 'react-native-paper';  // Utilisez n'importe quel paquet de composants de votre choix pour les checkbox\r\nimport { COLORS } from '../../data/colors';\r\n\r\ninterface ColorSelectProps {\r\n    selectedColors: string[];\r\n    onChange: (color: string) => void;\r\n}\r\n\r\nconst ColorSelect: FC<ColorSelectProps> = ({ selectedColors, onChange }) => {\r\n    const handleColorChange = (color: string) => {\r\n        if (onChange) {\r\n            onChange(color);\r\n            console.log(color)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            {COLORS.map((color, index) => (\r\n                <View key={index} style={styles.item}>\r\n                    <Checkbox\r\n                        status={selectedColors && selectedColors.includes(color) ? 'checked' : 'unchecked'}\r\n                        onPress={() => handleColorChange(color)}\r\n                        color={'#d15e41'}\r\n                        uncheckedColor={\"#fff\"}\r\n                    />\r\n                    <Text style={styles.label}>{color.charAt(0).toUpperCase() + color.slice(1)}</Text>\r\n                </View>\r\n            ))}\r\n        </View>\r\n    );\r\n};\r\n\r\n// const styles = StyleSheet.create({\r\n//     container: {\r\n//         paddingTop: 16,\r\n//         flexDirection: 'row',\r\n//         flexWrap: 'wrap',\r\n//         paddingBottom: 16,\r\n//         alignItems: 'center',\r\n//         // justifyContent: 'flex-start'\r\n//         columnGap: 40\r\n//     },\r\n//     item: {\r\n//         paddingRight: 16,\r\n//         flexDirection: 'row',\r\n//         alignItems: 'center',\r\n//     },\r\n//     label: {\r\n//         color: '#fff',\r\n//     },\r\n// });\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        paddingTop: 16,\r\n        paddingBottom: 16,\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    item: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        width: '33%',  // Changer la largeur en fonction de combien de colonnes vous voulez\r\n        padding: 8,\r\n    },\r\n    label: {\r\n        color: '#fff',\r\n    },\r\n});\r\n\r\n\r\nexport default ColorSelect;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAc,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAElC,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,MAAM;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAO3C,IAAMC,WAAiC,GAAG,SAApCA,WAAiCA,CAAAC,IAAA,EAAqC;EAAA,IAA/BC,cAAc,GAAAD,IAAA,CAAdC,cAAc;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;EACjE,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,KAAa,EAAK;IACzC,IAAIF,QAAQ,EAAE;MACVA,QAAQ,CAACE,KAAK,CAAC;MACfC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;EAED,OACIR,IAAA,CAACN,IAAI;IAACiB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EACzBhB,MAAM,CAACiB,GAAG,CAAC,UAACP,KAAK,EAAEQ,KAAK;MAAA,OACrBd,KAAA,CAACR,IAAI;QAAaiB,KAAK,EAAEC,MAAM,CAACK,IAAK;QAAAH,QAAA,GACjCd,IAAA,CAACH,QAAQ;UACLqB,MAAM,EAAEb,cAAc,IAAIA,cAAc,CAACc,QAAQ,CAACX,KAAK,CAAC,GAAG,SAAS,GAAG,WAAY;UACnFY,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMb,iBAAiB,CAACC,KAAK,CAAC;UAAA,CAAC;UACxCA,KAAK,EAAE,SAAU;UACjBa,cAAc,EAAE;QAAO,CAC1B,CAAC,EACFrB,IAAA,CAACL,IAAI;UAACgB,KAAK,EAAEC,MAAM,CAACU,KAAM;UAAAR,QAAA,EAAEN,KAAK,CAACe,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGhB,KAAK,CAACiB,KAAK,CAAC,CAAC;QAAC,CAAO,CAAC;MAAA,GAP3ET,KAQL,CAAC;IAAA,CACV;EAAC,CACA,CAAC;AAEf,CAAC;AAsBD,IAAMJ,MAAM,GAAGhB,UAAU,CAAC8B,MAAM,CAAC;EAC7Bb,SAAS,EAAE;IACPc,UAAU,EAAE,EAAE;IACdC,aAAa,EAAE,EAAE;IACjBC,aAAa,EAAE,KAAK;IACpBC,QAAQ,EAAE,MAAM;IAChBC,UAAU,EAAE,YAAY;IACxBC,cAAc,EAAE;EACpB,CAAC;EACDf,IAAI,EAAE;IACFY,aAAa,EAAE,KAAK;IACpBE,UAAU,EAAE,QAAQ;IACpBE,KAAK,EAAE,KAAK;IACZC,OAAO,EAAE;EACb,CAAC;EACDZ,KAAK,EAAE;IACHd,KAAK,EAAE;EACX;AACJ,CAAC,CAAC;AAGF,eAAeL,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}