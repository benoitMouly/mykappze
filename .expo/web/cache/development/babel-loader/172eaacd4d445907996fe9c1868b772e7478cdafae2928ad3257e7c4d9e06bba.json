{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchComments, addComment, deleteComment, updateComment } from \"../../features/animals/commentsSlice\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInputModal from \"../../components/general/TextUpdateModal\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar CommentForm = function CommentForm(_ref) {\n  var animalId = _ref.animalId;\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    surname = _useSelector.surname,\n    uid = _useSelector.uid;\n  var dispatch = useDispatch();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    comment = _useState2[0],\n    setComment = _useState2[1];\n  var handleInputChange = function handleInputChange(value) {\n    setComment(value);\n  };\n  var handleFormSubmit = function handleFormSubmit() {\n    if (comment.trim()) {\n      dispatch(addComment({\n        animalId: animalId,\n        comment: {\n          texte: comment,\n          auteur: surname\n        },\n        uid: uid\n      }));\n      setComment(\"\");\n    }\n  };\n  return _jsxs(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    children: [_jsx(TextInput, {\n      placeholder: \"Ajouter un commentaire\",\n      value: comment,\n      onChangeText: handleInputChange,\n      multiline: true,\n      numberOfLines: 4,\n      style: {\n        borderRadius: 4,\n        flex: 1\n      }\n    }), _jsx(Button, {\n      title: \"Commenter\",\n      onPress: handleFormSubmit\n    })]\n  });\n};\nvar CommentList = function CommentList(_ref2) {\n  var animalId = _ref2.animalId;\n  var _useSelector2 = useSelector(function (state) {\n      return state.auth;\n    }),\n    surname = _useSelector2.surname,\n    uid = _useSelector2.uid;\n  var dispatch = useDispatch();\n  var comments = useSelector(function (state) {\n    return state.comments;\n  });\n  var _useSelector3 = useSelector(function (state) {\n      return state.canalUsers;\n    }),\n    users = _useSelector3.data;\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userIsAdmin = _useState4[0],\n    setUserRole = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isEditedCommentContentVisible = _useState6[0],\n    setEditVisible = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    editedCanalName = _useState8[0],\n    setEditedCommentContent = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    selectedCommentId = _useState10[0],\n    setSelectedCommentId = _useState10[1];\n  var handleUpdateComment = function handleUpdateComment(updatedText) {\n    dispatch(updateComment({\n      animalId: animalId,\n      commentId: selectedCommentId,\n      updatedText: updatedText\n    }));\n  };\n  useEffect(function () {\n    users.forEach(function (user) {\n      if (user.id === uid) {\n        setUserRole(user.isAdmin);\n      }\n    });\n  }, [users]);\n  useEffect(function () {\n    dispatch(fetchComments(animalId));\n  }, [dispatch, animalId]);\n  var handleDelete = function handleDelete(commentId) {\n    Alert.alert(\"Confirmation\", \"Êtes-vous sûr de vouloir supprimer ce commentaire ?\", [{\n      text: \"Annuler\",\n      style: \"cancel\"\n    }, {\n      text: \"Supprimer\",\n      onPress: function onPress() {\n        return dispatch(deleteComment({\n          animalId: animalId,\n          commentId: commentId\n        }));\n      },\n      style: \"destructive\"\n    }]);\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(ScrollView, {\n      style: {\n        margin: 0,\n        padding: 0\n      },\n      children: comments.map(function (comment) {\n        return _jsxs(View, {\n          style: {\n            backgroundColor: \"#122121\",\n            borderRadius: 3,\n            padding: 15\n          },\n          children: [_jsxs(View, {\n            style: styles.editEltGroup,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: comment == null ? void 0 : comment.texte\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                setEditVisible(true);\n                setSelectedCommentId(comment.id);\n                setEditedCommentContent(comment.texte);\n              },\n              style: styles.sectionHeader,\n              children: _jsx(View, {\n                style: styles.buttonIcon,\n                children: _jsx(Icon, {\n                  style: styles.buttonIconElt,\n                  name: \"pencil-outline\",\n                  size: 15,\n                  color: \"#fff\"\n                })\n              })\n            })]\n          }), _jsxs(Text, {\n            style: {\n              color: \"#fff\"\n            },\n            children: [\"Par \", comment.auteur, \", \"]\n          }), _jsxs(Text, {\n            style: {\n              color: \"#fff\"\n            },\n            children: [\"le \", new Date(comment.horodatage).toLocaleString()]\n          }), (comment.authorId === uid || userIsAdmin) && _jsx(Button, {\n            title: \"Supprimer\",\n            onPress: function onPress() {\n              return handleDelete(comment.id);\n            }\n          })]\n        }, comment.id);\n      })\n    }), _jsx(TextInputModal, {\n      visible: isEditedCommentContentVisible,\n      onClose: function onClose() {\n        setEditVisible(false);\n        setSelectedCommentId(null);\n      },\n      onConfirm: function onConfirm(value) {\n        handleUpdateComment(value);\n        setEditVisible(false);\n        setSelectedCommentId(null);\n      },\n      messageType: \"Modifier le commentaire\",\n      onChangeText: setEditedCommentContent,\n      value: editedCanalName\n    })]\n  });\n};\nvar CommentSection = function CommentSection(_ref3) {\n  var animalId = _ref3.animalId,\n    commentsLength = _ref3.commentsLength;\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    modalVisible = _useState12[0],\n    setModalVisible = _useState12[1];\n  var handleModalToggle = function handleModalToggle() {\n    setModalVisible(!modalVisible);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      onPress: handleModalToggle,\n      style: styles.sectionBtns_btn,\n      children: _jsxs(Text, {\n        style: {\n          color: 'white'\n        },\n        children: [\"COMMENTAIRES (\", commentsLength, \")\"]\n      })\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: false,\n      visible: modalVisible,\n      onRequestClose: handleModalToggle,\n      children: _jsxs(View, {\n        style: styles.modalContainer,\n        children: [_jsx(Button, {\n          title: \"Fermer\",\n          onPress: handleModalToggle\n        }), _jsx(CommentList, {\n          animalId: animalId\n        }), _jsx(View, {\n          style: styles.footer,\n          children: _jsx(CommentForm, {\n            animalId: animalId\n          })\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  modalContainer: {\n    flex: 1\n  },\n  btnComments: {\n    backgroundColor: \"#122121\"\n  },\n  footer: {\n    position: \"absolute\",\n    width: \"100%\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: \"#f8f8f8\",\n    borderTopColor: \"#e8e8e8\",\n    borderTopWidth: 1,\n    padding: 10\n  }\n});\nexport default CommentSection;","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchComments","addComment","deleteComment","updateComment","View","Text","TextInput","Button","Alert","ScrollView","StyleSheet","TouchableOpacity","Modal","TextInputModal","Icon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CommentForm","_ref","animalId","_useSelector","state","auth","surname","uid","dispatch","_useState","_useState2","_slicedToArray","comment","setComment","handleInputChange","value","handleFormSubmit","trim","texte","auteur","style","flexDirection","alignItems","children","placeholder","onChangeText","multiline","numberOfLines","borderRadius","flex","title","onPress","CommentList","_ref2","_useSelector2","comments","_useSelector3","canalUsers","users","data","_useState3","_useState4","userIsAdmin","setUserRole","_useState5","_useState6","isEditedCommentContentVisible","setEditVisible","_useState7","_useState8","editedCanalName","setEditedCommentContent","_useState9","_useState10","selectedCommentId","setSelectedCommentId","handleUpdateComment","updatedText","commentId","forEach","user","id","isAdmin","handleDelete","alert","text","margin","padding","map","backgroundColor","styles","editEltGroup","sectionHeader","buttonIcon","buttonIconElt","name","size","color","Date","horodatage","toLocaleString","authorId","visible","onClose","onConfirm","messageType","CommentSection","_ref3","commentsLength","_useState11","_useState12","modalVisible","setModalVisible","handleModalToggle","container","sectionBtns_btn","animationType","transparent","onRequestClose","modalContainer","footer","create","justifyContent","btnComments","position","width","bottom","left","right","borderTopColor","borderTopWidth"],"sources":["C:/Users/Benoitm/Documents/Coding/Kappze/MyKappze/src/components/animals/comments.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchComments,\r\n  addComment,\r\n  deleteComment,\r\n  updateComment,\r\n} from \"../../features/animals/commentsSlice\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  Button,\r\n  Alert,\r\n  ScrollView,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Modal,\r\n} from \"react-native\";\r\nimport TextInputModal from \"../../components/general/TextUpdateModal\";\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\n// import { Modal, Button, View, StyleSheet } from 'react-native';\r\n\r\nconst CommentForm = ({ animalId }) => {\r\n  const { surname, uid } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const handleInputChange = (value) => {\r\n    setComment(value);\r\n  };\r\n\r\n  const handleFormSubmit = () => {\r\n    if (comment.trim()) {\r\n      dispatch(\r\n        addComment({\r\n          animalId,\r\n          comment: { texte: comment, auteur: surname },\r\n          uid,\r\n        })\r\n      );\r\n      setComment(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n      <TextInput\r\n        placeholder=\"Ajouter un commentaire\"\r\n        value={comment}\r\n        onChangeText={handleInputChange}\r\n        multiline\r\n        numberOfLines={4}\r\n        style={{ borderRadius: 4, flex: 1 }}\r\n      />\r\n      <Button title=\"Commenter\" onPress={handleFormSubmit} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst CommentList = ({ animalId }) => {\r\n  const { surname, uid } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const comments = useSelector((state) => state.comments);\r\n  const { data: users } = useSelector((state) => state.canalUsers);\r\n  const [userIsAdmin, setUserRole] = useState({});\r\n  const [isEditedCommentContentVisible, setEditVisible] = useState(false);\r\n  const [editedCanalName, setEditedCommentContent] = useState(\"\");\r\n  const [selectedCommentId, setSelectedCommentId] = useState(null);\r\n  // const [currentCanalName, setCurrentCanalName] = useState(\r\n  //     canal.name\r\n  //   );\r\n\r\n  const handleUpdateComment = (updatedText) => {\r\n    dispatch(\r\n      updateComment({ animalId, commentId: selectedCommentId, updatedText })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    users.forEach((user) => {\r\n      if (user.id === uid) {\r\n        setUserRole(user.isAdmin);\r\n      }\r\n    });\r\n  }, [users]);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchComments(animalId));\r\n  }, [dispatch, animalId]);\r\n\r\n  const handleDelete = (commentId) => {\r\n    Alert.alert(\r\n      \"Confirmation\",\r\n      \"Êtes-vous sûr de vouloir supprimer ce commentaire ?\",\r\n      [\r\n        {\r\n          text: \"Annuler\",\r\n          style: \"cancel\",\r\n        },\r\n        {\r\n          text: \"Supprimer\",\r\n          onPress: () => dispatch(deleteComment({ animalId, commentId })),\r\n          style: \"destructive\",\r\n        },\r\n      ]\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ScrollView style={{ margin: 0, padding: 0 }}>\r\n        {comments.map((comment) => (\r\n          <View\r\n            key={comment.id}\r\n            style={{ backgroundColor: \"#122121\", borderRadius: 3, padding: 15 }}\r\n          >\r\n            <View style={styles.editEltGroup}>\r\n              <Text style={styles.text}>{comment?.texte}</Text>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  setEditVisible(true);\r\n                  setSelectedCommentId(comment.id); // set the selected comment ID when the edit button is pressed\r\n                  setEditedCommentContent(comment.texte); // set the current comment texte to the state\r\n                }}\r\n                style={styles.sectionHeader}\r\n              >\r\n                <View style={styles.buttonIcon}>\r\n                  <Icon\r\n                    style={styles.buttonIconElt}\r\n                    name=\"pencil-outline\"\r\n                    size={15}\r\n                    color=\"#fff\"\r\n                  />\r\n                </View>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <Text style={{ color: \"#fff\" }}>Par {comment.auteur}, </Text>\r\n            <Text style={{ color: \"#fff\" }}>\r\n              le {new Date(comment.horodatage).toLocaleString()}\r\n            </Text>\r\n            {(comment.authorId === uid || userIsAdmin) && (\r\n              <Button\r\n                title=\"Supprimer\"\r\n                onPress={() => handleDelete(comment.id)}\r\n              />\r\n            )}\r\n          </View>\r\n        ))}\r\n      </ScrollView>\r\n      <TextInputModal\r\n        visible={isEditedCommentContentVisible}\r\n        onClose={() => {\r\n          setEditVisible(false);\r\n          setSelectedCommentId(null); // reset the selected comment ID when the modal is closed\r\n        }}\r\n        onConfirm={(value) => {\r\n          handleUpdateComment(value);\r\n          setEditVisible(false);\r\n          setSelectedCommentId(null); // reset the selected comment ID after update\r\n        }}\r\n        messageType={\"Modifier le commentaire\"}\r\n        onChangeText={setEditedCommentContent}\r\n        value={editedCanalName} // set the initial value of the text input to the current comment texte\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst CommentSection = ({ animalId, commentsLength }) => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const handleModalToggle = () => {\r\n    setModalVisible(!modalVisible);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity\r\n        onPress={handleModalToggle}\r\n        style={styles.sectionBtns_btn}\r\n      ><Text style={{color: 'white'}}>COMMENTAIRES ({commentsLength})</Text></TouchableOpacity>\r\n\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={false}\r\n        visible={modalVisible}\r\n        onRequestClose={handleModalToggle}\r\n      >\r\n        <View style={styles.modalContainer}>\r\n          <Button title=\"Fermer\" onPress={handleModalToggle} />\r\n          <CommentList animalId={animalId} />\r\n          <View style={styles.footer}>\r\n            <CommentForm animalId={animalId} />\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n  },\r\n  btnComments: {\r\n    backgroundColor: \"#122121\",\r\n  },\r\n  footer: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    backgroundColor: \"#f8f8f8\",\r\n    borderTopColor: \"#e8e8e8\",\r\n    borderTopWidth: 1,\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nexport default CommentSection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}