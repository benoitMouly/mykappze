{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { useSelector } from \"react-redux\";\nimport { useAppDispatch } from \"../store/store\";\nimport { fetchCities, fetchAllSectors } from \"../features/citiesSector/citySectorSlice\";\nimport { fetchAnimalsByCanal } from \"../features/animals/animalSlice\";\nimport { fetchCanalUsers } from \"../features/canals/canalUsersSlice\";\nimport { useRoute } from \"@react-navigation/native\";\nimport * as Font from \"expo-font\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport AnimalFilters from \"../components/animals/animalFilter\";\nimport AddCitySectorModal from \"../components/citiesSector/addCitySectorModal\";\nimport AddSectorModal from \"../components/sectors/addSectorModal\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport * as Clipboard from \"expo-clipboard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CanalDetails = function CanalDetails() {\n  var route = useRoute();\n  var dispatch = useAppDispatch();\n  var navigation = useNavigation();\n  var navigationCitySector = useNavigation();\n  var navigationEdit = useNavigation();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    copiedText = _useState2[0],\n    setCopiedText = _useState2[1];\n  var _ref = route.params,\n    canalId = _ref.canalId;\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    isAuthenticated = _useSelector.isAuthenticated,\n    uid = _useSelector.uid;\n  var _useSelector2 = useSelector(function (state) {\n      return state.canals;\n    }),\n    canals = _useSelector2.data,\n    canalsStatus = _useSelector2.status;\n  var _useSelector3 = useSelector(function (state) {\n      return state.citiesSector;\n    }),\n    citiesSector = _useSelector3.data,\n    citiesSectorStatus = _useSelector3.status;\n  var _useSelector4 = useSelector(function (state) {\n      return state.animals;\n    }),\n    animals = _useSelector4.data,\n    animalsStatus = _useSelector4.status;\n  var _useSelector5 = useSelector(function (state) {\n      return state.canalUsers;\n    }),\n    users = _useSelector5.data,\n    usersStatus = _useSelector5.status;\n  var canal = canals.find(function (asso) {\n    return asso.id === canalId;\n  });\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    editableFields = _useState4[0],\n    setEditableFields = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userIsAdmin = _useState6[0],\n    setUserRole = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isOpenBlock1 = _useState8[0],\n    setIsOpenBlock1 = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isOpenBlock2 = _useState10[0],\n    setIsOpenBlock2 = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isOpenBlock3 = _useState12[0],\n    setIsOpenBlock3 = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isOpenBlock4 = _useState14[0],\n    setIsOpenBlock4 = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isCopied = _useState16[0],\n    setIsCopied = _useState16[1];\n  var _useState17 = useState([]),\n    _useState18 = _slicedToArray(_useState17, 2),\n    sectorsList = _useState18[0],\n    setSectors = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    fontsLoaded = _useState20[0],\n    setFontsLoaded = _useState20[1];\n  var archiveType = \"canal\";\n  var loadFonts = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      yield Font.loadAsync({\n        \"WixMadeforDisplay-Regular\": require(\"../assets/fonts/WixMadeforDisplay-Regular.ttf\"),\n        \"WixMadeforDisplay-Bold\": require(\"../assets/fonts/WixMadeforDisplay-Bold.otf\")\n      });\n      setFontsLoaded(true);\n    });\n    return function loadFonts() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    loadFonts();\n  }, []);\n  useEffect(function () {\n    users.forEach(function (user) {\n      if (user.id === uid) {\n        setUserRole(user.isAdmin);\n      }\n    });\n  }, [users]);\n  var _useState21 = useState(false),\n    _useState22 = _slicedToArray(_useState21, 2),\n    refreshing = _useState22[0],\n    setRefreshing = _useState22[1];\n  var wait = function wait(timeout) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, timeout);\n    });\n  };\n  var onRefresh = React.useCallback(function () {\n    setRefreshing(true);\n    wait(2000).then(function () {\n      setRefreshing(false), dispatch(fetchAnimalsByCanal(canalId));\n    });\n  }, []);\n  var numSterilizedCats = animals.filter(function (animal) {\n    return animal.isSterilise;\n  }).length;\n  var numNotIdentifiedCats = animals.filter(function (animal) {\n    return !animal.hasIdNumber;\n  }).length;\n  var numIsBelongedCats = animals.filter(function (animal) {\n    return !animal.isBelonged;\n  }).length;\n  useEffect(function () {\n    if (isAuthenticated) {\n      dispatch(fetchCities(canalId));\n      dispatch(fetchAnimalsByCanal(canalId));\n      dispatch(fetchCanalUsers(canalId));\n    }\n  }, [canalId, isAuthenticated]);\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        if (isAuthenticated) {\n          var sectores = yield fetchAllSectors(citiesSector, dispatch);\n          setSectors(sectores);\n        }\n      });\n      return function fetchData() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    fetchData();\n    console.log(canalId);\n  }, [canalId, citiesSector, isAuthenticated]);\n  useEffect(function () {\n    users.forEach(function (user) {\n      if (user.id === uid) {\n        setUserRole(user.isAdmin);\n      }\n    });\n  }, [users]);\n  var copyToClipboard = function () {\n    var _ref4 = _asyncToGenerator(function* (value) {\n      yield Clipboard.setStringAsync(value);\n      setIsCopied(true);\n      setTimeout(function () {\n        return setIsCopied(false);\n      }, 2000);\n    });\n    return function copyToClipboard(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    children: [_jsxs(ScrollView, {\n      style: styles.container,\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh\n      }),\n      children: [_jsxs(View, {\n        style: styles.header,\n        children: [_jsxs(View, {\n          style: styles.header1st,\n          children: [_jsx(Image, {\n            source: {\n              uri: canal == null ? void 0 : canal.image\n            },\n            style: styles.image\n          }), _jsx(Text, {\n            style: styles.title,\n            children: canal == null ? void 0 : canal.name\n          }), _jsx(View, {\n            style: styles.settingsBtn,\n            children: userIsAdmin && _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return navigationEdit.navigate(\"EditCanal\", {\n                  canalId: canal == null ? void 0 : canal.id\n                });\n              },\n              style: styles.sectionBtns_btnSettings,\n              children: _jsx(Icon, {\n                name: \"settings-outline\",\n                size: 24,\n                color: \"#fff\"\n              })\n            })\n          })]\n        }), _jsxs(View, {\n          style: styles.sectionShare,\n          children: [_jsx(Text, {\n            style: styles.sectionShare_title,\n            children: \"Partager le canal : \"\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              copyToClipboard(canal.id);\n            },\n            style: styles.sectionShare_button,\n            children: _jsx(Text, {\n              style: styles.sectionShare_buttonText,\n              selectable: true,\n              children: isCopied ? \"Copi√© !\" : canal == null ? void 0 : canal.id\n            })\n          })]\n        }), _jsx(View, {\n          style: styles.addCat,\n          children: _jsx(View, {\n            style: styles.iconAddCat\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.containerSection,\n        children: [_jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return setIsOpenBlock1(!isOpenBlock1);\n          },\n          style: styles.sectionHeader,\n          children: [_jsx(Text, {\n            style: styles.sectionTitle,\n            children: \"Informations g\\xE9n\\xE9rales\"\n          }), _jsx(Icon, {\n            name: isOpenBlock1 ? \"chevron-down\" : \"chevron-forward\",\n            size: 24,\n            color: \"#000\"\n          })]\n        }), isOpenBlock1 && _jsxs(View, {\n          style: styles.section,\n          children: [_jsx(Text, {\n            children: canal == null ? void 0 : canal.name\n          }), _jsx(Text, {\n            children: canal == null ? void 0 : canal.email\n          }), _jsx(Text, {\n            children: canal == null ? void 0 : canal.citySector\n          }), _jsx(Text, {\n            children: canal == null ? void 0 : canal.postalCode\n          })]\n        }), _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return setIsOpenBlock2(!isOpenBlock2);\n          },\n          style: styles.sectionHeader,\n          children: [_jsxs(Text, {\n            style: styles.sectionTitle,\n            children: [\"Membres : (\", users.length, \")\"]\n          }), _jsx(Icon, {\n            name: isOpenBlock2 ? \"chevron-down\" : \"chevron-forward\",\n            size: 24,\n            color: \"#000\"\n          })]\n        }), isOpenBlock2 && _jsx(View, {\n          style: styles.section,\n          children: users.map(function (user) {\n            return _jsxs(View, {\n              children: [_jsx(Text, {\n                children: user.name\n              }), _jsx(Text, {\n                children: user.email\n              })]\n            }, user.id);\n          })\n        }), _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return setIsOpenBlock3(!isOpenBlock3);\n          },\n          style: styles.sectionHeader,\n          children: [_jsxs(Text, {\n            style: styles.sectionTitle,\n            children: [\"Villes Couvertes : (\", citiesSector.length, \")\"]\n          }), _jsx(Icon, {\n            name: isOpenBlock3 ? \"chevron-down\" : \"chevron-forward\",\n            size: 24,\n            color: \"#000\"\n          })]\n        }), isOpenBlock3 && _jsx(View, {\n          style: styles.sectionCitySector,\n          children: citiesSector.map(function (citySector) {\n            return _jsx(View, {\n              style: styles.citySectorList,\n              children: _jsxs(TouchableOpacity, {\n                onPress: function onPress() {\n                  return navigationCitySector.navigate(\"CitySectorDetails\", {\n                    canalId: canalId,\n                    citySectorId: citySector == null ? void 0 : citySector.id\n                  });\n                },\n                style: styles.sectionBtns_btnCitySector,\n                children: [_jsx(Text, {\n                  style: styles.sectionTitleCitySector,\n                  children: citySector == null ? void 0 : citySector.name\n                }), _jsx(Icon, {\n                  name: \"chevron-forward\",\n                  size: 24,\n                  color: \"#FFF\"\n                })]\n              })\n            }, citySector.id);\n          })\n        })]\n      }), _jsx(AnimalFilters, {\n        animals: animals,\n        sectorized: sectorsList,\n        archiveType: archiveType\n      }), _jsx(Text, {\n        children: \"Pull down to see RefreshControl indicator\"\n      })]\n    }), _jsxs(View, {\n      style: styles.footer,\n      children: [_jsx(AddCitySectorModal, {\n        style: styles.sectionBtns_btn,\n        canalId: canal == null ? void 0 : canal.id\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"AddCat\", {\n            canalId: canal == null ? void 0 : canal.id\n          });\n        },\n        style: styles.sectionBtns_btn,\n        children: _jsxs(View, {\n          style: styles.buttonGroupIcons,\n          children: [_jsx(Image, {\n            source: require(\"../assets/icon-paw.png\"),\n            style: styles.buttonIcon\n          }), _jsx(Text, {\n            style: {\n              color: \"white\"\n            },\n            children: \"+\"\n          })]\n        })\n      }), _jsx(AddSectorModal, {\n        style: styles.sectionBtns_btn,\n        canalId: canal == null ? void 0 : canal.id\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: 0,\n    height: \"100%\"\n  },\n  header: {\n    flexDirection: \"column\",\n    backgroundColor: \"#2F4F4F\",\n    padding: 30\n  },\n  header1st: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    backgroundColor: \"#2F4F4F\",\n    paddingTop: 20\n  },\n  sectionShare: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#2F4F4F\",\n    color: \"#FFF\"\n  },\n  sectionShare_title: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    marginBottom: 10,\n    color: \"#FFF\",\n    paddingTop: 5,\n    fontFamily: \"WixMadeforDisplay-Bold\"\n  },\n  sectionShare_button: {\n    backgroundColor: \"#fff\",\n    color: \"#000\",\n    padding: 5,\n    width: \"60%\"\n  },\n  sectionShare_buttonText: {\n    color: \"#000\",\n    fontFamily: \"WixMadeforDisplay-Regular\",\n    marginBottom: 5,\n    width: \"100%\",\n    textAlign: \"center\"\n  },\n  sectionBtns: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    rowGap: 40,\n    columnGap: 10,\n    padding: 6,\n    marginTop: 20\n  },\n  sectionBtns_btn: {\n    flexDirection: \"row\",\n    columnGap: 8,\n    backgroundColor: \"#000\",\n    color: \"#FFF\",\n    padding: 10,\n    borderRadius: 2\n  },\n  sectionBtns_btnSettings: {\n    flexDirection: \"row\",\n    columnGap: 8,\n    backgroundColor: \"transparent\",\n    color: \"#FFF\",\n    padding: 10,\n    borderRadius: 2\n  },\n  sectionBtns_btnText: {\n    color: \"#FFF\",\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontSize: 10\n  },\n  image: {\n    width: 50,\n    height: 50,\n    marginRight: 10,\n    borderRadius: 50\n  },\n  title: {\n    color: \"#FFF\",\n    fontSize: 32,\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontWeight: \"600\"\n  },\n  containerSection: {\n    padding: 10\n  },\n  section: {\n    marginBottom: 20,\n    padding: 25,\n    paddingTop: 0\n  },\n  sectionHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 25,\n    paddingBottom: 5\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    marginBottom: 10\n  },\n  text: {\n    fontSize: 14\n  },\n  buttonGroupIcons: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  buttonIcon: {\n    marginRight: 5,\n    width: 20,\n    height: 20\n  },\n  addCat: {\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  iconAddCat: {\n    flexDirection: \"row\",\n    marginTop: 20\n  },\n  sectionCitySector: {\n    flexDirection: \"column\",\n    rowGap: 5,\n    justifyContent: \"center\"\n  },\n  citySectorList: {\n    maxWidth: 200\n  },\n  sectionBtns_btnCitySector: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    backgroundColor: \"#000\",\n    color: \"#FFF\",\n    padding: 10,\n    borderRadius: 2\n  },\n  sectionTitleCitySector: {\n    color: \"#FFF\",\n    fontSize: 14,\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontWeight: \"600\"\n  },\n  line: {\n    height: 2,\n    backgroundColor: \"#000\",\n    alignSelf: \"center\",\n    marginVertical: 20,\n    width: \"80%\"\n  },\n  footer: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    height: 60,\n    backgroundColor: \"#000\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    padding: 10,\n    marginTop: 10\n  },\n  settingsBtn: {\n    position: \"absolute\",\n    top: 0,\n    right: 0\n  }\n});\nexport default CanalDetails;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","TouchableOpacity","Image","ScrollView","RefreshControl","useSelector","useAppDispatch","fetchCities","fetchAllSectors","fetchAnimalsByCanal","fetchCanalUsers","useRoute","Font","Icon","AnimalFilters","AddCitySectorModal","AddSectorModal","useNavigation","Clipboard","jsx","_jsx","jsxs","_jsxs","CanalDetails","route","dispatch","navigation","navigationCitySector","navigationEdit","_useState","_useState2","_slicedToArray","copiedText","setCopiedText","_ref","params","canalId","_useSelector","state","auth","isAuthenticated","uid","_useSelector2","canals","data","canalsStatus","status","_useSelector3","citiesSector","citiesSectorStatus","_useSelector4","animals","animalsStatus","_useSelector5","canalUsers","users","usersStatus","canal","find","asso","id","_useState3","_useState4","editableFields","setEditableFields","_useState5","_useState6","userIsAdmin","setUserRole","_useState7","_useState8","isOpenBlock1","setIsOpenBlock1","_useState9","_useState10","isOpenBlock2","setIsOpenBlock2","_useState11","_useState12","isOpenBlock3","setIsOpenBlock3","_useState13","_useState14","isOpenBlock4","setIsOpenBlock4","_useState15","_useState16","isCopied","setIsCopied","_useState17","_useState18","sectorsList","setSectors","_useState19","_useState20","fontsLoaded","setFontsLoaded","archiveType","loadFonts","_ref2","_asyncToGenerator","loadAsync","require","apply","arguments","forEach","user","isAdmin","_useState21","_useState22","refreshing","setRefreshing","wait","timeout","Promise","resolve","setTimeout","onRefresh","useCallback","then","numSterilizedCats","filter","animal","isSterilise","length","numNotIdentifiedCats","hasIdNumber","numIsBelongedCats","isBelonged","fetchData","_ref3","sectores","console","log","copyToClipboard","_ref4","value","setStringAsync","_x","children","style","styles","container","refreshControl","header","header1st","source","uri","image","title","name","settingsBtn","onPress","navigate","sectionBtns_btnSettings","size","color","sectionShare","sectionShare_title","sectionShare_button","sectionShare_buttonText","selectable","addCat","iconAddCat","containerSection","sectionHeader","sectionTitle","section","email","citySector","postalCode","map","sectionCitySector","citySectorList","citySectorId","sectionBtns_btnCitySector","sectionTitleCitySector","sectorized","footer","sectionBtns_btn","buttonGroupIcons","buttonIcon","create","padding","height","flexDirection","backgroundColor","alignItems","marginBottom","paddingTop","justifyContent","fontSize","fontWeight","fontFamily","width","textAlign","sectionBtns","rowGap","columnGap","marginTop","borderRadius","sectionBtns_btnText","marginRight","paddingBottom","text","display","maxWidth","line","alignSelf","marginVertical","position","bottom","left","right","top"],"sources":["C:/Users/Benoitm/Documents/Coding/Kappze/MyKappze/src/pages/CanalDetails.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Image,\r\n  Touchable,\r\n  ScrollView,\r\n  SafeAreaView,\r\n  Button,\r\n  RefreshControl,\r\n} from \"react-native\";\r\n// import Clipboard from '@react-native-clipboard/clipboard';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useAppDispatch } from \"../store/store\";\r\nimport { fetchCities, fetchAllSectors } from \"../features/citiesSector/citySectorSlice\";\r\nimport { fetchAnimalsByCanal } from \"../features/animals/animalSlice\";\r\nimport { fetchSectorById } from \"../features/sectors/sectorSlice\";\r\nimport { fetchCanalUsers } from \"../features/canals/canalUsersSlice\";\r\nimport { useRoute } from \"@react-navigation/native\";\r\nimport * as Font from \"expo-font\";\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\nimport AnimalList from \"../components/animals/animalList\";\r\nimport AnimalFilters from \"../components/animals/animalFilter\";\r\nimport AddCitySectorModal from \"../components/citiesSector/addCitySectorModal\";\r\nimport AddSectorModal from \"../components/sectors/addSectorModal\";\r\nimport AddCat from \"./AddCat\";\r\nimport { fetchSectors } from \"../features/sectors/sectorSlice\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport * as Clipboard from \"expo-clipboard\";\r\n\r\n// d√©finir les interfaces\r\ninterface Canal {\r\n  id: string;\r\n  data: any[]; // Changez `any` en type appropri√©\r\n  // Autres propri√©t√©s...\r\n}\r\n\r\ninterface Animal {\r\n  isSterilise: boolean;\r\n  hasIdNumber: boolean;\r\n  isBelonged: boolean;\r\n  // Ajoutez d'autres champs ici si n√©cessaire\r\n}\r\n\r\ninterface User {\r\n  id: string;\r\n  isAdmin: boolean;\r\n  // Ajoutez d'autres champs ici si n√©cessaire\r\n}\r\n\r\ninterface CitySector {\r\n  // Propri√©t√©s pour la ville...\r\n}\r\n\r\ninterface Sector {\r\n  // Propri√©t√©s pour le secteur...\r\n}\r\n\r\ninterface DataState<T> {\r\n  data: T[];\r\n  status: \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n  error: string | null;\r\n  // Ajoutez ici d'autres champs si n√©cessaire\r\n}\r\n\r\n// Utilisez cette interface dans l'interface RootState\r\ninterface RootState {\r\n  canals: DataState<Canal>;\r\n  citiesSector: DataState<CitySector>;\r\n  animals: DataState<Animal>;\r\n  canalUsers: DataState<User>;\r\n  sectors: DataState<Sector>;\r\n  auth: {\r\n    isAuthenticated: boolean;\r\n    uid: string;\r\n  };\r\n}\r\n\r\ninterface RouteParams {\r\n  id: string;\r\n  canalId: string;\r\n  citySectorId: string;\r\n}\r\n\r\ntype RootStackParamList = {\r\n  AddCat: undefined;\r\n  CitySectorDetails: undefined;\r\n  EditCanal: undefined;\r\n};\r\n\r\ntype AddCatScreenNavigationProp = StackNavigationProp<\r\n  RootStackParamList,\r\n  \"AddCat\"\r\n>;\r\n\r\ntype CitySectorDetailScreen = StackNavigationProp<RootStackParamList, \"CitySectorDetails\">;\r\n\r\ntype EditCanalScreen = StackNavigationProp<\r\n  RootStackParamList,\r\n  \"EditCanal\"\r\n>;\r\n\r\nconst CanalDetails: React.FC = () => {\r\n  const route = useRoute();\r\n  const dispatch = useAppDispatch();\r\n  const navigation = useNavigation<AddCatScreenNavigationProp>();\r\n  const navigationCitySector = useNavigation<CitySectorDetailScreen>();\r\n  const navigationEdit = useNavigation<EditCanalScreen>();\r\n  const [copiedText, setCopiedText] = useState(\"\");\r\n\r\n  const { canalId } = route.params as RouteParams;\r\n\r\n  const { isAuthenticated, uid } = useSelector(\r\n    (state: RootState) => state.auth\r\n  );\r\n  const { data: canals, status: canalsStatus } = useSelector(\r\n    (state: RootState) => state.canals\r\n  );\r\n  const { data: citiesSector, status: citiesSectorStatus } = useSelector(\r\n    (state: RootState) => state.citiesSector\r\n  );\r\n  const { data: animals, status: animalsStatus } = useSelector(\r\n    (state: RootState) => state.animals\r\n  );\r\n  const { data: users, status: usersStatus } = useSelector(\r\n    (state: RootState) => state.canalUsers\r\n  );\r\n  // const { data: sectors, status: sectorsStatus } = useSelector(\r\n  //   (state: RootState) => state.sectors\r\n  // );\r\n\r\n  const canal = canals.find((asso) => asso.id === canalId);\r\n\r\n  const [editableFields, setEditableFields] = useState<string[]>([]);\r\n  const [userIsAdmin, setUserRole] = useState<boolean>(false);\r\n  const [isOpenBlock1, setIsOpenBlock1] = useState<boolean>(false);\r\n  const [isOpenBlock2, setIsOpenBlock2] = useState<boolean>(false);\r\n  const [isOpenBlock3, setIsOpenBlock3] = useState<boolean>(false);\r\n  const [isOpenBlock4, setIsOpenBlock4] = useState<boolean>(false);\r\n  const [isCopied, setIsCopied] = useState<boolean>(false);\r\n  const [sectorsList, setSectors] = useState<Sector[]>([]);\r\n  const [fontsLoaded, setFontsLoaded] = useState(false);\r\n  const archiveType = \"canal\";\r\n\r\n  const loadFonts = async () => {\r\n    await Font.loadAsync({\r\n      \"WixMadeforDisplay-Regular\": require(\"../assets/fonts/WixMadeforDisplay-Regular.ttf\"),\r\n      \"WixMadeforDisplay-Bold\": require(\"../assets/fonts/WixMadeforDisplay-Bold.otf\"), // charge √©galement la variante en gras\r\n    });\r\n    setFontsLoaded(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadFonts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Initialiser userRoles avec les r√¥les actuels des utilisateurs\r\n    users.forEach((user) => {\r\n      if (user.id === uid) {\r\n        setUserRole(user.isAdmin);\r\n      }\r\n    });\r\n  }, [users]);\r\n\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const wait = (timeout) => {\r\n    return new Promise((resolve) => setTimeout(resolve, timeout));\r\n  };\r\n  const onRefresh = React.useCallback(() => {\r\n    setRefreshing(true);\r\n    // Simuler une requ√™te de r√©seau\r\n    wait(2000).then(() => {\r\n      setRefreshing(false), dispatch(fetchAnimalsByCanal(canalId));\r\n    });\r\n  }, []);\r\n\r\n  const numSterilizedCats = animals.filter(\r\n    (animal) => animal.isSterilise\r\n  ).length;\r\n  const numNotIdentifiedCats = animals.filter(\r\n    (animal) => !animal.hasIdNumber\r\n  ).length;\r\n  const numIsBelongedCats = animals.filter(\r\n    (animal) => !animal.isBelonged\r\n  ).length;\r\n  // const archiveType = linkedCitySectorId;\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      dispatch(fetchCities(canalId));\r\n      dispatch(fetchAnimalsByCanal(canalId));\r\n      dispatch(fetchCanalUsers(canalId));\r\n    }\r\n  }, [canalId, isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (isAuthenticated) {\r\n        // console.log(canal)\r\n        const sectores = await fetchAllSectors(citiesSector, dispatch);\r\n        setSectors(sectores);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    console.log(canalId);\r\n  }, [canalId, citiesSector, isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    users.forEach((user) => {\r\n      if (user.id === uid) {\r\n        setUserRole(user.isAdmin);\r\n      }\r\n    });\r\n  }, [users]);\r\n\r\n  // if (sectorsStatus === 'loading' || animalsStatus === 'loading' || canalsStatus === 'loading' || usersStatus === 'loading' || citiesSectorStatus === 'loading') {\r\n  //     return <LoadingPage />;\r\n  // }\r\n\r\n  const copyToClipboard = async (value) => {\r\n    await Clipboard.setStringAsync(value);\r\n    setIsCopied(true);\r\n    setTimeout(() => setIsCopied(false), 2000);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <ScrollView\r\n        style={styles.container}\r\n        refreshControl={\r\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\r\n        }\r\n      >\r\n        <View style={styles.header}>\r\n          <View style={styles.header1st}>\r\n            <Image source={{ uri: canal?.image }} style={styles.image} />\r\n            <Text style={styles.title}>{canal?.name}</Text>\r\n            <View style={styles.settingsBtn}>\r\n              {userIsAdmin && (\r\n                <TouchableOpacity\r\n                  onPress={() =>\r\n                    navigationEdit.navigate(\"EditCanal\", {\r\n                      canalId: canal?.id,\r\n                    })\r\n                  }\r\n                  style={styles.sectionBtns_btnSettings}\r\n                >\r\n                  <Icon name={\"settings-outline\"} size={24} color=\"#fff\" />\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </View>\r\n          <View style={styles.sectionShare}>\r\n            <Text style={styles.sectionShare_title}>Partager le canal : </Text>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                copyToClipboard(canal.id);\r\n              }}\r\n              style={styles.sectionShare_button}\r\n            >\r\n              <Text style={styles.sectionShare_buttonText} selectable={true}>\r\n                {isCopied ? \"Copi√© !\" : canal?.id}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          <View style={styles.addCat}>\r\n            <View style={styles.iconAddCat}></View>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.containerSection}>\r\n          <TouchableOpacity\r\n            onPress={() => setIsOpenBlock1(!isOpenBlock1)}\r\n            style={styles.sectionHeader}\r\n          >\r\n            <Text style={styles.sectionTitle}>Informations g√©n√©rales</Text>\r\n            <Icon\r\n              name={isOpenBlock1 ? \"chevron-down\" : \"chevron-forward\"}\r\n              size={24}\r\n              color=\"#000\"\r\n            />\r\n          </TouchableOpacity>\r\n          {isOpenBlock1 && (\r\n            <View style={styles.section}>\r\n              <Text>{canal?.name}</Text>\r\n              <Text>{canal?.email}</Text>\r\n              <Text>{canal?.citySector}</Text>\r\n              <Text>{canal?.postalCode}</Text>\r\n            </View>\r\n          )}\r\n\r\n          <TouchableOpacity\r\n            onPress={() => setIsOpenBlock2(!isOpenBlock2)}\r\n            style={styles.sectionHeader}\r\n          >\r\n            <Text style={styles.sectionTitle}>Membres : ({users.length})</Text>\r\n            <Icon\r\n              name={isOpenBlock2 ? \"chevron-down\" : \"chevron-forward\"}\r\n              size={24}\r\n              color=\"#000\"\r\n            />\r\n          </TouchableOpacity>\r\n          {isOpenBlock2 && (\r\n            <View style={styles.section}>\r\n              {users.map((user) => (\r\n                <View key={user.id}>\r\n                  <Text>{user.name}</Text>\r\n                  <Text>{user.email}</Text>\r\n                </View>\r\n              ))}\r\n            </View>\r\n          )}\r\n\r\n          <TouchableOpacity\r\n            onPress={() => setIsOpenBlock3(!isOpenBlock3)}\r\n            style={styles.sectionHeader}\r\n          >\r\n            <Text style={styles.sectionTitle}>\r\n              Villes Couvertes : ({citiesSector.length})\r\n            </Text>\r\n            <Icon\r\n              name={isOpenBlock3 ? \"chevron-down\" : \"chevron-forward\"}\r\n              size={24}\r\n              color=\"#000\"\r\n            />\r\n          </TouchableOpacity>\r\n          {isOpenBlock3 && (\r\n            <View style={styles.sectionCitySector}>\r\n              {citiesSector.map((citySector) => (\r\n                <View style={styles.citySectorList} key={citySector.id}>\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      navigationCitySector.navigate(\"CitySectorDetails\", {\r\n                        canalId: canalId,\r\n                        citySectorId: citySector?.id,\r\n                      })\r\n                    }\r\n                    style={styles.sectionBtns_btnCitySector}\r\n                  >\r\n                    <Text style={styles.sectionTitleCitySector}>{citySector?.name}</Text>\r\n                    <Icon name={\"chevron-forward\"} size={24} color=\"#FFF\" />\r\n                  </TouchableOpacity>\r\n                </View>\r\n              ))}\r\n            </View>\r\n          )}\r\n        </View>\r\n\r\n        {/* <SafeAreaView style={{flex: 1}}> */}\r\n        {/* <View style={styles.line} /> */}\r\n\r\n        <AnimalFilters\r\n          animals={animals}\r\n          sectorized={sectorsList}\r\n          archiveType={archiveType}\r\n        />\r\n        {/* </SafeAreaView> */}\r\n        <Text>Pull down to see RefreshControl indicator</Text>\r\n      </ScrollView>\r\n      <View style={styles.footer}>\r\n        <AddCitySectorModal\r\n          style={styles.sectionBtns_btn}\r\n          canalId={canal?.id}\r\n        />\r\n        <TouchableOpacity\r\n          onPress={() =>\r\n            navigation.navigate(\"AddCat\", { canalId: canal?.id })\r\n          }\r\n          style={styles.sectionBtns_btn}\r\n        >\r\n          <View style={styles.buttonGroupIcons}>\r\n            <Image\r\n              source={require(\"../assets/icon-paw.png\")}\r\n              style={styles.buttonIcon}\r\n            />\r\n            {/* <Image\r\n              source={require(\"../assets/icons/icon-add.png\")}\r\n              style={styles.buttonIcon}\r\n            /> */}\r\n            <Text style={{ color: \"white\" }}>+</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n        <AddSectorModal\r\n          style={styles.sectionBtns_btn}\r\n          canalId={canal?.id}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 0,\r\n    height: \"100%\",\r\n  },\r\n  header: {\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"#2F4F4F\",\r\n    padding: 30,\r\n  },\r\n  header1st: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 20,\r\n    backgroundColor: \"#2F4F4F\",\r\n    paddingTop: 20,\r\n  },\r\n  sectionShare: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#2F4F4F\",\r\n    color: \"#FFF\",\r\n\r\n    // padding: 5\r\n  },\r\n  sectionShare_title: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 10,\r\n    color: \"#FFF\",\r\n    paddingTop: 5,\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n  },\r\n  sectionShare_button: {\r\n    backgroundColor: \"#fff\",\r\n    color: \"#000\",\r\n    padding: 5,\r\n    width: \"60%\",\r\n  },\r\n  sectionShare_buttonText: {\r\n    color: \"#000\",\r\n    fontFamily: \"WixMadeforDisplay-Regular\",\r\n    marginBottom: 5,\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n  },\r\n  sectionBtns: {\r\n    flexDirection: \"row\",\r\n    // flexWrap: \"nowrap\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    rowGap: 40,\r\n    columnGap: 10,\r\n    padding: 6,\r\n    marginTop: 20,\r\n  },\r\n  sectionBtns_btn: {\r\n    flexDirection: \"row\",\r\n    columnGap: 8,\r\n    backgroundColor: \"#000\",\r\n    color: \"#FFF\",\r\n    padding: 10,\r\n    borderRadius: 2,\r\n  },\r\n  sectionBtns_btnSettings: {\r\n    flexDirection: \"row\",\r\n    columnGap: 8,\r\n    backgroundColor: \"transparent\",\r\n    color: \"#FFF\",\r\n    padding: 10,\r\n    borderRadius: 2,\r\n  },\r\n  sectionBtns_btnText: {\r\n    color: \"#FFF\",\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    fontSize: 10,\r\n  },\r\n  image: {\r\n    width: 50,\r\n    height: 50,\r\n    marginRight: 10,\r\n    borderRadius: 50,\r\n  },\r\n  title: {\r\n    color: \"#FFF\",\r\n    fontSize: 32,\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    fontWeight: \"600\",\r\n  },\r\n\r\n  containerSection: {\r\n    padding: 10,\r\n    // backgroundColor: '#C40030',\r\n    // margin: 5\r\n  },\r\n\r\n  section: {\r\n    marginBottom: 20,\r\n    padding: 25,\r\n    paddingTop: 0,\r\n    // borderWidth: 2,\r\n  },\r\n  sectionHeader: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: 25,\r\n    paddingBottom: 5,\r\n  },\r\n\r\n  sectionTitle: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 10,\r\n  },\r\n  text: {\r\n    fontSize: 14,\r\n  },\r\n  buttonGroupIcons: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  buttonIcon: {\r\n    marginRight: 5,\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  addCat: {\r\n    flexDirection: \"column\",\r\n    // justifyContent: 'center',\r\n    alignItems: \"center\",\r\n    // width: '100%'\r\n  },\r\n  iconAddCat: {\r\n    flexDirection: \"row\",\r\n    marginTop: 20,\r\n  },\r\n  sectionCitySector: {\r\n    flexDirection: \"column\",\r\n    rowGap: 5,\r\n    // alignItems: 'center',\r\n    justifyContent: \"center\",\r\n  },\r\n  citySectorList: {\r\n    maxWidth: 200,\r\n    // backgroundColor: 'blue'\r\n  },\r\n  sectionBtns_btnCitySector: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    backgroundColor: \"#000\",\r\n    color: \"#FFF\",\r\n    padding: 10,\r\n    borderRadius: 2,\r\n  },\r\n  sectionTitleCitySector: {\r\n    color: \"#FFF\",\r\n    fontSize: 14,\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    fontWeight: \"600\",\r\n  },\r\n  line: {\r\n    height: 2,\r\n    backgroundColor: \"#000\", // change this to fit your design\r\n    alignSelf: \"center\",\r\n    marginVertical: 20, // space above and below the line\r\n    width: \"80%\", // change this to fit your design\r\n  },\r\n  footer: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    height: 60, // Vous pouvez modifier cette valeur en fonction de vos besoins\r\n    backgroundColor: \"#000\", // Pour la visibilit√©\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\", // Pour espacer les boutons\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    marginTop: 10,\r\n  },\r\n  settingsBtn: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    right: 0,\r\n  },\r\n});\r\n\r\nexport default CanalDetails;\r\n\r\n// import React, { useState } from 'react';\r\n// import { Button, TextInput, View } from 'react-native';\r\n// import Modal from 'react-native-modal';\r\n\r\n// const EditableTextField = () => {\r\n//   const [isModalVisible, setModalVisible] = useState(false);\r\n//   const [textFieldValue, setTextFieldValue] = useState('foo');\r\n//   const [tempTextFieldValue, setTempTextFieldValue] = useState(textFieldValue);\r\n\r\n//   const toggleModal = () => {\r\n//     setModalVisible(!isModalVisible);\r\n//   };\r\n\r\n//   const handleSave = () => {\r\n//     setTextFieldValue(tempTextFieldValue);\r\n//     setModalVisible(false);\r\n//   };\r\n\r\n//   const handleCancel = () => {\r\n//     setTempTextFieldValue(textFieldValue);\r\n//     setModalVisible(false);\r\n//   };\r\n\r\n//   return (\r\n//     <View style={{paddingTop: 60}}>\r\n//       <TextInput value={textFieldValue} editable={false} />\r\n//       <Button title=\"Edit\" onPress={toggleModal} />\r\n\r\n//       <Modal isVisible={isModalVisible}>\r\n//         <View style={{backgroundColor: \"white\", padding: 20}}>\r\n//           <TextInput\r\n//             value={tempTextFieldValue}\r\n//             onChangeText={setTempTextFieldValue}\r\n//           />\r\n//           <Button title=\"Save\" onPress={handleSave} />\r\n//           <Button title=\"Cancel\" onPress={handleCancel} />\r\n//         </View>\r\n//       </Modal>\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// export default EditableTextField;\r\n\r\n// import React, { useState } from 'react';\r\n// import { Button, Image, View } from 'react-native';\r\n// import Modal from 'react-native-modal';\r\n// import * as ImagePicker from 'expo-image-picker';\r\n\r\n// const EditableImage = () => {\r\n//   const [isModalVisible, setModalVisible] = useState(false);\r\n//   const [imageUri, setImageUri] = useState(null);\r\n\r\n//   const toggleModal = () => {\r\n//     setModalVisible(!isModalVisible);\r\n//   };\r\n\r\n//   const handleSave = uri => {\r\n//     setImageUri(uri);\r\n//     setModalVisible(false);\r\n//   };\r\n\r\n//   const handleCancel = () => {\r\n//     setModalVisible(false);\r\n//   };\r\n\r\n//   const openImagePickerAsync = async () => {\r\n//     let permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n\r\n//     if (permissionResult.granted === false) {\r\n//       alert('Permission to access camera roll is required!');\r\n//       return;\r\n//     }\r\n\r\n//     let pickerResult = await ImagePicker.launchImageLibraryAsync();\r\n\r\n//     if (pickerResult.canceled === true) {\r\n//       return;\r\n//     }\r\n\r\n//     if (pickerResult.assets && pickerResult.assets[0].uri) {\r\n//       handleSave(pickerResult.assets[0].uri);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <View style={{paddingTop: 70}}>\r\n//       {imageUri && <Image source={{ uri: imageUri }} style={{ width: 200, height: 200 }} />}\r\n//       <Button title=\"Edit Image\" onPress={toggleModal} />\r\n\r\n//       <Modal isVisible={isModalVisible}>\r\n//         <View style={{backgroundColor: \"white\", padding: 20}}>\r\n//           <Button title=\"Select Image\" onPress={openImagePickerAsync} />\r\n//           <Button title=\"Cancel\" onPress={handleCancel} />\r\n//         </View>\r\n//       </Modal>\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// export default EditableImage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}