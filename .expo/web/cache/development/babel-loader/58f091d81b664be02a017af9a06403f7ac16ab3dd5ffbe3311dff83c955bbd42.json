{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SelectModal = function SelectModal(_ref) {\n  var _options$;\n  var visible = _ref.visible,\n    onClose = _ref.onClose,\n    onConfirm = _ref.onConfirm,\n    options = _ref.options;\n  var _useState = useState(((_options$ = options[0]) == null ? void 0 : _options$.value) || \"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  return _jsx(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: visible,\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.centeredView,\n      children: _jsxs(View, {\n        style: styles.modalView,\n        children: [_jsx(Text, {\n          style: styles.modalText,\n          children: \"Veuillez choisir une option\"\n        }), _jsx(Picker, {\n          selectedValue: value,\n          onValueChange: function onValueChange(itemValue, itemIndex) {\n            return setValue(itemValue);\n          },\n          style: {\n            height: 50,\n            width: 150\n          },\n          children: options.map(function (option, index) {\n            return _jsx(Picker.Item, {\n              label: option.label,\n              value: option.value\n            }, index);\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return onConfirm(value);\n          },\n          style: styles.buttonsPicker,\n          children: _jsx(Text, {\n            style: styles.buttonTextYes,\n            children: \"OUI\"\n          })\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0,0,0,0.5)\"\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 3,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\",\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontSize: 20\n  },\n  modalInfo: {\n    marginBottom: 15,\n    textAlign: \"center\",\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontSize: 20\n  },\n  logo: {\n    width: 200,\n    height: 200,\n    marginRight: 10\n  },\n  buttonsPicker: {\n    backgroundColor: \"transparent\",\n    padding: 15,\n    borderRadius: 3\n  },\n  buttonText: {\n    padding: 2,\n    color: \"white\",\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontSize: 15\n  },\n  buttonTextYes: {\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    color: \"white\",\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontSize: 15,\n    backgroundColor: 'red'\n  },\n  buttonTextNo: {\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    color: \"white\",\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontSize: 15,\n    backgroundColor: 'green'\n  },\n  btnChoice: {\n    flexDirection: 'row',\n    columnGap: 30\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 20,\n    padding: 10\n  }\n});\nexport default SelectModal;","map":{"version":3,"names":["React","useState","Modal","View","Text","TouchableOpacity","StyleSheet","Picker","jsx","_jsx","jsxs","_jsxs","SelectModal","_ref","_options$","visible","onClose","onConfirm","options","_useState","value","_useState2","_slicedToArray","setValue","animationType","transparent","onRequestClose","children","style","styles","centeredView","modalView","modalText","selectedValue","onValueChange","itemValue","itemIndex","height","width","map","option","index","Item","label","onPress","buttonsPicker","buttonTextYes","create","flex","justifyContent","alignItems","backgroundColor","margin","borderRadius","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","marginBottom","textAlign","fontFamily","fontSize","modalInfo","logo","marginRight","buttonText","color","paddingVertical","paddingHorizontal","buttonTextNo","btnChoice","flexDirection","columnGap","input","borderColor","borderWidth"],"sources":["C:/Users/Benoitm/Documents/Coding/Kappze/MyKappze/src/components/general/EditableSelect.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Modal, View, Text, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { Picker } from \"@react-native-picker/picker\";\r\n\r\nconst SelectModal = ({ visible, onClose, onConfirm, options }) => {\r\n  const [value, setValue] = useState(options[0]?.value || \"\");\r\n\r\n  return (\r\n    <Modal\r\n      animationType=\"slide\"\r\n      transparent={true}\r\n      visible={visible}\r\n      onRequestClose={onClose}\r\n    >\r\n      <View style={styles.centeredView}>\r\n        <View style={styles.modalView}>\r\n          <Text style={styles.modalText}>Veuillez choisir une option</Text>\r\n          \r\n          <Picker\r\n            selectedValue={value}\r\n            onValueChange={(itemValue, itemIndex) => setValue(itemValue)}\r\n            style={{ height: 50, width: 150 }}\r\n          >\r\n            {options.map((option, index) => (\r\n              <Picker.Item key={index} label={option.label} value={option.value} />\r\n            ))}\r\n          </Picker>\r\n          \r\n          <TouchableOpacity\r\n            onPress={() => onConfirm(value)}\r\n            style={styles.buttonsPicker}\r\n          >\r\n            <Text style={styles.buttonTextYes}>OUI</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n// Remplacer par vos propres styles\r\nconst styles = StyleSheet.create({\r\n    centeredView: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"rgba(0,0,0,0.5)\", // demi-transparent\r\n      },\r\n      modalView: {\r\n        margin: 20,\r\n        backgroundColor: \"white\",\r\n        borderRadius: 3,\r\n        padding: 35,\r\n        alignItems: \"center\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        // elevation: 5,\r\n      },\r\n      modalText: {\r\n        marginBottom: 15,\r\n        textAlign: \"center\",\r\n        fontFamily: \"WixMadeforDisplay-Bold\",\r\n        fontSize: 20\r\n      },\r\n      modalInfo: {\r\n        marginBottom: 15,\r\n        textAlign: \"center\",\r\n        fontFamily: \"WixMadeforDisplay-Bold\",\r\n        fontSize: 20\r\n      },\r\n      logo: {\r\n        width: 200,\r\n        height: 200,\r\n        marginRight: 10,\r\n      },\r\n      buttonsPicker: {\r\n        backgroundColor: \"transparent\",\r\n        padding: 15,\r\n        borderRadius: 3,\r\n      },\r\n      buttonText: {\r\n        padding: 2,\r\n        color: \"white\",\r\n        fontFamily: \"WixMadeforDisplay-Bold\",\r\n        fontSize: 15\r\n      },\r\n      buttonTextYes: {\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 20,\r\n        color: \"white\",\r\n        fontFamily: \"WixMadeforDisplay-Bold\",\r\n        fontSize: 15,\r\n        backgroundColor: 'red'\r\n      },\r\n      buttonTextNo: {\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 20,\r\n        color: \"white\",\r\n        fontFamily: \"WixMadeforDisplay-Bold\",\r\n        fontSize: 15,\r\n        backgroundColor: 'green'\r\n      },\r\n      btnChoice: {\r\n        flexDirection: 'row',\r\n        columnGap: 30\r\n      },\r\n    input: {\r\n        height: 40,\r\n        borderColor: 'gray',\r\n        borderWidth: 1,\r\n        marginBottom: 20,\r\n        padding: 10\r\n    }\r\n});\r\n\r\nexport default SelectModal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}