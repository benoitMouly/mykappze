{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useSelector } from \"react-redux\";\nimport { useAppDispatch } from \"../store/store\";\nimport { fetchCanalUsers, removeUserFromCanal } from \"../features/canals/canalUsersSlice\";\nimport { useRoute } from \"@react-navigation/native\";\nimport * as Font from \"expo-font\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport EditableImage from \"../components/general/EditableImage\";\nimport TextInputModal from \"../components/general/TextUpdateModal\";\nimport { changeUserRole, updateCanal, updateCanalImage } from \"../features/canals/canalSlice\";\nimport SelectModal from \"../components/general/EditableSelect\";\nimport ConfirmationModal from \"../components/general/ConfirmationModal\";\nimport CustomAlert from \"../components/general/CustomAlert\";\nimport { HeaderEditAnimal } from \"../components/general/headerEditAnimal\";\nimport * as Clipboard from 'expo-clipboard';\nimport { createAndSendNotification } from \"../features/user/userSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar EditCanalDetails = function EditCanalDetails() {\n  var route = useRoute();\n  var dispatch = useAppDispatch();\n  var navigation = useNavigation();\n  var navigationCitySector = useNavigation();\n  var _ref = route.params,\n    canalId = _ref.canalId;\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    isAuthenticated = _useSelector.isAuthenticated,\n    uid = _useSelector.uid;\n  var _useSelector2 = useSelector(function (state) {\n      return state.canals;\n    }),\n    canals = _useSelector2.data,\n    canalsStatus = _useSelector2.status;\n  var _useSelector3 = useSelector(function (state) {\n      return state.citiesSector;\n    }),\n    citiesSector = _useSelector3.data,\n    citiesSectorStatus = _useSelector3.status;\n  var _useSelector4 = useSelector(function (state) {\n      return state.animals;\n    }),\n    animals = _useSelector4.data,\n    animalsStatus = _useSelector4.status;\n  var _useSelector5 = useSelector(function (state) {\n      return state.canalUsers;\n    }),\n    users = _useSelector5.data,\n    usersStatus = _useSelector5.status;\n  var canal = canals.find(function (asso) {\n    return asso.id === canalId;\n  });\n  console.log(canalsStatus);\n  useEffect(function () {\n    if (canal) {\n      setCurrentCanalName(canal.name);\n      setCurrentCanalEmail(canal.email);\n      setCurrentCanalCitySector(canal.citySector);\n      setCurrentCanalPostalCode(canal.postalCode);\n    }\n  }, [canals]);\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    editableFields = _useState2[0],\n    setEditableFields = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userIsAdmin = _useState4[0],\n    setUserRole = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    sectorsList = _useState6[0],\n    setSectors = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    fontsLoaded = _useState8[0],\n    setFontsLoaded = _useState8[1];\n  var _useState9 = useState(canal == null ? void 0 : canal.image),\n    _useState10 = _slicedToArray(_useState9, 2),\n    imageUri = _useState10[0],\n    setImageUri = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isEditNameCanalVisible = _useState12[0],\n    setEditVisible = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isEditEmailCanalVisible = _useState14[0],\n    setEditVisibleEmail = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isEditCitySectorCanalVisible = _useState16[0],\n    setEditVisibleCitySector = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isEditPostalCodeCanalVisible = _useState18[0],\n    setEditVisiblePostalCode = _useState18[1];\n  var _useState19 = useState(\"\"),\n    _useState20 = _slicedToArray(_useState19, 2),\n    editedCanalName = _useState20[0],\n    setEditedCanalName = _useState20[1];\n  var _useState21 = useState(\"\"),\n    _useState22 = _slicedToArray(_useState21, 2),\n    editedCanalEmail = _useState22[0],\n    setEditedCanalEmail = _useState22[1];\n  var _useState23 = useState(\"\"),\n    _useState24 = _slicedToArray(_useState23, 2),\n    editedCanalCitySector = _useState24[0],\n    setEditedCanalCitySector = _useState24[1];\n  var _useState25 = useState(\"\"),\n    _useState26 = _slicedToArray(_useState25, 2),\n    editedCanalPostalCode = _useState26[0],\n    setEditedCanalPostalCode = _useState26[1];\n  var _useState27 = useState(false),\n    _useState28 = _slicedToArray(_useState27, 2),\n    isModalVisible = _useState28[0],\n    setModalVisible = _useState28[1];\n  var _useState29 = useState(null),\n    _useState30 = _slicedToArray(_useState29, 2),\n    selectedUserId = _useState30[0],\n    setSelectedUserId = _useState30[1];\n  var _useState31 = useState(null),\n    _useState32 = _slicedToArray(_useState31, 2),\n    selectedValue = _useState32[0],\n    setSelectedValue = _useState32[1];\n  var _useState33 = useState([]),\n    _useState34 = _slicedToArray(_useState33, 2),\n    updatedUsers = _useState34[0],\n    setUpdatedUsers = _useState34[1];\n  var _useState35 = useState(false),\n    _useState36 = _slicedToArray(_useState35, 2),\n    isConfirmationVisible = _useState36[0],\n    setConfirmationVisible = _useState36[1];\n  var _useState37 = useState(\"\"),\n    _useState38 = _slicedToArray(_useState37, 2),\n    alertMessage = _useState38[0],\n    setAlertMessage = _useState38[1];\n  var _useState39 = useState(false),\n    _useState40 = _slicedToArray(_useState39, 2),\n    isAlertVisible = _useState40[0],\n    setAlertVisible = _useState40[1];\n  var _useState41 = useState(false),\n    _useState42 = _slicedToArray(_useState41, 2),\n    selectRole = _useState42[0],\n    setSelectRole = _useState42[1];\n  var _useState43 = useState(false),\n    _useState44 = _slicedToArray(_useState43, 2),\n    selectDeassociate = _useState44[0],\n    setSelectDeassociate = _useState44[1];\n  var _useState45 = useState(false),\n    _useState46 = _slicedToArray(_useState45, 2),\n    isCopied = _useState46[0],\n    setIsCopied = _useState46[1];\n  var _useState47 = useState(canal.name),\n    _useState48 = _slicedToArray(_useState47, 2),\n    currentCanalName = _useState48[0],\n    setCurrentCanalName = _useState48[1];\n  var _useState49 = useState(canal.email),\n    _useState50 = _slicedToArray(_useState49, 2),\n    currentCanalEmail = _useState50[0],\n    setCurrentCanalEmail = _useState50[1];\n  var _useState51 = useState(canal.citySector),\n    _useState52 = _slicedToArray(_useState51, 2),\n    currentCanalCitySector = _useState52[0],\n    setCurrentCanalCitySector = _useState52[1];\n  var _useState53 = useState(canal.citySector),\n    _useState54 = _slicedToArray(_useState53, 2),\n    currentCanalPostalCode = _useState54[0],\n    setCurrentCanalPostalCode = _useState54[1];\n  var archiveType = \"canal\";\n  var options = [{\n    label: \"Admin\",\n    value: true\n  }, {\n    label: \"Visiteur\",\n    value: false\n  }];\n  var _useState55 = useState(false),\n    _useState56 = _slicedToArray(_useState55, 2),\n    isModified = _useState56[0],\n    setIsModified = _useState56[1];\n  React.useEffect(function () {\n    var unsubscribe = navigation.addListener(\"beforeRemove\", function (e) {\n      if (!isModified) {\n        return;\n      }\n      e.preventDefault();\n      Alert.alert(\"Annuler les changements ?\", \"Vous avez des données non sauvegardées. Etes vous certain de vouloir quitter ?\", [{\n        text: \"Rester\",\n        style: \"cancel\",\n        onPress: function onPress() {}\n      }, {\n        text: \"Confirmer\",\n        style: \"destructive\",\n        onPress: function onPress() {\n          return navigation.dispatch(e.data.action);\n        }\n      }]);\n    });\n    return unsubscribe;\n  }, [navigation, isModified]);\n  var handleConfirm = function handleConfirm(value) {\n    setSelectedValue(value);\n    dispatch(changeUserRole({\n      userId: selectedUserId,\n      canalId: canal.id,\n      newIsAdmin: value\n    }));\n    var updatedUsers = users.map(function (user) {\n      if (user.id === selectedUserId) {\n        return _objectSpread(_objectSpread({}, user), {}, {\n          isAdmin: value === true\n        });\n      }\n      return user;\n    });\n    setUpdatedUsers(updatedUsers);\n    setSelectedUserId(null);\n    setSelectRole(false);\n  };\n  var handleClean = function handleClean() {\n    setSelectedUserId(null);\n    setSelectRole(false);\n    setSelectDeassociate(false);\n  };\n  var openDeassociateModal = function openDeassociateModal(userId) {\n    setSelectedUserId(userId);\n    setSelectRole(true);\n  };\n  var openSuppModal = function openSuppModal(userId) {\n    setSelectedUserId(userId);\n    setSelectDeassociate(true);\n  };\n  var copyToClipboard = function () {\n    var _ref2 = _asyncToGenerator(function* (value) {\n      yield Clipboard.setStringAsync(value);\n      setIsCopied(true);\n      setTimeout(function () {\n        return setIsCopied(false);\n      }, 2000);\n    });\n    return function copyToClipboard(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleConfirmSuppression = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      yield dispatch(removeUserFromCanal({\n        userId: selectedUserId,\n        canalId: canal.id\n      }));\n      setConfirmationVisible(false);\n      setAlertMessage(\"L'utilisateur a été désassocié avec succès\");\n      setAlertVisible(true);\n      setSelectedUserId(null);\n    });\n    return function handleConfirmSuppression() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var loadFonts = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      yield Font.loadAsync({\n        \"WixMadeforDisplay-Regular\": require(\"../assets/fonts/WixMadeforDisplay-Regular.ttf\"),\n        \"WixMadeforDisplay-Bold\": require(\"../assets/fonts/WixMadeforDisplay-Bold.otf\")\n      });\n      setFontsLoaded(true);\n    });\n    return function loadFonts() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    loadFonts();\n  }, []);\n  var numSterilizedCats = animals.filter(function (animal) {\n    return animal.isSterilise;\n  }).length;\n  var numNotIdentifiedCats = animals.filter(function (animal) {\n    return !animal.hasIdNumber;\n  }).length;\n  var numIsBelongedCats = animals.filter(function (animal) {\n    return !animal.isBelonged;\n  }).length;\n  useEffect(function () {\n    if (isAuthenticated) {\n      dispatch(fetchCanalUsers(canalId));\n    }\n  }, [canalId, isAuthenticated]);\n  useEffect(function () {\n    users.forEach(function (user) {\n      if (user.id === uid) {\n        setUserRole(user.isAdmin);\n      }\n    });\n  }, [users]);\n  useEffect(function () {\n    users.forEach(function (user) {\n      console.log(user);\n    });\n  }, [users]);\n  useEffect(function () {}, [editedCanalEmail]);\n  useEffect(function () {\n    setUpdatedUsers(users);\n  }, [users]);\n  var handleUpdateName = function () {\n    var _ref5 = _asyncToGenerator(function* (newName) {\n      var updatedData = {\n        name: newName\n      };\n      var message = 'Notre nom canal a changé ! Il est désormais' + newName;\n      var userIds = ['0d0E2ou8OLfQhkDdgHEF8VDp4JK2', '9gCOJvy598gS8PAX3pyql0Wm9hD2'];\n      setCurrentCanalName(newName);\n      yield dispatch(updateCanal({\n        canalId: canalId,\n        canalData: updatedData\n      }));\n      yield dispatch(createAndSendNotification({\n        userIds: userIds,\n        message: message\n      }));\n      setEditVisible(false);\n    });\n    return function handleUpdateName(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var handleUpdateEmail = function handleUpdateEmail(newEmail) {\n    var updatedData = {\n      email: newEmail,\n      name: canal.name\n    };\n    setCurrentCanalEmail(newEmail);\n    dispatch(updateCanal({\n      canalId: canalId,\n      canalData: updatedData\n    }));\n    setEditVisibleEmail(false);\n  };\n  var handleUpdateCitySector = function handleUpdateCitySector(newCitySector) {\n    var updatedData = {\n      citySector: newCitySector,\n      name: canal.name\n    };\n    setCurrentCanalCitySector(newCitySector);\n    dispatch(updateCanal({\n      canalId: canalId,\n      canalData: updatedData\n    }));\n    setEditVisibleCitySector(false);\n  };\n  var handleUpdatePostalCode = function handleUpdatePostalCode(newPostalCode) {\n    var updatedData = {\n      postalCode: newPostalCode,\n      name: canal.name\n    };\n    setCurrentCanalPostalCode(newPostalCode);\n    dispatch(updateCanal({\n      canalId: canalId,\n      canalData: updatedData\n    }));\n    setEditVisiblePostalCode(false);\n  };\n  var handleSavePress = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      if (imageUri !== canal.image) {\n        dispatch(updateCanalImage({\n          canalId: canalId,\n          image: imageUri\n        }));\n      }\n      setIsModified(false);\n    });\n    return function handleSavePress() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.fold,\n    children: [_jsx(HeaderEditAnimal, {\n      navigation: navigation,\n      animalName: canal.name\n    }), _jsxs(ScrollView, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.header,\n        children: [_jsxs(View, {\n          style: styles.header1st,\n          children: [_jsx(EditableImage, {\n            imageUri: imageUri,\n            setImageUri: setImageUri,\n            isModified: setIsModified\n          }), _jsx(Text, {\n            style: styles.title,\n            children: canal == null ? void 0 : canal.name\n          })]\n        }), _jsxs(View, {\n          style: styles.sectionShare,\n          children: [_jsx(Text, {\n            style: styles.sectionShare_title,\n            children: \"Partager le canal : \"\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              copyToClipboard(canal.id);\n            },\n            style: styles.sectionShare_button,\n            children: _jsx(Text, {\n              style: styles.sectionShare_buttonText,\n              selectable: true,\n              children: isCopied ? 'Copié !' : canal == null ? void 0 : canal.id\n            })\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.containerSection,\n        children: [_jsx(Text, {\n          style: styles.editUnicalSectionTitle,\n          children: \"G\\xE9n\\xE9ral\"\n        }), _jsxs(View, {\n          style: styles.containerUnicalSection,\n          children: [_jsxs(View, {\n            style: styles.editEltGroup,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: canal == null ? void 0 : canal.name\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setEditVisible(true);\n              },\n              style: styles.sectionHeader,\n              children: _jsx(View, {\n                style: styles.buttonIcon,\n                children: _jsx(Icon, {\n                  style: styles.buttonIconElt,\n                  name: \"pencil-outline\",\n                  size: 15,\n                  color: \"#fff\"\n                })\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.editEltGroup,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: canal.email\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setEditVisibleEmail(true);\n              },\n              style: styles.sectionHeader,\n              children: _jsx(View, {\n                style: styles.buttonIcon,\n                children: _jsx(Icon, {\n                  style: styles.buttonIconElt,\n                  name: \"pencil-outline\",\n                  size: 15,\n                  color: \"#fff\"\n                })\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.editEltGroup,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: canal == null ? void 0 : canal.citySector\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setEditVisibleCitySector(true);\n              },\n              style: styles.sectionHeader,\n              children: _jsx(View, {\n                style: styles.buttonIcon,\n                children: _jsx(Icon, {\n                  style: styles.buttonIconElt,\n                  name: \"pencil-outline\",\n                  size: 15,\n                  color: \"#fff\"\n                })\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.editEltGroup,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: canal == null ? void 0 : canal.postalCode\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setEditVisiblePostalCode(true);\n              },\n              style: styles.sectionHeader,\n              children: _jsx(View, {\n                style: styles.buttonIcon,\n                children: _jsx(Icon, {\n                  style: styles.buttonIconElt,\n                  name: \"pencil-outline\",\n                  size: 15,\n                  color: \"#fff\"\n                })\n              })\n            })]\n          }), _jsx(TextInputModal, {\n            visible: isEditNameCanalVisible,\n            onClose: function onClose() {\n              return setEditVisible(false);\n            },\n            onConfirm: handleUpdateName,\n            messageType: \"Entrez le nouveau nom de l'canal\",\n            onChangeText: setEditedCanalName\n          }), _jsx(TextInputModal, {\n            visible: isEditEmailCanalVisible,\n            onClose: function onClose() {\n              return setEditVisibleEmail(false);\n            },\n            onConfirm: handleUpdateEmail,\n            messageType: \"Entrez le nouvel email\",\n            onChangeText: setEditedCanalEmail\n          }), _jsx(TextInputModal, {\n            visible: isEditCitySectorCanalVisible,\n            onClose: function onClose() {\n              return setEditVisibleCitySector(false);\n            },\n            onConfirm: handleUpdateCitySector,\n            messageType: \"Entrez le nouveau nom de la ville\",\n            onChangeText: setEditedCanalCitySector\n          }), _jsx(TextInputModal, {\n            visible: isEditPostalCodeCanalVisible,\n            onClose: function onClose() {\n              return setEditVisiblePostalCode(false);\n            },\n            onConfirm: handleUpdatePostalCode,\n            messageType: \"Entrez le nouveau postal code\",\n            onChangeText: setEditedCanalPostalCode\n          })]\n        }), _jsx(Text, {\n          style: styles.editUnicalSectionTitle,\n          children: \"Gestion des membres\"\n        }), _jsx(View, {\n          style: styles.containerSection,\n          children: _jsx(View, {\n            style: styles.section,\n            children: _jsxs(View, {\n              style: styles.members,\n              children: [updatedUsers.map(function (user) {\n                return _jsxs(View, {\n                  style: styles.member,\n                  children: [_jsxs(View, {\n                    children: [_jsxs(Text, {\n                      style: styles.text,\n                      children: [user.surname, \" \", user.name]\n                    }), _jsx(Text, {\n                      style: styles.text,\n                      children: user.email\n                    }), _jsx(Text, {\n                      style: styles.text,\n                      children: user.isAdmin ? \"Administrateur\" : \"Visiteur\"\n                    })]\n                  }), user.id !== canal.adminId ? _jsxs(View, {\n                    style: styles.btnAdmin,\n                    children: [_jsx(TouchableOpacity, {\n                      onPress: function onPress() {\n                        return openDeassociateModal(user.id);\n                      },\n                      style: styles.sectionAdmin_button,\n                      children: _jsx(View, {\n                        style: styles.buttonIcon,\n                        children: _jsx(Icon, {\n                          style: styles.buttonIconElt,\n                          name: \"pencil-outline\",\n                          size: 15,\n                          color: \"#fff\"\n                        })\n                      })\n                    }), _jsx(TouchableOpacity, {\n                      onPress: function onPress() {\n                        return openSuppModal(user.id);\n                      },\n                      style: styles.sectionAdmin_button,\n                      children: _jsx(View, {\n                        style: styles.buttonIcon,\n                        children: _jsx(Icon, {\n                          style: styles.buttonIconElt,\n                          name: \"close-outline\",\n                          size: 15,\n                          color: \"#C40030\"\n                        })\n                      })\n                    })]\n                  }) : _jsx(_Fragment, {})]\n                }, user.id);\n              }), _jsx(SelectModal, {\n                visible: selectRole,\n                onClose: handleClean,\n                onConfirm: handleConfirm,\n                options: options\n              }), _jsx(ConfirmationModal, {\n                visible: selectDeassociate,\n                onClose: handleClean,\n                onConfirm: handleConfirmSuppression,\n                messageType: \"Voulez-vous vraiment désassocier cet utilisateur de l'canal ?\"\n              }), _jsx(CustomAlert, {\n                visible: isAlertVisible,\n                onClose: function onClose() {\n                  return setAlertVisible(false);\n                },\n                message: alertMessage\n              })]\n            })\n          })\n        })]\n      })]\n    }), isModified && _jsx(View, {\n      style: styles.btnSectionSuppSave,\n      children: _jsx(TouchableOpacity, {\n        onPress: handleSavePress,\n        style: styles.btnSave,\n        children: _jsx(Text, {\n          style: styles.buttonSaveText,\n          children: \"SAUVEGARDER L'IMAGE\"\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  fold: {\n    height: \"100%\"\n  },\n  container: {\n    padding: 0,\n    height: \"100%\"\n  },\n  header: {\n    flexDirection: \"column\",\n    backgroundColor: \"#2F4F4F\",\n    padding: 30\n  },\n  header1st: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    backgroundColor: \"#2F4F4F\",\n    paddingTop: 20,\n    columnGap: 20\n  },\n  sectionShare: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#2F4F4F\",\n    color: \"#FFF\"\n  },\n  sectionShare_title: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    marginBottom: 10,\n    color: \"#FFF\",\n    paddingTop: 5,\n    fontFamily: \"WixMadeforDisplay-Bold\"\n  },\n  sectionShare_button: {\n    backgroundColor: \"#fff\",\n    color: \"#000\",\n    padding: 5\n  },\n  sectionShare_buttonText: {\n    color: \"#000\"\n  },\n  sectionBtns: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    rowGap: 40,\n    columnGap: 10,\n    padding: 6,\n    marginTop: 20\n  },\n  sectionBtns_btn: {\n    flexDirection: \"row\",\n    columnGap: 8,\n    backgroundColor: \"#000\",\n    color: \"#FFF\",\n    padding: 10,\n    borderRadius: 2\n  },\n  sectionBtns_btnText: {\n    color: \"#FFF\",\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontSize: 10\n  },\n  image: {\n    width: 50,\n    height: 50,\n    marginRight: 10,\n    borderRadius: 50\n  },\n  title: {\n    color: \"#FFF\",\n    fontSize: 32,\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontWeight: \"600\"\n  },\n  subtitle: {\n    color: \"#2F4F4F\",\n    fontSize: 22,\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontWeight: \"600\"\n  },\n  containerSection: {\n    height: \"100%\"\n  },\n  section: {\n    paddingHorizontal: 25,\n    paddingBottom: 60,\n    backgroundColor: \"#2f4f4f\",\n    marginBottom: 0\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    marginBottom: 10\n  },\n  text: {\n    fontSize: 14,\n    color: \"#fff\",\n    fontFamily: \"WixMadeforDisplay-Regular\"\n  },\n  editEltGroup: {\n    marginHorizontal: 15,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    columnGap: 20\n  },\n  buttonGroupIcons: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  buttonIcon: {\n    backgroundColor: \"black\",\n    borderRadius: 2,\n    paddingTop: 1\n  },\n  buttonIconElt: {\n    margin: 7\n  },\n  addCat: {\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  iconAddCat: {\n    flexDirection: \"row\",\n    marginTop: 20\n  },\n  sectionCitySector: {\n    flexDirection: \"column\",\n    rowGap: 5,\n    justifyContent: \"center\"\n  },\n  citySectorList: {\n    maxWidth: 200\n  },\n  sectionBtns_btnCitySector: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    backgroundColor: \"#000\",\n    color: \"#FFF\",\n    padding: 10,\n    borderRadius: 2\n  },\n  sectionTitleCitySector: {\n    color: \"#FFF\",\n    fontSize: 14,\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontWeight: \"600\"\n  },\n  line: {\n    height: 2,\n    backgroundColor: \"#000\",\n    alignSelf: \"center\",\n    marginVertical: 20,\n    width: \"80%\"\n  },\n  editUnicalSectionTitle: {\n    fontSize: 18,\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontWeight: \"600\",\n    textAlign: \"left\",\n    color: \"#2F4F4F\",\n    marginLeft: 15\n  },\n  containerUnicalSection: {\n    backgroundColor: \"#2F4F4F\",\n    padding: 15,\n    rowGap: 20\n  },\n  members: {\n    marginTop: 20,\n    rowGap: 10\n  },\n  member: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    rowGap: 10,\n    paddingBottom: 20,\n    borderBottomWidth: 2\n  },\n  btnAdmin: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  },\n  sectionAdmin_button: {\n    backgroundColor: \"transparent\",\n    padding: 5\n  },\n  btnSectionSuppSave: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    height: 60,\n    backgroundColor: \"#000\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    padding: 10,\n    marginTop: 10\n  },\n  buttonSaveText: {\n    color: \"white\",\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    textAlign: \"center\"\n  },\n  buttonSuppText: {\n    padding: 20,\n    color: \"white\",\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    textAlign: \"center\"\n  },\n  btnSave: {\n    width: \"100%\"\n  }\n});\nexport default EditCanalDetails;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","TouchableOpacity","ScrollView","Alert","useSelector","useAppDispatch","fetchCanalUsers","removeUserFromCanal","useRoute","Font","Icon","useNavigation","EditableImage","TextInputModal","changeUserRole","updateCanal","updateCanalImage","SelectModal","ConfirmationModal","CustomAlert","HeaderEditAnimal","Clipboard","createAndSendNotification","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","EditCanalDetails","route","dispatch","navigation","navigationCitySector","_ref","params","canalId","_useSelector","state","auth","isAuthenticated","uid","_useSelector2","canals","data","canalsStatus","status","_useSelector3","citiesSector","citiesSectorStatus","_useSelector4","animals","animalsStatus","_useSelector5","canalUsers","users","usersStatus","canal","find","asso","id","console","log","setCurrentCanalName","name","setCurrentCanalEmail","email","setCurrentCanalCitySector","citySector","setCurrentCanalPostalCode","postalCode","_useState","_useState2","_slicedToArray","editableFields","setEditableFields","_useState3","_useState4","userIsAdmin","setUserRole","_useState5","_useState6","sectorsList","setSectors","_useState7","_useState8","fontsLoaded","setFontsLoaded","_useState9","image","_useState10","imageUri","setImageUri","_useState11","_useState12","isEditNameCanalVisible","setEditVisible","_useState13","_useState14","isEditEmailCanalVisible","setEditVisibleEmail","_useState15","_useState16","isEditCitySectorCanalVisible","setEditVisibleCitySector","_useState17","_useState18","isEditPostalCodeCanalVisible","setEditVisiblePostalCode","_useState19","_useState20","editedCanalName","setEditedCanalName","_useState21","_useState22","editedCanalEmail","setEditedCanalEmail","_useState23","_useState24","editedCanalCitySector","setEditedCanalCitySector","_useState25","_useState26","editedCanalPostalCode","setEditedCanalPostalCode","_useState27","_useState28","isModalVisible","setModalVisible","_useState29","_useState30","selectedUserId","setSelectedUserId","_useState31","_useState32","selectedValue","setSelectedValue","_useState33","_useState34","updatedUsers","setUpdatedUsers","_useState35","_useState36","isConfirmationVisible","setConfirmationVisible","_useState37","_useState38","alertMessage","setAlertMessage","_useState39","_useState40","isAlertVisible","setAlertVisible","_useState41","_useState42","selectRole","setSelectRole","_useState43","_useState44","selectDeassociate","setSelectDeassociate","_useState45","_useState46","isCopied","setIsCopied","_useState47","_useState48","currentCanalName","_useState49","_useState50","currentCanalEmail","_useState51","_useState52","currentCanalCitySector","_useState53","_useState54","currentCanalPostalCode","archiveType","options","label","value","_useState55","_useState56","isModified","setIsModified","unsubscribe","addListener","e","preventDefault","alert","text","style","onPress","action","handleConfirm","userId","newIsAdmin","map","user","_objectSpread","isAdmin","handleClean","openDeassociateModal","openSuppModal","copyToClipboard","_ref2","_asyncToGenerator","setStringAsync","setTimeout","_x","apply","arguments","handleConfirmSuppression","_ref3","loadFonts","_ref4","loadAsync","require","numSterilizedCats","filter","animal","isSterilise","length","numNotIdentifiedCats","hasIdNumber","numIsBelongedCats","isBelonged","forEach","handleUpdateName","_ref5","newName","updatedData","message","userIds","canalData","_x2","handleUpdateEmail","newEmail","handleUpdateCitySector","newCitySector","handleUpdatePostalCode","newPostalCode","handleSavePress","_ref6","styles","fold","children","animalName","container","header","header1st","title","sectionShare","sectionShare_title","sectionShare_button","sectionShare_buttonText","selectable","containerSection","editUnicalSectionTitle","containerUnicalSection","editEltGroup","sectionHeader","buttonIcon","buttonIconElt","size","color","visible","onClose","onConfirm","messageType","onChangeText","section","members","member","surname","adminId","btnAdmin","sectionAdmin_button","btnSectionSuppSave","btnSave","buttonSaveText","create","height","padding","flexDirection","backgroundColor","alignItems","marginBottom","paddingTop","columnGap","justifyContent","fontSize","fontWeight","fontFamily","sectionBtns","rowGap","marginTop","sectionBtns_btn","borderRadius","sectionBtns_btnText","width","marginRight","subtitle","paddingHorizontal","paddingBottom","sectionTitle","marginHorizontal","buttonGroupIcons","display","margin","addCat","iconAddCat","sectionCitySector","citySectorList","maxWidth","sectionBtns_btnCitySector","sectionTitleCitySector","line","alignSelf","marginVertical","textAlign","marginLeft","borderBottomWidth","position","bottom","left","right","buttonSuppText"],"sources":["C:/Users/Benoitm/Documents/Coding/Kappze/MyKappze/src/pages/EditCanalDetails.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Image,\r\n  ScrollView,\r\n  SafeAreaView,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useAppDispatch } from \"../store/store\";\r\nimport { fetchCities, fetchAllSectors } from \"../features/citiesSector/citySectorSlice\";\r\nimport { fetchAnimalsByCanal } from \"../features/animals/animalSlice\";\r\nimport { fetchSectorById } from \"../features/sectors/sectorSlice\";\r\nimport {\r\n  fetchCanalUsers,\r\n  removeUserFromCanal,\r\n} from \"../features/canals/canalUsersSlice\";\r\nimport { useRoute } from \"@react-navigation/native\";\r\nimport * as Font from \"expo-font\";\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\nimport AnimalList from \"../components/animals/animalList\";\r\nimport AnimalFilters from \"../components/animals/animalFilter\";\r\nimport { fetchSectors } from \"../features/sectors/sectorSlice\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport EditableImage from \"../components/general/EditableImage\";\r\nimport TextInputModal from \"../components/general/TextUpdateModal\";\r\nimport {\r\n  changeUserRole,\r\n  updateCanal,\r\n  updateCanalImage,\r\n} from \"../features/canals/canalSlice\";\r\nimport SelectModal from \"../components/general/EditableSelect\";\r\nimport ConfirmationModal from \"../components/general/ConfirmationModal\";\r\nimport CustomAlert from \"../components/general/CustomAlert\";\r\nimport { HeaderEditAnimal } from \"../components/general/headerEditAnimal\";\r\nimport * as Clipboard from 'expo-clipboard';\r\nimport { createAndSendNotification } from \"../features/user/userSlice\";\r\n// définir les interfaces\r\ninterface Canal {\r\n  id: string;\r\n  data: any[]; // Changez `any` en type approprié\r\n  // Autres propriétés...\r\n}\r\n\r\ninterface Animal {\r\n  isSterilise: boolean;\r\n  hasIdNumber: boolean;\r\n  isBelonged: boolean;\r\n  // Ajoutez d'autres champs ici si nécessaire\r\n}\r\n\r\ninterface User {\r\n  id: string;\r\n  isAdmin: boolean;\r\n  // Ajoutez d'autres champs ici si nécessaire\r\n}\r\n\r\ninterface CitySector {\r\n  // Propriétés pour la ville...\r\n}\r\n\r\ninterface Sector {\r\n  // Propriétés pour le secteur...\r\n}\r\n\r\ninterface DataState<T> {\r\n  data: T[];\r\n  status: \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n  error: string | null;\r\n  // Ajoutez ici d'autres champs si nécessaire\r\n}\r\n\r\n// Utilisez cette interface dans l'interface RootState\r\ninterface RootState {\r\n  canals: DataState<Canal>;\r\n  citiesSector: DataState<CitySector>;\r\n  animals: DataState<Animal>;\r\n  canalUsers: DataState<User>;\r\n  sectors: DataState<Sector>;\r\n  auth: {\r\n    isAuthenticated: boolean;\r\n    uid: string;\r\n  };\r\n}\r\n\r\ninterface RouteParams {\r\n  id: string;\r\n  canalId: string;\r\n  citySectorId: string;\r\n}\r\n\r\ntype RootStackParamList = {\r\n  AddCat: undefined;\r\n  CitySectorDetails: undefined;\r\n};\r\n\r\ntype AddCatScreenNavigationProp = StackNavigationProp<\r\n  RootStackParamList,\r\n  \"AddCat\"\r\n>;\r\n\r\ntype CitySectorDetailScreen = StackNavigationProp<RootStackParamList, \"CitySectorDetails\">;\r\n\r\nconst EditCanalDetails: React.FC = () => {\r\n  const route = useRoute();\r\n  const dispatch = useAppDispatch();\r\n  const navigation = useNavigation<AddCatScreenNavigationProp>();\r\n  const navigationCitySector = useNavigation<CitySectorDetailScreen>();\r\n\r\n  const { canalId } = route.params as RouteParams;\r\n\r\n  const { isAuthenticated, uid } = useSelector(\r\n    (state: RootState) => state.auth\r\n  );\r\n  const { data: canals, status: canalsStatus } = useSelector(\r\n    (state: RootState) => state.canals\r\n  );\r\n  const { data: citiesSector, status: citiesSectorStatus } = useSelector(\r\n    (state: RootState) => state.citiesSector\r\n  );\r\n  const { data: animals, status: animalsStatus } = useSelector(\r\n    (state: RootState) => state.animals\r\n  );\r\n  const { data: users, status: usersStatus } = useSelector(\r\n    (state: RootState) => state.canalUsers\r\n  );\r\n\r\n  const canal = canals.find((asso) => asso.id === canalId);\r\n\r\n  console.log(canalsStatus)\r\n  useEffect(() => {\r\n    // const canal = canals.find((asso) => asso.id === canalId);\r\n    if (canal) {\r\n      setCurrentCanalName(canal.name);\r\n      setCurrentCanalEmail(canal.email);\r\n      setCurrentCanalCitySector(canal.citySector);\r\n      setCurrentCanalPostalCode(canal.postalCode);\r\n    }\r\n  }, [canals]);\r\n\r\n  const [editableFields, setEditableFields] = useState<string[]>([]);\r\n  const [userIsAdmin, setUserRole] = useState<boolean>(false);\r\n  const [sectorsList, setSectors] = useState<Sector[]>([]);\r\n  const [fontsLoaded, setFontsLoaded] = useState(false);\r\n  const [imageUri, setImageUri] = useState(canal?.image);\r\n  const [isEditNameCanalVisible, setEditVisible] = useState(false);\r\n  const [isEditEmailCanalVisible, setEditVisibleEmail] = useState(false);\r\n  const [isEditCitySectorCanalVisible, setEditVisibleCitySector] = useState(false);\r\n  const [isEditPostalCodeCanalVisible, setEditVisiblePostalCode] =\r\n    useState(false);\r\n  const [editedCanalName, setEditedCanalName] = useState(\"\");\r\n  const [editedCanalEmail, setEditedCanalEmail] = useState(\"\");\r\n  const [editedCanalCitySector, setEditedCanalCitySector] = useState(\"\");\r\n  const [editedCanalPostalCode, setEditedCanalPostalCode] =\r\n    useState(\"\");\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n  const [selectedUserId, setSelectedUserId] = useState(null);\r\n  const [selectedValue, setSelectedValue] = useState(null);\r\n  const [updatedUsers, setUpdatedUsers] = useState([]);\r\n  const [isConfirmationVisible, setConfirmationVisible] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const [isAlertVisible, setAlertVisible] = useState(false);\r\n  const [selectRole, setSelectRole] = useState(false);\r\n  const [selectDeassociate, setSelectDeassociate] = useState(false);\r\n  const [isCopied, setIsCopied] = useState<boolean>(false);\r\n\r\n  const [currentCanalName, setCurrentCanalName] = useState(\r\n    canal.name\r\n  );\r\n  const [currentCanalEmail, setCurrentCanalEmail] = useState(\r\n    canal.email\r\n  );\r\n  const [currentCanalCitySector, setCurrentCanalCitySector] = useState(\r\n    canal.citySector\r\n  );\r\n  const [currentCanalPostalCode, setCurrentCanalPostalCode] =\r\n    useState(canal.citySector);\r\n  const archiveType = \"canal\";\r\n\r\n  const options = [\r\n    { label: \"Admin\", value: true },\r\n    { label: \"Visiteur\", value: false },\r\n    // Ajoutez ici d'autres options\r\n  ];\r\n\r\n  const [isModified, setIsModified] = useState(false);\r\n\r\n  React.useEffect(() => {\r\n    const unsubscribe = navigation.addListener(\"beforeRemove\", (e) => {\r\n      // Empêche le geste de retour par défaut\r\n      if (!isModified) {\r\n        // Si aucune modification n'a été apportée, laissez l'utilisateur quitter la page.\r\n        return;\r\n      }\r\n\r\n      e.preventDefault();\r\n\r\n      // Demande confirmation avant de revenir en arrière\r\n      Alert.alert(\r\n        \"Annuler les changements ?\",\r\n        \"Vous avez des données non sauvegardées. Etes vous certain de vouloir quitter ?\",\r\n        [\r\n          { text: \"Rester\", style: \"cancel\", onPress: () => {} },\r\n          {\r\n            text: \"Confirmer\",\r\n            style: \"destructive\",\r\n            // Si l'utilisateur confirme, revenir\r\n            onPress: () => navigation.dispatch(e.data.action),\r\n          },\r\n        ]\r\n      );\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [navigation, isModified]);\r\n\r\n  const handleConfirm = (value) => {\r\n    setSelectedValue(value);\r\n\r\n    // dispatch votre action pour modifier le rôle de l'utilisateur ici\r\n    dispatch(\r\n      changeUserRole({\r\n        userId: selectedUserId, // Convertir l'ID de l'utilisateur en chaîne de caractères\r\n        canalId: canal.id,\r\n        newIsAdmin: value,\r\n      })\r\n    );\r\n\r\n    const updatedUsers = users.map((user) => {\r\n      if (user.id === selectedUserId) {\r\n        return { ...user, isAdmin: value === true };\r\n      }\r\n      return user;\r\n    });\r\n\r\n    setUpdatedUsers(updatedUsers); // Mettre à jour le state `updatedUsers` avec la liste mise à jour\r\n\r\n    // console.log(selectedUserId);\r\n    setSelectedUserId(null); // ferme la modale\r\n    setSelectRole(false);\r\n  };\r\n\r\n  const handleClean = () => {\r\n    setSelectedUserId(null);\r\n    setSelectRole(false);\r\n    setSelectDeassociate(false);\r\n  };\r\n\r\n  const openDeassociateModal = (userId) => {\r\n    setSelectedUserId(userId);\r\n    setSelectRole(true);\r\n  };\r\n\r\n  const openSuppModal = (userId) => {\r\n    setSelectedUserId(userId);\r\n    setSelectDeassociate(true);\r\n  };\r\n\r\n  const copyToClipboard = async (value) => {\r\n    await Clipboard.setStringAsync(value);\r\n    setIsCopied(true)\r\n    setTimeout(() => setIsCopied(false), 2000);\r\n  };\r\n\r\n  const handleConfirmSuppression = async () => {\r\n    // console.log(id)\r\n    await dispatch(\r\n      removeUserFromCanal({\r\n        userId: selectedUserId,\r\n        canalId: canal.id,\r\n      })\r\n    );\r\n    setConfirmationVisible(false); // Ferme la modale de confirmation\r\n    setAlertMessage(\"L'utilisateur a été désassocié avec succès\"); // Définir le message d'alerte\r\n    setAlertVisible(true); // Affiche la modale d'alerte\r\n    setSelectedUserId(null); // ferme la modale\r\n  };\r\n\r\n  const loadFonts = async () => {\r\n    await Font.loadAsync({\r\n      \"WixMadeforDisplay-Regular\": require(\"../assets/fonts/WixMadeforDisplay-Regular.ttf\"),\r\n      \"WixMadeforDisplay-Bold\": require(\"../assets/fonts/WixMadeforDisplay-Bold.otf\"), // charge également la variante en gras\r\n    });\r\n    setFontsLoaded(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadFonts();\r\n  }, []);\r\n\r\n  const numSterilizedCats = animals.filter(\r\n    (animal) => animal.isSterilise\r\n  ).length;\r\n  const numNotIdentifiedCats = animals.filter(\r\n    (animal) => !animal.hasIdNumber\r\n  ).length;\r\n  const numIsBelongedCats = animals.filter(\r\n    (animal) => !animal.isBelonged\r\n  ).length;\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      dispatch(fetchCanalUsers(canalId));\r\n    }\r\n  }, [canalId, isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    users.forEach((user) => {\r\n      if (user.id === uid) {\r\n        setUserRole(user.isAdmin);\r\n        // console.log(user, user.IsAdmin)\r\n      }\r\n    });\r\n  }, [users]);\r\n\r\n  useEffect(() => {\r\n    users.forEach((user) => {\r\n      // if (user.id === uid) {\r\n      // setUserRole(user.isAdmin);\r\n      // }\r\n      console.log(user);\r\n    });\r\n  }, [users]);\r\n\r\n  useEffect(() => {\r\n    // loadFonts();\r\n  }, [editedCanalEmail]);\r\n\r\n  // useEffect(() => {\r\n  //   if (canalsStatus === 'failed') {\r\n  //     setAlertMessage(canalsStatus.error);\r\n  //     setAlertVisible(true);\r\n  //   } else if (canalsStatus === \"succeeded\") {\r\n  //     setAlertMessage(\"La mise à jour a réussi !\");\r\n  //     setAlertVisible(true);\r\n  //     console.log('NOOOOn')\r\n  //     // Ensuite, vous pouvez réinitialiser le statut à 'idle' ou autre selon votre logique d'application\r\n  //   }\r\n  // }, [canalsStatus.error, canalsStatus]);\r\n\r\n\r\n  useEffect(() => {\r\n    setUpdatedUsers(users);\r\n  }, [users]);\r\n\r\n  // const handleEditCanalName = async (newName) => {\r\n\r\n  // };\r\n\r\n  const handleUpdateName = async (newName) => {\r\n    const updatedData = { name: newName };\r\n    const message = 'Notre nom canal a changé ! Il est désormais' +  newName\r\n    const userIds = ['0d0E2ou8OLfQhkDdgHEF8VDp4JK2', '9gCOJvy598gS8PAX3pyql0Wm9hD2']\r\n    setCurrentCanalName(newName);\r\n    await dispatch(\r\n      updateCanal({ canalId, canalData: updatedData })\r\n    );\r\n    await dispatch(createAndSendNotification({ userIds, message }));\r\n    setEditVisible(false);\r\n  };\r\n\r\n  const handleUpdateEmail = (newEmail) => {\r\n    const updatedData = { email: newEmail, name: canal.name }; // Remplacez par le nouvel email\r\n    setCurrentCanalEmail(newEmail);\r\n    dispatch(\r\n      updateCanal({ canalId, canalData: updatedData })\r\n    );\r\n    setEditVisibleEmail(false);\r\n  };\r\n\r\n  const handleUpdateCitySector = (newCitySector) => {\r\n    const updatedData = { citySector: newCitySector, name: canal.name }; // Remplacez par la nouvelle ville\r\n    setCurrentCanalCitySector(newCitySector);\r\n    dispatch(\r\n      updateCanal({ canalId, canalData: updatedData })\r\n    );\r\n    setEditVisibleCitySector(false);\r\n  };\r\n\r\n  const handleUpdatePostalCode = (newPostalCode) => {\r\n    const updatedData = { postalCode: newPostalCode, name: canal.name }; // Remplacez par le nouveau code postal\r\n    setCurrentCanalPostalCode(newPostalCode);\r\n    dispatch(\r\n      updateCanal({ canalId, canalData: updatedData })\r\n    );\r\n    setEditVisiblePostalCode(false);\r\n  };\r\n\r\n  const handleSavePress = async () => {\r\n    if (imageUri !== canal.image) {\r\n      dispatch(updateCanalImage({ canalId, image: imageUri }));\r\n    }\r\n    setIsModified(false);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.fold}>\r\n      <HeaderEditAnimal navigation={navigation} animalName={canal.name} />\r\n\r\n      <ScrollView style={styles.container}>\r\n        <View style={styles.header}>\r\n          <View style={styles.header1st}>\r\n            <EditableImage\r\n              imageUri={imageUri}\r\n              setImageUri={setImageUri}\r\n              isModified={setIsModified}\r\n            />\r\n            <Text style={styles.title}>{canal?.name}</Text>\r\n          </View>\r\n          <View style={styles.sectionShare}>\r\n            <Text style={styles.sectionShare_title}>Partager le canal : </Text>\r\n            <TouchableOpacity\r\n              onPress = {() => {copyToClipboard(canal.id)}}\r\n              style={styles.sectionShare_button}\r\n            >\r\n              <Text style={styles.sectionShare_buttonText} selectable={true} >\r\n                {isCopied ? ('Copié !') : (canal?.id)}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.containerSection}>\r\n          {/* Informations generales */}\r\n          <Text style={styles.editUnicalSectionTitle}>Général</Text>\r\n          <View style={styles.containerUnicalSection}>\r\n            <View style={styles.editEltGroup}>\r\n              <Text style={styles.text}>{canal?.name}</Text>\r\n              <TouchableOpacity\r\n                onPress={() => setEditVisible(true)}\r\n                style={styles.sectionHeader}\r\n              >\r\n                <View style={styles.buttonIcon}>\r\n                  <Icon\r\n                    style={styles.buttonIconElt}\r\n                    name=\"pencil-outline\"\r\n                    size={15}\r\n                    color=\"#fff\"\r\n                  />\r\n                </View>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.editEltGroup}>\r\n              <Text style={styles.text}>{canal.email}</Text>\r\n              <TouchableOpacity\r\n                onPress={() => setEditVisibleEmail(true)}\r\n                style={styles.sectionHeader}\r\n              >\r\n                <View style={styles.buttonIcon}>\r\n                  <Icon\r\n                    style={styles.buttonIconElt}\r\n                    name=\"pencil-outline\"\r\n                    size={15}\r\n                    color=\"#fff\"\r\n                  />\r\n                </View>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.editEltGroup}>\r\n              <Text style={styles.text}>{canal?.citySector}</Text>\r\n              <TouchableOpacity\r\n                onPress={() => setEditVisibleCitySector(true)}\r\n                style={styles.sectionHeader}\r\n              >\r\n                <View style={styles.buttonIcon}>\r\n                  <Icon\r\n                    style={styles.buttonIconElt}\r\n                    name=\"pencil-outline\"\r\n                    size={15}\r\n                    color=\"#fff\"\r\n                  />\r\n                </View>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.editEltGroup}>\r\n              <Text style={styles.text}>{canal?.postalCode}</Text>\r\n              <TouchableOpacity\r\n                onPress={() => setEditVisiblePostalCode(true)}\r\n                style={styles.sectionHeader}\r\n              >\r\n                <View style={styles.buttonIcon}>\r\n                  <Icon\r\n                    style={styles.buttonIconElt}\r\n                    name=\"pencil-outline\"\r\n                    size={15}\r\n                    color=\"#fff\"\r\n                  />\r\n                </View>\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n            <TextInputModal\r\n              visible={isEditNameCanalVisible}\r\n              onClose={() => setEditVisible(false)} // Fermeture de la modale\r\n              onConfirm={handleUpdateName}\r\n              messageType={\"Entrez le nouveau nom de l'canal\"}\r\n              onChangeText={setEditedCanalName}\r\n            />\r\n            <TextInputModal\r\n              visible={isEditEmailCanalVisible}\r\n              onClose={() => setEditVisibleEmail(false)} // Fermeture de la modale\r\n              onConfirm={handleUpdateEmail}\r\n              messageType={\"Entrez le nouvel email\"}\r\n              onChangeText={setEditedCanalEmail}\r\n            />\r\n            <TextInputModal\r\n              visible={isEditCitySectorCanalVisible}\r\n              onClose={() => setEditVisibleCitySector(false)} // Fermeture de la modale\r\n              onConfirm={handleUpdateCitySector}\r\n              messageType={\"Entrez le nouveau nom de la ville\"}\r\n              onChangeText={setEditedCanalCitySector}\r\n            />\r\n            <TextInputModal\r\n              visible={isEditPostalCodeCanalVisible}\r\n              onClose={() => setEditVisiblePostalCode(false)} // Fermeture de la modale\r\n              onConfirm={handleUpdatePostalCode}\r\n              messageType={\"Entrez le nouveau postal code\"}\r\n              onChangeText={setEditedCanalPostalCode}\r\n            />\r\n            {/* <Text>{canal?.email}</Text>\r\n          <Text>{canal?.citySector}</Text>\r\n          <Text>{canal?.postalCode}</Text> */}\r\n          </View>\r\n\r\n          <Text style={styles.editUnicalSectionTitle}>Gestion des membres</Text>\r\n          <View style={styles.containerSection}>\r\n            {/* <View style={styles.containerUnicalSection}>: */}\r\n            <View style={styles.section}>\r\n              <View style={styles.members}>\r\n                {updatedUsers.map((user) => (\r\n                  <View style={styles.member} key={user.id}>\r\n                    <View>\r\n                      <Text style={styles.text}>\r\n                        {user.surname} {user.name}\r\n                      </Text>\r\n                      <Text style={styles.text}>{user.email}</Text>\r\n                      <Text style={styles.text}>\r\n                        {user.isAdmin ? \"Administrateur\" : \"Visiteur\"}\r\n                      </Text>\r\n                    </View>\r\n\r\n                    {user.id !== canal.adminId ? (\r\n                      <View style={styles.btnAdmin}>\r\n                        <TouchableOpacity\r\n                          onPress={() => openDeassociateModal(user.id)}\r\n                          style={styles.sectionAdmin_button}\r\n                        >\r\n                          <View style={styles.buttonIcon}>\r\n                            <Icon\r\n                              style={styles.buttonIconElt}\r\n                              name=\"pencil-outline\"\r\n                              size={15}\r\n                              color=\"#fff\"\r\n                            />\r\n                          </View>\r\n                        </TouchableOpacity>\r\n\r\n                        <TouchableOpacity\r\n                          onPress={() => openSuppModal(user.id)}\r\n                          style={styles.sectionAdmin_button}\r\n                        >\r\n                          <View style={styles.buttonIcon}>\r\n                            <Icon\r\n                              style={styles.buttonIconElt}\r\n                              name=\"close-outline\"\r\n                              size={15}\r\n                              color=\"#C40030\"\r\n                            />\r\n                          </View>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n                    ) : (\r\n                      // <Text style={styles.text}>\r\n                      //   Super Admin, le rôle ne peut être modifié.\r\n                      // </Text>\r\n                      <></>\r\n                    )}\r\n                  </View>\r\n                ))}\r\n\r\n                <SelectModal\r\n                  visible={selectRole}\r\n                  // onClose={() => setSelectRole(false)}\r\n                  onClose={handleClean}\r\n                  onConfirm={handleConfirm}\r\n                  options={options}\r\n                />\r\n                <ConfirmationModal\r\n                  visible={selectDeassociate}\r\n                  // onClose={() => setSelectDeassociate(false)}\r\n                  onClose={handleClean}\r\n                  onConfirm={handleConfirmSuppression}\r\n                  messageType={\r\n                    \"Voulez-vous vraiment désassocier cet utilisateur de l'canal ?\"\r\n                  }\r\n                />\r\n                <CustomAlert\r\n                  visible={isAlertVisible}\r\n                  onClose={() => setAlertVisible(false)}\r\n                  message={alertMessage}\r\n                />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n\r\n      {isModified && (\r\n        <View style={styles.btnSectionSuppSave}>\r\n          <TouchableOpacity onPress={handleSavePress} style={styles.btnSave}>\r\n            <Text style={styles.buttonSaveText}>SAUVEGARDER L'IMAGE</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  fold: {\r\n    height: \"100%\",\r\n  },\r\n  container: {\r\n    padding: 0,\r\n    height: \"100%\",\r\n  },\r\n  header: {\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"#2F4F4F\",\r\n    padding: 30,\r\n  },\r\n  header1st: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 20,\r\n    backgroundColor: \"#2F4F4F\",\r\n    paddingTop: 20,\r\n    columnGap: 20,\r\n  },\r\n  sectionShare: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#2F4F4F\",\r\n    color: \"#FFF\",\r\n    // padding: 5\r\n  },\r\n  sectionShare_title: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 10,\r\n    color: \"#FFF\",\r\n    paddingTop: 5,\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n  },\r\n  sectionShare_button: {\r\n    backgroundColor: \"#fff\",\r\n    color: \"#000\",\r\n    padding: 5,\r\n  },\r\n  sectionShare_buttonText: {\r\n    color: \"#000\",\r\n  },\r\n  sectionBtns: {\r\n    flexDirection: \"row\",\r\n    // flexWrap: \"nowrap\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    rowGap: 40,\r\n    columnGap: 10,\r\n    padding: 6,\r\n    marginTop: 20,\r\n  },\r\n  sectionBtns_btn: {\r\n    flexDirection: \"row\",\r\n    columnGap: 8,\r\n    backgroundColor: \"#000\",\r\n    color: \"#FFF\",\r\n    padding: 10,\r\n    borderRadius: 2,\r\n  },\r\n  sectionBtns_btnText: {\r\n    color: \"#FFF\",\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    fontSize: 10,\r\n  },\r\n  image: {\r\n    width: 50,\r\n    height: 50,\r\n    marginRight: 10,\r\n    borderRadius: 50,\r\n  },\r\n  title: {\r\n    color: \"#FFF\",\r\n    fontSize: 32,\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    fontWeight: \"600\",\r\n  },\r\n  subtitle: {\r\n    color: \"#2F4F4F\",\r\n    fontSize: 22,\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    fontWeight: \"600\",\r\n  },\r\n\r\n  containerSection: {\r\n    // padding: 10,\r\n    // backgroundColor: '#C40030',\r\n    // paddingBottom: 25\r\n    height: \"100%\",\r\n    // paddingBottom: 2\r\n  },\r\n\r\n  section: {\r\n    paddingHorizontal: 25,\r\n    paddingBottom: 60,\r\n    // paddingTop: 0,\r\n    backgroundColor: \"#2f4f4f\",\r\n    marginBottom: 0,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 10,\r\n  },\r\n  text: {\r\n    fontSize: 14,\r\n    color: \"#fff\",\r\n    fontFamily: \"WixMadeforDisplay-Regular\",\r\n  },\r\n  editEltGroup: {\r\n    marginHorizontal: 15,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    columnGap: 20,\r\n  },\r\n  buttonGroupIcons: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  buttonIcon: {\r\n    backgroundColor: \"black\",\r\n    borderRadius: 2,\r\n    paddingTop: 1,\r\n  },\r\n  buttonIconElt: {\r\n    margin: 7,\r\n  },\r\n  addCat: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  iconAddCat: {\r\n    flexDirection: \"row\",\r\n    marginTop: 20,\r\n  },\r\n  sectionCitySector: {\r\n    flexDirection: \"column\",\r\n    rowGap: 5,\r\n    justifyContent: \"center\",\r\n  },\r\n  citySectorList: {\r\n    maxWidth: 200,\r\n  },\r\n  sectionBtns_btnCitySector: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    backgroundColor: \"#000\",\r\n    color: \"#FFF\",\r\n    padding: 10,\r\n    borderRadius: 2,\r\n  },\r\n  sectionTitleCitySector: {\r\n    color: \"#FFF\",\r\n    fontSize: 14,\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    fontWeight: \"600\",\r\n  },\r\n  line: {\r\n    height: 2,\r\n    backgroundColor: \"#000\", // change this to fit your design\r\n    alignSelf: \"center\",\r\n    marginVertical: 20, // space above and below the line\r\n    width: \"80%\", // change this to fit your design\r\n  },\r\n  editUnicalSectionTitle: {\r\n    fontSize: 18,\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    fontWeight: \"600\",\r\n    textAlign: \"left\",\r\n    color: \"#2F4F4F\",\r\n    marginLeft: 15,\r\n  },\r\n  containerUnicalSection: {\r\n    backgroundColor: \"#2F4F4F\",\r\n    padding: 15,\r\n    rowGap: 20,\r\n  },\r\n  members: {\r\n    marginTop: 20,\r\n    rowGap: 10,\r\n  },\r\n  member: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    rowGap: 10,\r\n    paddingBottom: 20,\r\n    borderBottomWidth: 2,\r\n    // height: '100%'\r\n  },\r\n  btnAdmin: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  sectionAdmin_button: {\r\n    backgroundColor: \"transparent\",\r\n    padding: 5,\r\n  },\r\n  btnSectionSuppSave: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    height: 60, // Vous pouvez modifier cette valeur en fonction de vos besoins\r\n    backgroundColor: \"#000\", // Pour la visibilité\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\", // Pour espacer les boutons\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    marginTop: 10,\r\n  },\r\n  buttonSaveText: {\r\n    // padding: 20,\r\n    color: \"white\",\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  buttonSuppText: {\r\n    padding: 20,\r\n    color: \"white\",\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  btnSave: {\r\n    // backgroundColor: 'green'\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nexport default EditCanalDetails;\r\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAWnD,SAAsBC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc;AAIvB,SACEC,qBAAqB,EACrBC,yBAAyB;AAE3B,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,OAAO,KAAKC,IAAI,MAAM,WAAW;AACjC,OAAOC,IAAI;AAIX,SAASC,aAAa,QAAQ,0BAA0B;AAExD,OAAOC,aAAa;AACpB,OAAOC,cAAc;AACrB,SACEC,cAAc,EACdC,iBAAiB,EACjBC,sBAAsB;AAExB,OAAOC,WAAW;AAClB,OAAOC,iBAAiB;AACxB,OAAOC,WAAW;AAClB,SAASC,gBAAgB;AACzB,OAAO,KAAKC,SAAS,MAAM,gBAAgB;AAC3C,SAASC,yBAAyB;AAAqC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAmEvE,IAAMC,sBAAgC,GAAG,SAAnCA,sBAAgCA,CAAA,EAAS;EAC7C,IAAMC,KAAK,GAAGtB,QAAQ,CAAC,CAAC;EACxB,IAAMuB,QAAQ,GAAG1B,cAAc,CAAC,CAAC;EACjC,IAAM2B,UAAU,GAAGrB,aAAa,CAA6B,CAAC;EAC9D,IAAMsB,cAAc,GAAGtB,aAAa,CAAmB,CAAC;EAExD,IAAAuB,IAAA,GAA0BJ,KAAK,CAACK,MAAM;IAA9BC,aAAa,GAAAF,IAAA,CAAbE,aAAa;EAErB,IAAAC,YAAA,GAAiCjC,WAAW,CAC1C,UAACkC,KAAgB;MAAA,OAAKA,KAAK,CAACC,IAAI;IAAA,CAClC,CAAC;IAFOC,eAAe,GAAAH,YAAA,CAAfG,eAAe;IAAEC,GAAG,GAAAJ,YAAA,CAAHI,GAAG;EAG5B,IAAAC,aAAA,GAA2DtC,WAAW,CACpE,UAACkC,KAAgB;MAAA,OAAKA,KAAK,CAACK,YAAY;IAAA,CAC1C,CAAC;IAFaA,YAAY,GAAAD,aAAA,CAAlBE,IAAI;IAAwBC,kBAAkB,GAAAH,aAAA,CAA1BI,MAAM;EAGlC,IAAAC,aAAA,GAA+C3C,WAAW,CACxD,UAACkC,KAAgB;MAAA,OAAKA,KAAK,CAACU,MAAM;IAAA,CACpC,CAAC;IAFaA,MAAM,GAAAD,aAAA,CAAZH,IAAI;IAAkBK,YAAY,GAAAF,aAAA,CAApBD,MAAM;EAG5B,IAAAI,aAAA,GAAiD9C,WAAW,CAC1D,UAACkC,KAAgB;MAAA,OAAKA,KAAK,CAACa,OAAO;IAAA,CACrC,CAAC;IAFaA,OAAO,GAAAD,aAAA,CAAbN,IAAI;IAAmBQ,aAAa,GAAAF,aAAA,CAArBJ,MAAM;EAG7B,IAAAO,aAAA,GAA6CjD,WAAW,CACtD,UAACkC,KAAgB;MAAA,OAAKA,KAAK,CAACgB,gBAAgB;IAAA,CAC9C,CAAC;IAFaC,KAAK,GAAAF,aAAA,CAAXT,IAAI;IAAiBY,WAAW,GAAAH,aAAA,CAAnBP,MAAM;EAI3B,IAAMW,WAAW,GAAGd,YAAY,CAACe,IAAI,CAAC,UAACC,IAAI;IAAA,OAAKA,IAAI,CAACC,EAAE,KAAKxB,aAAa;EAAA,EAAC;EAE1EyB,OAAO,CAACC,GAAG,CAACjB,kBAAkB,CAAC;EAC/BjD,SAAS,CAAC,YAAM;IAEd,IAAI6D,WAAW,EAAE;MACfM,yBAAyB,CAACN,WAAW,CAACO,IAAI,CAAC;MAC3CC,0BAA0B,CAACR,WAAW,CAACS,KAAK,CAAC;MAC7CC,yBAAyB,CAACV,WAAW,CAACW,IAAI,CAAC;MAC3CC,+BAA+B,CAACZ,WAAW,CAACa,UAAU,CAAC;IACzD;EACF,CAAC,EAAE,CAAC3B,YAAY,CAAC,CAAC;EAElB,IAAA4B,SAAA,GAA4C1E,QAAQ,CAAW,EAAE,CAAC;IAAA2E,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3DG,cAAc,GAAAF,UAAA;IAAEG,iBAAiB,GAAAH,UAAA;EACxC,IAAAI,UAAA,GAAmC/E,QAAQ,CAAU,KAAK,CAAC;IAAAgF,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAApDE,WAAW,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC/B,IAAAG,UAAA,GAAkCnF,QAAQ,CAAW,EAAE,CAAC;IAAAoF,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAjDE,WAAW,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC9B,IAAAG,UAAA,GAAsCvF,QAAQ,CAAC,KAAK,CAAC;IAAAwF,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA9CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAClC,IAAAG,UAAA,GAAgC3F,QAAQ,CAAC4D,WAAW,oBAAXA,WAAW,CAAEgC,KAAK,CAAC;IAAAC,WAAA,GAAAjB,cAAA,CAAAe,UAAA;IAArDG,QAAQ,GAAAD,WAAA;IAAEE,WAAW,GAAAF,WAAA;EAC5B,IAAAG,WAAA,GAAuDhG,QAAQ,CAAC,KAAK,CAAC;IAAAiG,WAAA,GAAArB,cAAA,CAAAoB,WAAA;IAA/DE,4BAA4B,GAAAD,WAAA;IAAEE,cAAc,GAAAF,WAAA;EACnD,IAAAG,WAAA,GAA6DpG,QAAQ,CAAC,KAAK,CAAC;IAAAqG,WAAA,GAAAzB,cAAA,CAAAwB,WAAA;IAArEE,6BAA6B,GAAAD,WAAA;IAAEE,mBAAmB,GAAAF,WAAA;EACzD,IAAAG,WAAA,GAA2DxG,QAAQ,CAAC,KAAK,CAAC;IAAAyG,WAAA,GAAA7B,cAAA,CAAA4B,WAAA;IAAnEE,4BAA4B,GAAAD,WAAA;IAAEE,kBAAkB,GAAAF,WAAA;EACvD,IAAAG,WAAA,GACE5G,QAAQ,CAAC,KAAK,CAAC;IAAA6G,WAAA,GAAAjC,cAAA,CAAAgC,WAAA;IADVE,kCAAkC,GAAAD,WAAA;IAAEE,wBAAwB,GAAAF,WAAA;EAEnE,IAAAG,WAAA,GAA0DhH,QAAQ,CAAC,EAAE,CAAC;IAAAiH,WAAA,GAAArC,cAAA,CAAAoC,WAAA;IAA/DE,qBAAqB,GAAAD,WAAA;IAAEE,wBAAwB,GAAAF,WAAA;EACtD,IAAAG,WAAA,GAA4DpH,QAAQ,CAAC,EAAE,CAAC;IAAAqH,WAAA,GAAAzC,cAAA,CAAAwC,WAAA;IAAjEE,sBAAsB,GAAAD,WAAA;IAAEE,yBAAyB,GAAAF,WAAA;EACxD,IAAAG,WAAA,GAA0DxH,QAAQ,CAAC,EAAE,CAAC;IAAAyH,WAAA,GAAA7C,cAAA,CAAA4C,WAAA;IAA/DE,qBAAqB,GAAAD,WAAA;IAAEE,wBAAwB,GAAAF,WAAA;EACtD,IAAAG,WAAA,GACE5H,QAAQ,CAAC,EAAE,CAAC;IAAA6H,WAAA,GAAAjD,cAAA,CAAAgD,WAAA;IADPE,2BAA2B,GAAAD,WAAA;IAAEE,8BAA8B,GAAAF,WAAA;EAElE,IAAAG,WAAA,GAA0ChI,QAAQ,CAAC,KAAK,CAAC;IAAAiI,WAAA,GAAArD,cAAA,CAAAoD,WAAA;IAAlDE,cAAc,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EACtC,IAAAG,WAAA,GAA4CpI,QAAQ,CAAC,IAAI,CAAC;IAAAqI,WAAA,GAAAzD,cAAA,CAAAwD,WAAA;IAAnDE,cAAc,GAAAD,WAAA;IAAEE,iBAAiB,GAAAF,WAAA;EACxC,IAAAG,WAAA,GAA0CxI,QAAQ,CAAC,IAAI,CAAC;IAAAyI,WAAA,GAAA7D,cAAA,CAAA4D,WAAA;IAAjDE,aAAa,GAAAD,WAAA;IAAEE,gBAAgB,GAAAF,WAAA;EACtC,IAAAG,WAAA,GAAwC5I,QAAQ,CAAC,EAAE,CAAC;IAAA6I,WAAA,GAAAjE,cAAA,CAAAgE,WAAA;IAA7CE,YAAY,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EACpC,IAAAG,WAAA,GAAwDhJ,QAAQ,CAAC,KAAK,CAAC;IAAAiJ,WAAA,GAAArE,cAAA,CAAAoE,WAAA;IAAhEE,qBAAqB,GAAAD,WAAA;IAAEE,sBAAsB,GAAAF,WAAA;EACpD,IAAAG,WAAA,GAAwCpJ,QAAQ,CAAC,EAAE,CAAC;IAAAqJ,WAAA,GAAAzE,cAAA,CAAAwE,WAAA;IAA7CE,YAAY,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EACpC,IAAAG,WAAA,GAA0CxJ,QAAQ,CAAC,KAAK,CAAC;IAAAyJ,WAAA,GAAA7E,cAAA,CAAA4E,WAAA;IAAlDE,cAAc,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EACtC,IAAAG,WAAA,GAAoC5J,QAAQ,CAAC,KAAK,CAAC;IAAA6J,WAAA,GAAAjF,cAAA,CAAAgF,WAAA;IAA5CE,UAAU,GAAAD,WAAA;IAAEE,aAAa,GAAAF,WAAA;EAChC,IAAAG,WAAA,GAAkDhK,QAAQ,CAAC,KAAK,CAAC;IAAAiK,WAAA,GAAArF,cAAA,CAAAoF,WAAA;IAA1DE,iBAAiB,GAAAD,WAAA;IAAEE,oBAAoB,GAAAF,WAAA;EAC9C,IAAAG,WAAA,GAAgCpK,QAAQ,CAAU,KAAK,CAAC;IAAAqK,WAAA,GAAAzF,cAAA,CAAAwF,WAAA;IAAjDE,QAAQ,GAAAD,WAAA;IAAEE,WAAW,GAAAF,WAAA;EAE5B,IAAAG,WAAA,GAA4DxK,QAAQ,CAClE4D,WAAW,CAACO,IACd,CAAC;IAAAsG,WAAA,GAAA7F,cAAA,CAAA4F,WAAA;IAFME,sBAAsB,GAAAD,WAAA;IAAEvG,yBAAyB,GAAAuG,WAAA;EAGxD,IAAAE,WAAA,GAA8D3K,QAAQ,CACpE4D,WAAW,CAACS,KACd,CAAC;IAAAuG,WAAA,GAAAhG,cAAA,CAAA+F,WAAA;IAFME,uBAAuB,GAAAD,WAAA;IAAExG,0BAA0B,GAAAwG,WAAA;EAG1D,IAAAE,WAAA,GAA4D9K,QAAQ,CAClE4D,WAAW,CAACW,IACd,CAAC;IAAAwG,WAAA,GAAAnG,cAAA,CAAAkG,WAAA;IAFME,sBAAsB,GAAAD,WAAA;IAAEzG,yBAAyB,GAAAyG,WAAA;EAGxD,IAAAE,WAAA,GACEjL,QAAQ,CAAC4D,WAAW,CAACW,IAAI,CAAC;IAAA2G,WAAA,GAAAtG,cAAA,CAAAqG,WAAA;IADrBE,4BAA4B,GAAAD,WAAA;IAAE1G,+BAA+B,GAAA0G,WAAA;EAEpE,IAAME,WAAW,GAAG,aAAa;EAEjC,IAAMC,OAAO,GAAG,CACd;IAAEC,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAK,CAAC,EAC/B;IAAED,KAAK,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAM,CAAC,CAEpC;EAED,IAAAC,WAAA,GAAoCxL,QAAQ,CAAC,KAAK,CAAC;IAAAyL,WAAA,GAAA7G,cAAA,CAAA4G,WAAA;IAA5CE,UAAU,GAAAD,WAAA;IAAEE,aAAa,GAAAF,WAAA;EAEhC3L,KAAK,CAACC,SAAS,CAAC,YAAM;IACpB,IAAM6L,WAAW,GAAGzJ,UAAU,CAAC0J,WAAW,CAAC,cAAc,EAAE,UAACC,CAAC,EAAK;MAEhE,IAAI,CAACJ,UAAU,EAAE;QAEf;MACF;MAEAI,CAAC,CAACC,cAAc,CAAC,CAAC;MAGlBzL,KAAK,CAAC0L,KAAK,CACT,2BAA2B,EAC3B,gFAAgF,EAChF,CACE;QAAEC,IAAI,EAAE,QAAQ;QAAEC,KAAK,EAAE,QAAQ;QAAEC,OAAO,EAAE,SAAAA,QAAA,EAAM,CAAC;MAAE,CAAC,EACtD;QACEF,IAAI,EAAE,WAAW;QACjBC,KAAK,EAAE,aAAa;QAEpBC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMhK,UAAU,CAACD,QAAQ,CAAC4J,CAAC,CAAC/I,IAAI,CAACqJ,MAAM,CAAC;QAAA;MACnD,CAAC,CAEL,CAAC;IACH,CAAC,CAAC;IAEF,OAAOR,WAAW;EACpB,CAAC,EAAE,CAACzJ,UAAU,EAAEuJ,UAAU,CAAC,CAAC;EAE5B,IAAMW,aAAa,GAAG,SAAhBA,aAAaA,CAAId,KAAK,EAAK;IAC/B5C,gBAAgB,CAAC4C,KAAK,CAAC;IAGvBrJ,QAAQ,CACNjB,cAAc,CAAC;MACbqL,MAAM,EAAEhE,cAAc;MACtB/F,aAAa,EAAEqB,WAAW,CAACG,EAAE;MAC7BwI,UAAU,EAAEhB;IACd,CAAC,CACH,CAAC;IAED,IAAMzC,YAAY,GAAGpF,KAAK,CAAC8I,GAAG,CAAC,UAACC,IAAI,EAAK;MACvC,IAAIA,IAAI,CAAC1I,EAAE,KAAKuE,cAAc,EAAE;QAC9B,OAAAoE,aAAA,CAAAA,aAAA,KAAYD,IAAI;UAAEE,OAAO,EAAEpB,KAAK,KAAK;QAAI;MAC3C;MACA,OAAOkB,IAAI;IACb,CAAC,CAAC;IAEF1D,eAAe,CAACD,YAAY,CAAC;IAG7BP,iBAAiB,CAAC,IAAI,CAAC;IACvBwB,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,IAAM6C,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBrE,iBAAiB,CAAC,IAAI,CAAC;IACvBwB,aAAa,CAAC,KAAK,CAAC;IACpBI,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,IAAM0C,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIP,MAAM,EAAK;IACvC/D,iBAAiB,CAAC+D,MAAM,CAAC;IACzBvC,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,IAAM+C,aAAa,GAAG,SAAhBA,aAAaA,CAAIR,MAAM,EAAK;IAChC/D,iBAAiB,CAAC+D,MAAM,CAAC;IACzBnC,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,IAAM4C,eAAe;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,WAAO1B,KAAK,EAAK;MACvC,MAAM/J,SAAS,CAAC0L,cAAc,CAAC3B,KAAK,CAAC;MACrChB,WAAW,CAAC,IAAI,CAAC;MACjB4C,UAAU,CAAC;QAAA,OAAM5C,WAAW,CAAC,KAAK,CAAC;MAAA,GAAE,IAAI,CAAC;IAC5C,CAAC;IAAA,gBAJKwC,eAAeA,CAAAK,EAAA;MAAA,OAAAJ,KAAA,CAAAK,KAAA,OAAAC,SAAA;IAAA;EAAA,GAIpB;EAED,IAAMC,wBAAwB;IAAA,IAAAC,KAAA,GAAAP,iBAAA,CAAG,aAAY;MAE3C,MAAM/K,QAAQ,CACZxB,yBAAyB,CAAC;QACxB4L,MAAM,EAAEhE,cAAc;QACtB/F,aAAa,EAAEqB,WAAW,CAACG;MAC7B,CAAC,CACH,CAAC;MACDoF,sBAAsB,CAAC,KAAK,CAAC;MAC7BI,eAAe,CAAC,4CAA4C,CAAC;MAC7DI,eAAe,CAAC,IAAI,CAAC;MACrBpB,iBAAiB,CAAC,IAAI,CAAC;IACzB,CAAC;IAAA,gBAZKgF,wBAAwBA,CAAA;MAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,GAY7B;EAED,IAAMG,SAAS;IAAA,IAAAC,KAAA,GAAAT,iBAAA,CAAG,aAAY;MAC5B,MAAMrM,IAAI,CAAC+M,SAAS,CAAC;QACnB,2BAA2B,EAAEC,OAAO,gDAAgD,CAAC;QACrF,wBAAwB,EAAEA,OAAO,6CAA6C;MAChF,CAAC,CAAC;MACFlI,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC;IAAA,gBANK+H,SAASA,CAAA;MAAA,OAAAC,KAAA,CAAAL,KAAA,OAAAC,SAAA;IAAA;EAAA,GAMd;EAEDvN,SAAS,CAAC,YAAM;IACd0N,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMI,iBAAiB,GAAGvK,OAAO,CAACwK,MAAM,CACtC,UAACC,MAAM;IAAA,OAAKA,MAAM,CAACC,WAAW;EAAA,CAChC,CAAC,CAACC,MAAM;EACR,IAAMC,oBAAoB,GAAG5K,OAAO,CAACwK,MAAM,CACzC,UAACC,MAAM;IAAA,OAAK,CAACA,MAAM,CAACI,WAAW;EAAA,CACjC,CAAC,CAACF,MAAM;EACR,IAAMG,iBAAiB,GAAG9K,OAAO,CAACwK,MAAM,CACtC,UAACC,MAAM;IAAA,OAAK,CAACA,MAAM,CAACM,UAAU;EAAA,CAChC,CAAC,CAACJ,MAAM;EAERlO,SAAS,CAAC,YAAM;IACd,IAAI4C,eAAe,EAAE;MACnBT,QAAQ,CAACzB,qBAAqB,CAAC8B,aAAa,CAAC,CAAC;IAChD;EACF,CAAC,EAAE,CAACA,aAAa,EAAEI,eAAe,CAAC,CAAC;EAEpC5C,SAAS,CAAC,YAAM;IACd2D,KAAK,CAAC4K,OAAO,CAAC,UAAC7B,IAAI,EAAK;MACtB,IAAIA,IAAI,CAAC1I,EAAE,KAAKnB,GAAG,EAAE;QACnBsC,WAAW,CAACuH,IAAI,CAACE,OAAO,CAAC;MAE3B;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACjJ,KAAK,CAAC,CAAC;EAEX3D,SAAS,CAAC,YAAM;IACd2D,KAAK,CAAC4K,OAAO,CAAC,UAAC7B,IAAI,EAAK;MAItBzI,OAAO,CAACC,GAAG,CAACwI,IAAI,CAAC;IACnB,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC/I,KAAK,CAAC,CAAC;EAEX3D,SAAS,CAAC,YAAM,CAEhB,CAAC,EAAE,CAACuH,sBAAsB,CAAC,CAAC;EAe5BvH,SAAS,CAAC,YAAM;IACdgJ,eAAe,CAACrF,KAAK,CAAC;EACxB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAMX,IAAM6K,gBAAgB;IAAA,IAAAC,KAAA,GAAAvB,iBAAA,CAAG,WAAOwB,OAAO,EAAK;MAC1C,IAAMC,WAAW,GAAG;QAAEvK,IAAI,EAAEsK;MAAQ,CAAC;MACrC,IAAME,OAAO,GAAG,mDAAmD,GAAIF,OAAO;MAC9E,IAAMG,OAAO,GAAG,CAAC,8BAA8B,EAAE,8BAA8B,CAAC;MAChF1K,yBAAyB,CAACuK,OAAO,CAAC;MAClC,MAAMvM,QAAQ,CACZhB,iBAAiB,CAAC;QAAEqB,aAAa,EAAbA,aAAa;QAAEsM,eAAe,EAAEH;MAAY,CAAC,CACnE,CAAC;MACD,MAAMxM,QAAQ,CAACT,yBAAyB,CAAC;QAAEmN,OAAO,EAAPA,OAAO;QAAED,OAAO,EAAPA;MAAQ,CAAC,CAAC,CAAC;MAC/DxI,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC;IAAA,gBAVKoI,gBAAgBA,CAAAO,GAAA;MAAA,OAAAN,KAAA,CAAAnB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAUrB;EAED,IAAMyB,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,QAAQ,EAAK;IACtC,IAAMN,WAAW,GAAG;MAAErK,KAAK,EAAE2K,QAAQ;MAAE7K,IAAI,EAAEP,WAAW,CAACO;IAAK,CAAC;IAC/DC,0BAA0B,CAAC4K,QAAQ,CAAC;IACpC9M,QAAQ,CACNhB,iBAAiB,CAAC;MAAEqB,aAAa,EAAbA,aAAa;MAAEsM,eAAe,EAAEH;IAAY,CAAC,CACnE,CAAC;IACDnI,mBAAmB,CAAC,KAAK,CAAC;EAC5B,CAAC;EAED,IAAM0I,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,OAAO,EAAK;IACpC,IAAMR,WAAW,GAAG;MAAEnK,IAAI,EAAE2K,OAAO;MAAE/K,IAAI,EAAEP,WAAW,CAACO;IAAK,CAAC;IAC7DG,yBAAyB,CAAC4K,OAAO,CAAC;IAClChN,QAAQ,CACNhB,iBAAiB,CAAC;MAAEqB,aAAa,EAAbA,aAAa;MAAEsM,eAAe,EAAEH;IAAY,CAAC,CACnE,CAAC;IACD/H,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,IAAMwI,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIC,aAAa,EAAK;IAChD,IAAMV,WAAW,GAAG;MAAEjK,UAAU,EAAE2K,aAAa;MAAEjL,IAAI,EAAEP,WAAW,CAACO;IAAK,CAAC;IACzEK,+BAA+B,CAAC4K,aAAa,CAAC;IAC9ClN,QAAQ,CACNhB,iBAAiB,CAAC;MAAEqB,aAAa,EAAbA,aAAa;MAAEsM,eAAe,EAAEH;IAAY,CAAC,CACnE,CAAC;IACD3H,wBAAwB,CAAC,KAAK,CAAC;EACjC,CAAC;EAED,IAAMsI,eAAe;IAAA,IAAAC,KAAA,GAAArC,iBAAA,CAAG,aAAY;MAClC,IAAInH,QAAQ,KAAKlC,WAAW,CAACgC,KAAK,EAAE;QAClC1D,QAAQ,CAACf,sBAAsB,CAAC;UAAEoB,aAAa,EAAbA,aAAa;UAAEqD,KAAK,EAAEE;QAAS,CAAC,CAAC,CAAC;MACtE;MACA6F,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC;IAAA,gBALK0D,eAAeA,CAAA;MAAA,OAAAC,KAAA,CAAAjC,KAAA,OAAAC,SAAA;IAAA;EAAA,GAKpB;EAED,OACEzL,KAAA,CAAC5B,IAAI;IAACiM,KAAK,EAAEqD,MAAM,CAACC,IAAK;IAAAC,QAAA,GACvB9N,IAAA,CAACJ,gBAAgB;MAACY,UAAU,EAAEA,UAAW;MAACuN,UAAU,EAAE9L,WAAW,CAACO;IAAK,CAAE,CAAC,EAE1EtC,KAAA,CAACxB,UAAU;MAAC6L,KAAK,EAAEqD,MAAM,CAACI,SAAU;MAAAF,QAAA,GAClC5N,KAAA,CAAC5B,IAAI;QAACiM,KAAK,EAAEqD,MAAM,CAACK,MAAO;QAAAH,QAAA,GACzB5N,KAAA,CAAC5B,IAAI;UAACiM,KAAK,EAAEqD,MAAM,CAACM,SAAU;UAAAJ,QAAA,GAC5B9N,IAAA,CAACZ,aAAa;YACZ+E,QAAQ,EAAEA,QAAS;YACnBC,WAAW,EAAEA,WAAY;YACzB2F,UAAU,EAAEC;UAAc,CAC3B,CAAC,EACFhK,IAAA,CAACzB,IAAI;YAACgM,KAAK,EAAEqD,MAAM,CAACO,KAAM;YAAAL,QAAA,EAAE7L,WAAW,oBAAXA,WAAW,CAAEO;UAAI,CAAO,CAAC;QAAA,CACjD,CAAC,EACPtC,KAAA,CAAC5B,IAAI;UAACiM,KAAK,EAAEqD,MAAM,CAACQ,YAAa;UAAAN,QAAA,GAC/B9N,IAAA,CAACzB,IAAI;YAACgM,KAAK,EAAEqD,MAAM,CAACS,kBAAmB;YAAAP,QAAA,EAAC;UAAoB,CAAM,CAAC,EACnE9N,IAAA,CAACvB,gBAAgB;YACf+L,OAAO,EAAI,SAAAA,QAAA,EAAM;cAACY,eAAe,CAACnJ,WAAW,CAACG,EAAE,CAAC;YAAA,CAAE;YACnDmI,KAAK,EAAEqD,MAAM,CAACU,mBAAoB;YAAAR,QAAA,EAElC9N,IAAA,CAACzB,IAAI;cAACgM,KAAK,EAAEqD,MAAM,CAACW,uBAAwB;cAACC,UAAU,EAAE,IAAK;cAAAV,QAAA,EAC3DnF,QAAQ,GAAI,SAAS,GAAK1G,WAAW,oBAAXA,WAAW,CAAEG;YAAG,CACvC;UAAC,CACS,CAAC;QAAA,CACf,CAAC;MAAA,CACH,CAAC,EAEPlC,KAAA,CAAC5B,IAAI;QAACiM,KAAK,EAAEqD,MAAM,CAACa,gBAAiB;QAAAX,QAAA,GAEnC9N,IAAA,CAACzB,IAAI;UAACgM,KAAK,EAAEqD,MAAM,CAACc,sBAAuB;UAAAZ,QAAA,EAAC;QAAO,CAAM,CAAC,EAC1D5N,KAAA,CAAC5B,IAAI;UAACiM,KAAK,EAAEqD,MAAM,CAACe,sBAAuB;UAAAb,QAAA,GACzC5N,KAAA,CAAC5B,IAAI;YAACiM,KAAK,EAAEqD,MAAM,CAACgB,YAAa;YAAAd,QAAA,GAC/B9N,IAAA,CAACzB,IAAI;cAACgM,KAAK,EAAEqD,MAAM,CAACtD,IAAK;cAAAwD,QAAA,EAAE7L,WAAW,oBAAXA,WAAW,CAAEO;YAAI,CAAO,CAAC,EACpDxC,IAAA,CAACvB,gBAAgB;cACf+L,OAAO,EAAE,SAAAA,QAAA;gBAAA,OAAMhG,cAAc,CAAC,IAAI,CAAC;cAAA,CAAC;cACpC+F,KAAK,EAAEqD,MAAM,CAACiB,aAAc;cAAAf,QAAA,EAE5B9N,IAAA,CAAC1B,IAAI;gBAACiM,KAAK,EAAEqD,MAAM,CAACkB,UAAW;gBAAAhB,QAAA,EAC7B9N,IAAA,CAACd,IAAI;kBACHqL,KAAK,EAAEqD,MAAM,CAACmB,aAAc;kBAC5BvM,IAAI,EAAC,gBAAgB;kBACrBwM,IAAI,EAAE,EAAG;kBACTC,KAAK,EAAC;gBAAM,CACb;cAAC,CACE;YAAC,CACS,CAAC;UAAA,CACf,CAAC,EACP/O,KAAA,CAAC5B,IAAI;YAACiM,KAAK,EAAEqD,MAAM,CAACgB,YAAa;YAAAd,QAAA,GAC/B9N,IAAA,CAACzB,IAAI;cAACgM,KAAK,EAAEqD,MAAM,CAACtD,IAAK;cAAAwD,QAAA,EAAE7L,WAAW,CAACS;YAAK,CAAO,CAAC,EACpD1C,IAAA,CAACvB,gBAAgB;cACf+L,OAAO,EAAE,SAAAA,QAAA;gBAAA,OAAM5F,mBAAmB,CAAC,IAAI,CAAC;cAAA,CAAC;cACzC2F,KAAK,EAAEqD,MAAM,CAACiB,aAAc;cAAAf,QAAA,EAE5B9N,IAAA,CAAC1B,IAAI;gBAACiM,KAAK,EAAEqD,MAAM,CAACkB,UAAW;gBAAAhB,QAAA,EAC7B9N,IAAA,CAACd,IAAI;kBACHqL,KAAK,EAAEqD,MAAM,CAACmB,aAAc;kBAC5BvM,IAAI,EAAC,gBAAgB;kBACrBwM,IAAI,EAAE,EAAG;kBACTC,KAAK,EAAC;gBAAM,CACb;cAAC,CACE;YAAC,CACS,CAAC;UAAA,CACf,CAAC,EACP/O,KAAA,CAAC5B,IAAI;YAACiM,KAAK,EAAEqD,MAAM,CAACgB,YAAa;YAAAd,QAAA,GAC/B9N,IAAA,CAACzB,IAAI;cAACgM,KAAK,EAAEqD,MAAM,CAACtD,IAAK;cAAAwD,QAAA,EAAE7L,WAAW,oBAAXA,WAAW,CAAEW;YAAI,CAAO,CAAC,EACpD5C,IAAA,CAACvB,gBAAgB;cACf+L,OAAO,EAAE,SAAAA,QAAA;gBAAA,OAAMxF,kBAAkB,CAAC,IAAI,CAAC;cAAA,CAAC;cACxCuF,KAAK,EAAEqD,MAAM,CAACiB,aAAc;cAAAf,QAAA,EAE5B9N,IAAA,CAAC1B,IAAI;gBAACiM,KAAK,EAAEqD,MAAM,CAACkB,UAAW;gBAAAhB,QAAA,EAC7B9N,IAAA,CAACd,IAAI;kBACHqL,KAAK,EAAEqD,MAAM,CAACmB,aAAc;kBAC5BvM,IAAI,EAAC,gBAAgB;kBACrBwM,IAAI,EAAE,EAAG;kBACTC,KAAK,EAAC;gBAAM,CACb;cAAC,CACE;YAAC,CACS,CAAC;UAAA,CACf,CAAC,EACP/O,KAAA,CAAC5B,IAAI;YAACiM,KAAK,EAAEqD,MAAM,CAACgB,YAAa;YAAAd,QAAA,GAC/B9N,IAAA,CAACzB,IAAI;cAACgM,KAAK,EAAEqD,MAAM,CAACtD,IAAK;cAAAwD,QAAA,EAAE7L,WAAW,oBAAXA,WAAW,CAAEa;YAAU,CAAO,CAAC,EAC1D9C,IAAA,CAACvB,gBAAgB;cACf+L,OAAO,EAAE,SAAAA,QAAA;gBAAA,OAAMpF,wBAAwB,CAAC,IAAI,CAAC;cAAA,CAAC;cAC9CmF,KAAK,EAAEqD,MAAM,CAACiB,aAAc;cAAAf,QAAA,EAE5B9N,IAAA,CAAC1B,IAAI;gBAACiM,KAAK,EAAEqD,MAAM,CAACkB,UAAW;gBAAAhB,QAAA,EAC7B9N,IAAA,CAACd,IAAI;kBACHqL,KAAK,EAAEqD,MAAM,CAACmB,aAAc;kBAC5BvM,IAAI,EAAC,gBAAgB;kBACrBwM,IAAI,EAAE,EAAG;kBACTC,KAAK,EAAC;gBAAM,CACb;cAAC,CACE;YAAC,CACS,CAAC;UAAA,CACf,CAAC,EAEPjP,IAAA,CAACX,cAAc;YACb6P,OAAO,EAAE3K,4BAA6B;YACtC4K,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAM3K,cAAc,CAAC,KAAK,CAAC;YAAA,CAAC;YACrC4K,SAAS,EAAExC,gBAAiB;YAC5ByC,WAAW,EAAE,wCAAyC;YACtDC,YAAY,EAAE9J;UAAyB,CACxC,CAAC,EACFxF,IAAA,CAACX,cAAc;YACb6P,OAAO,EAAEvK,6BAA8B;YACvCwK,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMvK,mBAAmB,CAAC,KAAK,CAAC;YAAA,CAAC;YAC1CwK,SAAS,EAAEhC,iBAAkB;YAC7BiC,WAAW,EAAE,wBAAyB;YACtCC,YAAY,EAAE1J;UAA0B,CACzC,CAAC,EACF5F,IAAA,CAACX,cAAc;YACb6P,OAAO,EAAEnK,4BAA6B;YACtCoK,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMnK,kBAAkB,CAAC,KAAK,CAAC;YAAA,CAAC;YACzCoK,SAAS,EAAE9B,gBAAiB;YAC5B+B,WAAW,EAAE,mCAAoC;YACjDC,YAAY,EAAEtJ;UAAyB,CACxC,CAAC,EACFhG,IAAA,CAACX,cAAc;YACb6P,OAAO,EAAE/J,kCAAmC;YAC5CgK,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAM/J,wBAAwB,CAAC,KAAK,CAAC;YAAA,CAAC;YAC/CgK,SAAS,EAAE5B,sBAAuB;YAClC6B,WAAW,EAAE,+BAAgC;YAC7CC,YAAY,EAAElJ;UAA+B,CAC9C,CAAC;QAAA,CAIE,CAAC,EAEPpG,IAAA,CAACzB,IAAI;UAACgM,KAAK,EAAEqD,MAAM,CAACc,sBAAuB;UAAAZ,QAAA,EAAC;QAAmB,CAAM,CAAC,EACtE9N,IAAA,CAAC1B,IAAI;UAACiM,KAAK,EAAEqD,MAAM,CAACa,gBAAiB;UAAAX,QAAA,EAEnC9N,IAAA,CAAC1B,IAAI;YAACiM,KAAK,EAAEqD,MAAM,CAAC2B,OAAQ;YAAAzB,QAAA,EAC1B5N,KAAA,CAAC5B,IAAI;cAACiM,KAAK,EAAEqD,MAAM,CAAC4B,OAAQ;cAAA1B,QAAA,GACzB3G,YAAY,CAAC0D,GAAG,CAAC,UAACC,IAAI;gBAAA,OACrB5K,KAAA,CAAC5B,IAAI;kBAACiM,KAAK,EAAEqD,MAAM,CAAC6B,MAAO;kBAAA3B,QAAA,GACzB5N,KAAA,CAAC5B,IAAI;oBAAAwP,QAAA,GACH5N,KAAA,CAAC3B,IAAI;sBAACgM,KAAK,EAAEqD,MAAM,CAACtD,IAAK;sBAAAwD,QAAA,GACtBhD,IAAI,CAAC4E,OAAO,EAAC,GAAC,EAAC5E,IAAI,CAACtI,IAAI;oBAAA,CACrB,CAAC,EACPxC,IAAA,CAACzB,IAAI;sBAACgM,KAAK,EAAEqD,MAAM,CAACtD,IAAK;sBAAAwD,QAAA,EAAEhD,IAAI,CAACpI;oBAAK,CAAO,CAAC,EAC7C1C,IAAA,CAACzB,IAAI;sBAACgM,KAAK,EAAEqD,MAAM,CAACtD,IAAK;sBAAAwD,QAAA,EACtBhD,IAAI,CAACE,OAAO,GAAG,gBAAgB,GAAG;oBAAU,CACzC,CAAC;kBAAA,CACH,CAAC,EAENF,IAAI,CAAC1I,EAAE,KAAKH,WAAW,CAAC0N,OAAO,GAC9BzP,KAAA,CAAC5B,IAAI;oBAACiM,KAAK,EAAEqD,MAAM,CAACgC,QAAS;oBAAA9B,QAAA,GAC3B9N,IAAA,CAACvB,gBAAgB;sBACf+L,OAAO,EAAE,SAAAA,QAAA;wBAAA,OAAMU,oBAAoB,CAACJ,IAAI,CAAC1I,EAAE,CAAC;sBAAA,CAAC;sBAC7CmI,KAAK,EAAEqD,MAAM,CAACiC,mBAAoB;sBAAA/B,QAAA,EAElC9N,IAAA,CAAC1B,IAAI;wBAACiM,KAAK,EAAEqD,MAAM,CAACkB,UAAW;wBAAAhB,QAAA,EAC7B9N,IAAA,CAACd,IAAI;0BACHqL,KAAK,EAAEqD,MAAM,CAACmB,aAAc;0BAC5BvM,IAAI,EAAC,gBAAgB;0BACrBwM,IAAI,EAAE,EAAG;0BACTC,KAAK,EAAC;wBAAM,CACb;sBAAC,CACE;oBAAC,CACS,CAAC,EAEnBjP,IAAA,CAACvB,gBAAgB;sBACf+L,OAAO,EAAE,SAAAA,QAAA;wBAAA,OAAMW,aAAa,CAACL,IAAI,CAAC1I,EAAE,CAAC;sBAAA,CAAC;sBACtCmI,KAAK,EAAEqD,MAAM,CAACiC,mBAAoB;sBAAA/B,QAAA,EAElC9N,IAAA,CAAC1B,IAAI;wBAACiM,KAAK,EAAEqD,MAAM,CAACkB,UAAW;wBAAAhB,QAAA,EAC7B9N,IAAA,CAACd,IAAI;0BACHqL,KAAK,EAAEqD,MAAM,CAACmB,aAAc;0BAC5BvM,IAAI,EAAC,eAAe;0BACpBwM,IAAI,EAAE,EAAG;0BACTC,KAAK,EAAC;wBAAS,CAChB;sBAAC,CACE;oBAAC,CACS,CAAC;kBAAA,CACf,CAAC,GAKPjP,IAAA,CAAAI,SAAA,IAAI,CACL;gBAAA,GA9C8B0K,IAAI,CAAC1I,EA+ChC,CAAC;cAAA,CACR,CAAC,EAEFpC,IAAA,CAACP,WAAW;gBACVyP,OAAO,EAAE/G,UAAW;gBAEpBgH,OAAO,EAAElE,WAAY;gBACrBmE,SAAS,EAAE1E,aAAc;gBACzBhB,OAAO,EAAEA;cAAQ,CAClB,CAAC,EACF1J,IAAA,CAACN,iBAAiB;gBAChBwP,OAAO,EAAE3G,iBAAkB;gBAE3B4G,OAAO,EAAElE,WAAY;gBACrBmE,SAAS,EAAExD,wBAAyB;gBACpCyD,WAAW,EACT;cACD,CACF,CAAC,EACFrP,IAAA,CAACL,WAAW;gBACVuP,OAAO,EAAEnH,cAAe;gBACxBoH,OAAO,EAAE,SAAAA,QAAA;kBAAA,OAAMnH,eAAe,CAAC,KAAK,CAAC;gBAAA,CAAC;gBACtCgF,OAAO,EAAErF;cAAa,CACvB,CAAC;YAAA,CACE;UAAC,CACH;QAAC,CACH,CAAC;MAAA,CACH,CAAC;IAAA,CACG,CAAC,EAEZoC,UAAU,IACT/J,IAAA,CAAC1B,IAAI;MAACiM,KAAK,EAAEqD,MAAM,CAACkC,kBAAmB;MAAAhC,QAAA,EACrC9N,IAAA,CAACvB,gBAAgB;QAAC+L,OAAO,EAAEkD,eAAgB;QAACnD,KAAK,EAAEqD,MAAM,CAACmC,OAAQ;QAAAjC,QAAA,EAChE9N,IAAA,CAACzB,IAAI;UAACgM,KAAK,EAAEqD,MAAM,CAACoC,cAAe;UAAAlC,QAAA,EAAC;QAAmB,CAAM;MAAC,CAC9C;IAAC,CACf,CACP;EAAA,CACG,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGpP,UAAU,CAACyR,MAAM,CAAC;EAC/BpC,IAAI,EAAE;IACJqC,MAAM,EAAE;EACV,CAAC;EACDlC,SAAS,EAAE;IACTmC,OAAO,EAAE,CAAC;IACVD,MAAM,EAAE;EACV,CAAC;EACDjC,MAAM,EAAE;IACNmC,aAAa,EAAE,QAAQ;IACvBC,eAAe,EAAE,SAAS;IAC1BF,OAAO,EAAE;EACX,CAAC;EACDjC,SAAS,EAAE;IACTkC,aAAa,EAAE,KAAK;IACpBE,UAAU,EAAE,QAAQ;IACpBC,YAAY,EAAE,EAAE;IAChBF,eAAe,EAAE,SAAS;IAC1BG,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE;EACb,CAAC;EACDrC,YAAY,EAAE;IACZgC,aAAa,EAAE,KAAK;IACpBE,UAAU,EAAE,QAAQ;IACpBI,cAAc,EAAE,QAAQ;IACxBL,eAAe,EAAE,SAAS;IAC1BpB,KAAK,EAAE;EAET,CAAC;EACDZ,kBAAkB,EAAE;IAClBsC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBL,YAAY,EAAE,EAAE;IAChBtB,KAAK,EAAE,MAAM;IACbuB,UAAU,EAAE,CAAC;IACbK,UAAU,EAAE;EACd,CAAC;EACDvC,mBAAmB,EAAE;IACnB+B,eAAe,EAAE,MAAM;IACvBpB,KAAK,EAAE,MAAM;IACbkB,OAAO,EAAE;EACX,CAAC;EACD5B,uBAAuB,EAAE;IACvBU,KAAK,EAAE;EACT,CAAC;EACD6B,WAAW,EAAE;IACXV,aAAa,EAAE,KAAK;IAEpBE,UAAU,EAAE,QAAQ;IACpBI,cAAc,EAAE,eAAe;IAC/BK,MAAM,EAAE,EAAE;IACVN,SAAS,EAAE,EAAE;IACbN,OAAO,EAAE,CAAC;IACVa,SAAS,EAAE;EACb,CAAC;EACDC,eAAe,EAAE;IACfb,aAAa,EAAE,KAAK;IACpBK,SAAS,EAAE,CAAC;IACZJ,eAAe,EAAE,MAAM;IACvBpB,KAAK,EAAE,MAAM;IACbkB,OAAO,EAAE,EAAE;IACXe,YAAY,EAAE;EAChB,CAAC;EACDC,mBAAmB,EAAE;IACnBlC,KAAK,EAAE,MAAM;IACb4B,UAAU,EAAE,wBAAwB;IACpCF,QAAQ,EAAE;EACZ,CAAC;EACD1M,KAAK,EAAE;IACLmN,KAAK,EAAE,EAAE;IACTlB,MAAM,EAAE,EAAE;IACVmB,WAAW,EAAE,EAAE;IACfH,YAAY,EAAE;EAChB,CAAC;EACD/C,KAAK,EAAE;IACLc,KAAK,EAAE,MAAM;IACb0B,QAAQ,EAAE,EAAE;IACZE,UAAU,EAAE,wBAAwB;IACpCD,UAAU,EAAE;EACd,CAAC;EACDU,QAAQ,EAAE;IACRrC,KAAK,EAAE,SAAS;IAChB0B,QAAQ,EAAE,EAAE;IACZE,UAAU,EAAE,wBAAwB;IACpCD,UAAU,EAAE;EACd,CAAC;EAEDnC,gBAAgB,EAAE;IAIhByB,MAAM,EAAE;EAEV,CAAC;EAEDX,OAAO,EAAE;IACPgC,iBAAiB,EAAE,EAAE;IACrBC,aAAa,EAAE,EAAE;IAEjBnB,eAAe,EAAE,SAAS;IAC1BE,YAAY,EAAE;EAChB,CAAC;EACDkB,YAAY,EAAE;IACZd,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBL,YAAY,EAAE;EAChB,CAAC;EACDjG,IAAI,EAAE;IACJqG,QAAQ,EAAE,EAAE;IACZ1B,KAAK,EAAE,MAAM;IACb4B,UAAU,EAAE;EACd,CAAC;EACDjC,YAAY,EAAE;IACZ8C,gBAAgB,EAAE,EAAE;IACpBtB,aAAa,EAAE,KAAK;IACpBE,UAAU,EAAE,QAAQ;IACpBG,SAAS,EAAE;EACb,CAAC;EACDkB,gBAAgB,EAAE;IAChBC,OAAO,EAAE,MAAM;IACfxB,aAAa,EAAE,KAAK;IACpBE,UAAU,EAAE;EACd,CAAC;EACDxB,UAAU,EAAE;IACVuB,eAAe,EAAE,OAAO;IACxBa,YAAY,EAAE,CAAC;IACfV,UAAU,EAAE;EACd,CAAC;EACDzB,aAAa,EAAE;IACb8C,MAAM,EAAE;EACV,CAAC;EACDC,MAAM,EAAE;IACN1B,aAAa,EAAE,QAAQ;IACvBE,UAAU,EAAE;EACd,CAAC;EACDyB,UAAU,EAAE;IACV3B,aAAa,EAAE,KAAK;IACpBY,SAAS,EAAE;EACb,CAAC;EACDgB,WAAW,EAAE;IACX5B,aAAa,EAAE,QAAQ;IACvBW,MAAM,EAAE,CAAC;IACTL,cAAc,EAAE;EAClB,CAAC;EACDuB,QAAQ,EAAE;IACRC,QAAQ,EAAE;EACZ,CAAC;EACDC,mBAAmB,EAAE;IACnB/B,aAAa,EAAE,KAAK;IACpBM,cAAc,EAAE,eAAe;IAC/BL,eAAe,EAAE,MAAM;IACvBpB,KAAK,EAAE,MAAM;IACbkB,OAAO,EAAE,EAAE;IACXe,YAAY,EAAE;EAChB,CAAC;EACDkB,gBAAgB,EAAE;IAChBnD,KAAK,EAAE,MAAM;IACb0B,QAAQ,EAAE,EAAE;IACZE,UAAU,EAAE,wBAAwB;IACpCD,UAAU,EAAE;EACd,CAAC;EACDyB,IAAI,EAAE;IACJnC,MAAM,EAAE,CAAC;IACTG,eAAe,EAAE,MAAM;IACvBiC,SAAS,EAAE,QAAQ;IACnBC,cAAc,EAAE,EAAE;IAClBnB,KAAK,EAAE;EACT,CAAC;EACD1C,sBAAsB,EAAE;IACtBiC,QAAQ,EAAE,EAAE;IACZE,UAAU,EAAE,wBAAwB;IACpCD,UAAU,EAAE,KAAK;IACjB4B,SAAS,EAAE,MAAM;IACjBvD,KAAK,EAAE,SAAS;IAChBwD,UAAU,EAAE;EACd,CAAC;EACD9D,sBAAsB,EAAE;IACtB0B,eAAe,EAAE,SAAS;IAC1BF,OAAO,EAAE,EAAE;IACXY,MAAM,EAAE;EACV,CAAC;EACDvB,OAAO,EAAE;IACPwB,SAAS,EAAE,EAAE;IACbD,MAAM,EAAE;EACV,CAAC;EACDtB,MAAM,EAAE;IACNW,aAAa,EAAE,KAAK;IACpBM,cAAc,EAAE,eAAe;IAC/BK,MAAM,EAAE,EAAE;IACVS,aAAa,EAAE,EAAE;IACjBkB,iBAAiB,EAAE;EAErB,CAAC;EACD9C,QAAQ,EAAE;IACRQ,aAAa,EAAE,KAAK;IACpBM,cAAc,EAAE;EAClB,CAAC;EACDb,mBAAmB,EAAE;IACnBQ,eAAe,EAAE,aAAa;IAC9BF,OAAO,EAAE;EACX,CAAC;EACDL,kBAAkB,EAAE;IAClB6C,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE,CAAC;IACTC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACR5C,MAAM,EAAE,EAAE;IACVG,eAAe,EAAE,MAAM;IACvBD,aAAa,EAAE,KAAK;IACpBM,cAAc,EAAE,cAAc;IAC9BJ,UAAU,EAAE,QAAQ;IACpBH,OAAO,EAAE,EAAE;IACXa,SAAS,EAAE;EACb,CAAC;EACDhB,cAAc,EAAE;IAEdf,KAAK,EAAE,OAAO;IACd4B,UAAU,EAAE,wBAAwB;IACpC2B,SAAS,EAAE;EACb,CAAC;EACDO,cAAc,EAAE;IACd5C,OAAO,EAAE,EAAE;IACXlB,KAAK,EAAE,OAAO;IACd4B,UAAU,EAAE,wBAAwB;IACpC2B,SAAS,EAAE;EACb,CAAC;EACDzC,OAAO,EAAE;IAEPqB,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAe/Q,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}