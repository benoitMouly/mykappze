{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchAnimalById, updateAnimal, updateAnimalImage, deleteAnimal } from \"../features/animals/animalSlice\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport CityAndSectorSelect from \"../components/cities/cityAndSectorSelect\";\nimport { fetchSectors } from \"../features/sectors/sectorSlice\";\nimport ColorSelect from \"../components/animals/colorSelect\";\nimport EditableImage from \"../components/general/EditableImage\";\nimport EditableDocumentList from \"../components/general/EditableDocuments\";\nimport ConfirmationModal from \"../components/general/ConfirmationModal\";\nimport CustomAlert from \"../components/general/CustomAlert\";\nimport { HeaderEditAnimal } from \"../components/general/headerEditAnimal\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EditAnimalDetails = function EditAnimalDetails(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var animalId = route.params.animalId;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    animal_id = _useState2[0],\n    setAnimalId = _useState2[1];\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.cities;\n    }),\n    cities = _useSelector.data;\n  var _useSelector2 = useSelector(function (state) {\n      return state.sectors;\n    }),\n    sectors = _useSelector2.data;\n  var _useState3 = useState(cities ? cities[0] : \"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    city = _useState4[0],\n    setCity = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    cityId = _useState6[0],\n    setCityId = _useState6[1];\n  var _useState7 = useState(sectors ? sectors[0] : \"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    sector = _useState8[0],\n    setSector = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    sectorId = _useState10[0],\n    setSectorId = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    selectedColors = _useState12[0],\n    setSelectedColors = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    initialColors = _useState14[0],\n    setInitialColors = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    documents = _useState16[0],\n    setDocuments = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isAlertVisible = _useState18[0],\n    setAlertVisible = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    isConfirmationVisible = _useState20[0],\n    setConfirmationVisible = _useState20[1];\n  var _useState21 = useState(\"\"),\n    _useState22 = _slicedToArray(_useState21, 2),\n    alertMessage = _useState22[0],\n    setAlertMessage = _useState22[1];\n  var _useState23 = useState(\"\"),\n    _useState24 = _slicedToArray(_useState23, 2),\n    dateBirthdate = _useState24[0],\n    setBirthdate = _useState24[1];\n  var _useState25 = useState(\"\"),\n    _useState26 = _slicedToArray(_useState25, 2),\n    dateId = _useState26[0],\n    setDateId = _useState26[1];\n  useEffect(function () {\n    dispatch(fetchAnimalById(animalId));\n  }, [animalId, dispatch]);\n  var animal = useSelector(function (state) {\n    return state.animals.selectedAnimal;\n  });\n  var _useState27 = useState(animal),\n    _useState28 = _slicedToArray(_useState27, 2),\n    updatedAnimal = _useState28[0],\n    setUpdatedAnimal = _useState28[1];\n  var _useState29 = useState(false),\n    _useState30 = _slicedToArray(_useState29, 2),\n    isDatePickerVisible = _useState30[0],\n    setDatePickerVisibility = _useState30[1];\n  var _useState31 = useState(false),\n    _useState32 = _slicedToArray(_useState31, 2),\n    isDatePickerVisible2 = _useState32[0],\n    setDatePickerVisibility2 = _useState32[1];\n  var _useState33 = useState(\"\"),\n    _useState34 = _slicedToArray(_useState33, 2),\n    imageUri = _useState34[0],\n    setImageUri = _useState34[1];\n  var _useState35 = useState(false),\n    _useState36 = _slicedToArray(_useState35, 2),\n    isModified = _useState36[0],\n    setIsModified = _useState36[1];\n  React.useEffect(function () {\n    var unsubscribe = navigation.addListener(\"beforeRemove\", function (e) {\n      if (!isModified) {\n        return;\n      }\n      e.preventDefault();\n      Alert.alert(\"Annuler les changements ?\", \"Vous avez des données non sauvegardées. Etes vous certain de vouloir quitter ?\", [{\n        text: \"Rester\",\n        style: \"cancel\",\n        onPress: function onPress() {}\n      }, {\n        text: \"Confirmer\",\n        style: \"destructive\",\n        onPress: function onPress() {\n          return navigation.dispatch(e.data.action);\n        }\n      }]);\n    });\n    return unsubscribe;\n  }, [navigation, isModified]);\n  useEffect(function () {\n    if (animal) {\n      setSelectedColors(animal.colors);\n      setInitialColors(animal.colors);\n      setImageUri(animal.image);\n      setAnimalId(animal.id);\n    }\n  }, [animal]);\n  useEffect(function () {\n    if (documents) {\n      setUpdatedAnimal(function (prevAnimal) {\n        return _objectSpread(_objectSpread({}, prevAnimal), {}, {\n          documents: documents\n        });\n      });\n    }\n  }, [documents]);\n  useEffect(function () {\n    setUpdatedAnimal(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        colors: selectedColors\n      });\n    });\n  }, [selectedColors]);\n  useEffect(function () {\n    if (!sectors.find(function (sector) {\n      return sector.id === sectorId;\n    })) {\n      setSectorId(null);\n    }\n  }, [sectors, sectorId]);\n  var handleInputChange = function handleInputChange(field, value) {\n    setIsModified(true);\n    setUpdatedAnimal(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, field, value));\n    });\n  };\n  var handleObjectFormCityChange = function () {\n    var _ref2 = _asyncToGenerator(function* (id, name) {\n      setIsModified(true);\n      console.log(isModified);\n      setCity(name);\n      setCityId(id);\n      setSectorId(null);\n      dispatch(fetchSectors(id));\n      setUpdatedAnimal(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          cityName: name,\n          cityId: id\n        });\n      });\n    });\n    return function handleObjectFormCityChange(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleObjectFormSectorChange = function handleObjectFormSectorChange(id, name) {\n    setIsModified(true);\n    setSector(name);\n    setSectorId(id);\n    setUpdatedAnimal(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        sectorName: name,\n        sectorId: id\n      });\n    });\n  };\n  var handleConfirmIdentificationDate = function handleConfirmIdentificationDate(date) {\n    setIsModified(true);\n    var formattedDate = date.toISOString().split(\"T\")[0];\n    setDatePickerVisibility(false);\n    setDateId(formattedDate);\n    handleInputChange(\"identificationDate\", formattedDate);\n  };\n  var handleConfirmAge = function handleConfirmAge(date) {\n    setIsModified(true);\n    var formattedDate = date.toISOString().split(\"T\")[0];\n    setDatePickerVisibility2(false);\n    setBirthdate(formattedDate);\n    handleInputChange(\"age\", formattedDate);\n  };\n  var handleColorChange = function handleColorChange(color) {\n    setIsModified(true);\n    if (selectedColors.includes(color)) {\n      setSelectedColors(function (prevColors) {\n        return prevColors.filter(function (c) {\n          return c !== color;\n        });\n      });\n    } else {\n      setSelectedColors(function (prevColors) {\n        return [].concat(_toConsumableArray(prevColors), [color]);\n      });\n    }\n  };\n  var handleSavePress = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      if (imageUri !== animal.image) {\n        dispatch(updateAnimalImage({\n          animalId: animalId,\n          image: imageUri\n        }));\n      }\n      console.log('ANIMAL ID ', animalId);\n      console.log('ANIMALDATA', updatedAnimal);\n      dispatch(updateAnimal({\n        animalId: animalId,\n        animalData: updatedAnimal\n      }));\n      setIsModified(false);\n    });\n    return function handleSavePress() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleSuppAnimal = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (animal.id) {\n        setConfirmationVisible(true);\n      }\n    });\n    return function handleSuppAnimal() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleConfirmSuppression = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      yield dispatch(deleteAnimal(animal.id));\n      setConfirmationVisible(false);\n      setAlertMessage(\"L'animal a été supprimé avec succès\");\n      setAlertVisible(true);\n    });\n    return function handleConfirmSuppression() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  if (!updatedAnimal) {\n    return _jsx(Text, {\n      children: \"Loading...\"\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(HeaderEditAnimal, {\n      navigation: navigation,\n      animalName: animal.name\n    }), _jsxs(ScrollView, {\n      style: styles.editAnimal,\n      children: [_jsx(View, {\n        style: styles.iconTrash,\n        children: _jsx(TouchableOpacity, {\n          onPress: handleSuppAnimal,\n          children: _jsx(Icon, {\n            name: \"trash-outline\",\n            size: 30,\n            color: \"#C40030\"\n          })\n        })\n      }), _jsxs(View, {\n        style: styles.imgNameAge,\n        children: [_jsx(View, {\n          style: styles.editElt,\n          children: _jsx(View, {\n            children: _jsx(EditableImage, {\n              imageUri: imageUri,\n              setImageUri: setImageUri\n            })\n          })\n        }), _jsx(View, {\n          style: styles.editElt,\n          children: _jsx(TextInput, {\n            value: updatedAnimal.name,\n            onChangeText: function onChangeText(text) {\n              return handleInputChange(\"name\", text);\n            },\n            style: styles.textInput\n          })\n        }), _jsxs(View, {\n          style: styles.editElt,\n          children: [_jsx(Text, {\n            style: styles.editEltLabelBorn,\n            children: \"Date de naissance : \"\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return setDatePickerVisibility2(true);\n            },\n            style: styles.buttonsPicker,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: animal.age ? animal.age : dateBirthdate ? dateBirthdate : \"Choisir\"\n            })\n          }), _jsx(DateTimePickerModal, {\n            isVisible: isDatePickerVisible2,\n            mode: \"date\",\n            onConfirm: handleConfirmAge,\n            onCancel: function onCancel() {\n              return setDatePickerVisibility2(false);\n            },\n            style: {\n              shadowColor: \"#fff\",\n              shadowRadius: 0,\n              shadowOpacity: 1,\n              shadowOffset: {\n                height: 0,\n                width: 0\n              }\n            }\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.editUnicalSection,\n        children: [_jsxs(Text, {\n          style: styles.editUnicalSectionTitle,\n          children: [\"Informations g\\xE9n\\xE9rales\", \" \"]\n        }), _jsxs(View, {\n          style: styles.containerUnicalSection,\n          children: [_jsxs(View, {\n            style: styles.editEltSelects,\n            children: [_jsx(Text, {\n              style: styles.editEltLabel,\n              children: \"Ville et secteur : \"\n            }), _jsx(CityAndSectorSelect, {\n              cities: cities,\n              sectors: sectors,\n              selectedCityId: cityId,\n              selectedSectorId: sectorId,\n              onCityChange: handleObjectFormCityChange,\n              onSectorChange: handleObjectFormSectorChange\n            })]\n          }), _jsxs(View, {\n            style: styles.editEltCheckboxes,\n            children: [_jsx(Text, {\n              style: styles.editEltLabel,\n              children: \"Couleurs de la robe : \"\n            }), _jsx(ColorSelect, {\n              selectedColors: selectedColors,\n              onChange: handleColorChange\n            })]\n          }), _jsxs(View, {\n            style: styles.editElt,\n            children: [_jsx(Text, {\n              style: styles.editEltLabel,\n              children: \"Est st\\xE9rilis\\xE9 : \"\n            }), _jsx(Switch, {\n              onValueChange: function onValueChange(newValue) {\n                return handleInputChange(\"isSterilized\", newValue);\n              },\n              value: updatedAnimal.isSterilized,\n              trackColor: {\n                true: \"#d15e41\"\n              },\n              thumbColor: \"#d15e41\"\n            })]\n          }), _jsxs(View, {\n            style: styles.editElt,\n            children: [_jsx(Text, {\n              style: styles.editEltLabel,\n              children: \"Semble malade : \"\n            }), _jsx(Switch, {\n              onValueChange: function onValueChange(newValue) {\n                return handleInputChange(\"isSick\", newValue);\n              },\n              value: updatedAnimal.isSick,\n              trackColor: {\n                true: \"#d15e41\"\n              },\n              thumbColor: \"#d15e41\"\n            })]\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.editUnicalSection,\n        children: [_jsx(Text, {\n          style: styles.editUnicalSectionTitle,\n          children: \"Identification\"\n        }), _jsxs(View, {\n          style: styles.containerUnicalSection,\n          children: [_jsxs(View, {\n            style: styles.editElt,\n            children: [_jsx(Text, {\n              style: styles.editEltLabel,\n              children: \"Est identifi\\xE9 : \"\n            }), _jsx(Switch, {\n              onValueChange: function onValueChange(newValue) {\n                return handleInputChange(\"hasIdNumber\", newValue);\n              },\n              value: updatedAnimal.hasIdNumber,\n              trackColor: {\n                true: \"#d15e41\"\n              },\n              thumbColor: \"#d15e41\"\n            })]\n          }), _jsxs(View, {\n            style: styles.editElt,\n            children: [_jsx(Text, {\n              style: styles.editEltLabel,\n              children: \"Date d'identification : \"\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setDatePickerVisibility(true);\n              },\n              style: styles.buttonsPicker,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: dateId ? dateId : \"Choisir\"\n              })\n            }), _jsx(DateTimePickerModal, {\n              isVisible: isDatePickerVisible,\n              mode: \"date\",\n              onConfirm: handleConfirmIdentificationDate,\n              onCancel: function onCancel() {\n                return setDatePickerVisibility(false);\n              }\n            })]\n          }), _jsxs(View, {\n            style: styles.editElt,\n            children: [_jsxs(Text, {\n              style: styles.editEltLabel,\n              children: [\"Appartient \\xE0 un propri\\xE9taire :\", \" \"]\n            }), _jsx(Switch, {\n              onValueChange: function onValueChange(newValue) {\n                return handleInputChange(\"isBelonged\", newValue);\n              },\n              value: updatedAnimal.isBelonged,\n              trackColor: {\n                true: \"#d15e41\"\n              },\n              thumbColor: \"#d15e41\"\n            })]\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.editUnicalSection,\n        children: [_jsx(Text, {\n          style: styles.editUnicalSectionTitle,\n          children: \"Relations\"\n        }), _jsxs(View, {\n          style: styles.containerUnicalSection,\n          children: [_jsxs(View, {\n            style: styles.editElt,\n            children: [_jsx(Text, {\n              style: styles.editEltLabel,\n              children: \"Est li\\xE9 \\xE0 une famille : \"\n            }), _jsx(Switch, {\n              onValueChange: function onValueChange(newValue) {\n                return handleInputChange(\"isFamily\", newValue);\n              },\n              value: updatedAnimal.isFamily,\n              trackColor: {\n                true: \"#d15e41\"\n              },\n              thumbColor: \"#d15e41\"\n            })]\n          }), _jsxs(View, {\n            style: styles.editElt,\n            children: [_jsx(Text, {\n              style: styles.editEltLabel,\n              children: \"Est une m\\xE8re : \"\n            }), _jsx(Switch, {\n              onValueChange: function onValueChange(newValue) {\n                return handleInputChange(\"isMother\", newValue);\n              },\n              value: updatedAnimal.isMother,\n              trackColor: {\n                true: \"#d15e41\"\n              },\n              thumbColor: \"#d15e41\"\n            })]\n          }), _jsxs(View, {\n            style: styles.editElt,\n            children: [_jsx(Text, {\n              style: styles.editEltLabel,\n              children: \"AppID de la m\\xE8re : \"\n            }), _jsx(TextInput, {\n              value: updatedAnimal.motherAppId,\n              onChangeText: function onChangeText(text) {\n                return handleInputChange(\"motherAppId\", text);\n              },\n              style: styles.textInputWhite\n            })]\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.editUnicalSection,\n        children: [_jsx(Text, {\n          style: styles.editUnicalSectionTitle,\n          children: \"Autre\"\n        }), _jsxs(View, {\n          style: styles.containerUnicalSection,\n          children: [_jsxs(View, {\n            style: styles.editElt,\n            children: [_jsx(Text, {\n              style: styles.editEltLabel,\n              children: \"Maladies : \"\n            }), _jsx(TextInput, {\n              value: updatedAnimal.diseases,\n              onChangeText: function onChangeText(text) {\n                return handleInputChange(\"diseases\", text);\n              },\n              style: styles.textInputWhite\n            })]\n          }), _jsxs(View, {\n            style: styles.editElt,\n            children: [_jsx(Text, {\n              style: styles.editEltLabel,\n              children: \"Particularit\\xE9s : \"\n            }), _jsx(TextInput, {\n              value: updatedAnimal.particularities,\n              onChangeText: function onChangeText(text) {\n                return handleInputChange(\"particularities\", text);\n              },\n              style: styles.textInputWhite\n            })]\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.editUnicalSection,\n        children: [_jsx(Text, {\n          style: styles.editUnicalSectionTitle,\n          children: \"Documents\"\n        }), _jsx(View, {\n          style: styles.containerUnicalSection,\n          children: _jsx(EditableDocumentList, {\n            documents: documents,\n            setDocuments: setDocuments\n          })\n        })]\n      }), _jsx(View, {\n        style: styles.editUnicalSection\n      }), _jsx(CustomAlert, {\n        visible: isAlertVisible,\n        onClose: function onClose() {\n          return setAlertVisible(false);\n        },\n        message: alertMessage\n      }), _jsx(ConfirmationModal, {\n        visible: isConfirmationVisible,\n        onClose: function onClose() {\n          return setConfirmationVisible(false);\n        },\n        onConfirm: handleConfirmSuppression,\n        messageType: \"Voulez-vous vraiment supprimer cet animal ?\"\n      })]\n    }), _jsx(View, {\n      style: styles.btnSectionSuppSave,\n      children: _jsx(TouchableOpacity, {\n        onPress: handleSavePress,\n        style: styles.btnSave,\n        children: _jsx(Text, {\n          style: styles.buttonSaveText,\n          children: \"SAUVEGARDER\"\n        })\n      })\n    })]\n  });\n};\nvar styles = {\n  container: {\n    height: \"100%\",\n    margin: 0\n  },\n  containerUnicalSection: {\n    backgroundColor: \"#2F4F4F\",\n    padding: 15\n  },\n  editAnimal: {\n    flexDirection: \"column\",\n    rowGap: 50,\n    marginBottom: 40\n  },\n  editUnicalSection: {\n    flexDirection: \"column\",\n    rowGap: 20,\n    marginTop: 20\n  },\n  editUnicalSectionTitle: {\n    fontSize: 18,\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontWeight: \"600\",\n    textAlign: \"left\",\n    color: \"#2F4F4F\",\n    marginLeft: 15\n  },\n  imgNameAge: {\n    alignItems: \"center\",\n    rowGap: 20\n  },\n  viewImg: {},\n  editElt: {\n    marginHorizontal: 15,\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  line: {\n    height: 2,\n    backgroundColor: \"#000\",\n    marginVertical: 20,\n    width: \"40%\"\n  },\n  editEltCheckboxes: {\n    marginHorizontal: 15,\n    flexDirection: \"column\"\n  },\n  editEltSelects: {\n    marginHorizontal: 15,\n    flexDirection: \"column\",\n    rowGap: 20\n  },\n  editEltLabel: {\n    color: \"#fff\",\n    fontSize: 15,\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontWeight: \"600\"\n  },\n  editEltLabelBorn: {\n    color: \"#000\",\n    fontSize: 15,\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    fontWeight: \"600\"\n  },\n  textInput: {\n    borderBottomWidth: 1,\n    height: \"100%\",\n    width: \"50%\",\n    padding: 1,\n    textAlign: \"center\"\n  },\n  textInputWhite: {\n    borderBottomWidth: 1,\n    borderBottomColor: '#fff',\n    height: \"100%\",\n    width: \"60%\",\n    padding: 1,\n    textAlign: \"center\",\n    color: '#fff',\n    fontFamily: \"WixMadeforDisplay-Regular\"\n  },\n  buttonsPicker: {\n    backgroundColor: \"#2F2F2F\",\n    padding: 5,\n    borderRadius: 3\n  },\n  buttonText: {\n    padding: 2,\n    color: \"white\",\n    fontFamily: \"WixMadeforDisplay-Bold\"\n  },\n  btnSectionSuppSave: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    height: 60,\n    backgroundColor: \"#000\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    padding: 10,\n    marginTop: 10\n  },\n  btnSupp: {\n    backgroundColor: \"red\"\n  },\n  buttonSaveText: {\n    color: \"white\",\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    textAlign: \"center\"\n  },\n  buttonSuppText: {\n    padding: 20,\n    color: \"white\",\n    fontFamily: \"WixMadeforDisplay-Bold\",\n    textAlign: \"center\"\n  },\n  btnSave: {\n    width: '100%'\n  },\n  buttonIcon: {\n    width: 30,\n    height: 30,\n    backgroundColor: \"black\",\n    borderRadius: 2,\n    paddingTop: 1\n  },\n  buttonIconElt: {\n    margin: 7\n  },\n  iconTrash: {\n    alignItems: \"flex-end\",\n    marginTop: 5,\n    padding: 10,\n    width: '100%'\n  }\n};\nexport default EditAnimalDetails;","map":{"version":3,"names":["React","useState","useEffect","View","TextInput","Switch","Text","ScrollView","TouchableOpacity","Alert","useSelector","useDispatch","fetchAnimalById","updateAnimal","updateAnimalImage","deleteAnimal","DateTimePickerModal","CityAndSectorSelect","fetchSectors","ColorSelect","EditableImage","EditableDocumentList","ConfirmationModal","CustomAlert","HeaderEditAnimal","Icon","jsx","_jsx","jsxs","_jsxs","EditAnimalDetails","_ref","route","navigation","animalId","params","_useState","_useState2","_slicedToArray","animal_id","setAnimalId","dispatch","_useSelector","state","cities","data","_useSelector2","sectors","_useState3","_useState4","city","setCity","_useState5","_useState6","cityId","setCityId","_useState7","_useState8","sector","setSector","_useState9","_useState10","sectorId","setSectorId","_useState11","_useState12","selectedColors","setSelectedColors","_useState13","_useState14","initialColors","setInitialColors","_useState15","_useState16","documents","setDocuments","_useState17","_useState18","isAlertVisible","setAlertVisible","_useState19","_useState20","isConfirmationVisible","setConfirmationVisible","_useState21","_useState22","alertMessage","setAlertMessage","_useState23","_useState24","dateBirthdate","setBirthdate","_useState25","_useState26","dateId","setDateId","animal","animals","selectedAnimal","_useState27","_useState28","updatedAnimal","setUpdatedAnimal","_useState29","_useState30","isDatePickerVisible","setDatePickerVisibility","_useState31","_useState32","isDatePickerVisible2","setDatePickerVisibility2","_useState33","_useState34","imageUri","setImageUri","_useState35","_useState36","isModified","setIsModified","unsubscribe","addListener","e","preventDefault","alert","text","style","onPress","action","colors","image","id","prevAnimal","_objectSpread","prev","find","handleInputChange","field","value","_defineProperty","handleObjectFormCityChange","_ref2","_asyncToGenerator","name","console","log","cityName","_x","_x2","apply","arguments","handleObjectFormSectorChange","sectorName","handleConfirmIdentificationDate","date","formattedDate","toISOString","split","handleConfirmAge","handleColorChange","color","includes","prevColors","filter","c","concat","_toConsumableArray","handleSavePress","_ref3","animalData","handleSuppAnimal","_ref4","handleConfirmSuppression","_ref5","children","styles","container","animalName","editAnimal","iconTrash","size","imgNameAge","editElt","onChangeText","textInput","editEltLabelBorn","buttonsPicker","buttonText","age","isVisible","mode","onConfirm","onCancel","shadowColor","shadowRadius","shadowOpacity","shadowOffset","height","width","editUnicalSection","editUnicalSectionTitle","containerUnicalSection","editEltSelects","editEltLabel","selectedCityId","selectedSectorId","onCityChange","onSectorChange","editEltCheckboxes","onChange","onValueChange","newValue","isSterilized","trackColor","true","thumbColor","isSick","hasIdNumber","isBelonged","isFamily","isMother","motherAppId","textInputWhite","diseases","particularities","visible","onClose","message","messageType","btnSectionSuppSave","btnSave","buttonSaveText","margin","backgroundColor","padding","flexDirection","rowGap","marginBottom","marginTop","fontSize","fontFamily","fontWeight","textAlign","marginLeft","alignItems","viewImg","marginHorizontal","line","marginVertical","borderBottomWidth","borderBottomColor","borderRadius","position","bottom","left","right","justifyContent","btnSupp","buttonSuppText","buttonIcon","paddingTop","buttonIconElt"],"sources":["C:/Users/Benoitm/Documents/Coding/Kappze/MyKappze/src/pages/EditAnimalDetails.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  TextInput,\r\n  Button,\r\n  Switch,\r\n  Text,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  fetchAnimalById,\r\n  updateAnimal,\r\n  updateAnimalImage,\r\n  uploadSingleFile,\r\n  addDocumentToAnimal,\r\n  deleteAnimal,\r\n} from \"../features/animals/animalSlice\";\r\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport CityAndSectorSelect from \"../components/cities/cityAndSectorSelect\";\r\nimport { fetchSectors } from \"../features/sectors/sectorSlice\";\r\nimport ColorSelect from \"../components/animals/colorSelect\";\r\nimport EditableImage from \"../components/general/EditableImage\";\r\nimport EditableDocumentList from \"../components/general/EditableDocuments\";\r\nimport ConfirmationModal from \"../components/general/ConfirmationModal\";\r\nimport CustomAlert from \"../components/general/CustomAlert\";\r\nimport { HeaderEditAnimal } from \"../components/general/headerEditAnimal\";\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\n\r\nconst EditAnimalDetails = ({ route, navigation }) => {\r\n  const { animalId } = route.params;\r\n  const [animal_id, setAnimalId] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const { data: cities } = useSelector((state: RootState) => state.cities);\r\n  const { data: sectors } = useSelector((state: RootState) => state.sectors);\r\n  const [city, setCity] = useState(cities ? cities[0] : \"\");\r\n  const [cityId, setCityId] = useState(null);\r\n  const [sector, setSector] = useState(sectors ? sectors[0] : \"\");\r\n  const [sectorId, setSectorId] = useState(null);\r\n  const [selectedColors, setSelectedColors] = useState([]);\r\n  const [initialColors, setInitialColors] = useState([]);\r\n  const [documents, setDocuments] = useState([]);\r\n  // const [message, setMessage] = useState('');\r\n  const [isAlertVisible, setAlertVisible] = useState(false);\r\n  const [isConfirmationVisible, setConfirmationVisible] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const [dateBirthdate, setBirthdate] = useState(\"\");\r\n  const [dateId, setDateId] = useState(\"\");\r\n\r\n  // const navigation = useNavigation();\r\n\r\n  // Fetch animal information\r\n  useEffect(() => {\r\n    dispatch(fetchAnimalById(animalId));\r\n  }, [animalId, dispatch]);\r\n\r\n  const animal = useSelector((state) => state.animals.selectedAnimal);\r\n  const [updatedAnimal, setUpdatedAnimal] = useState(animal);\r\n\r\n  // Additional states for DateTimePickerModal\r\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n  const [isDatePickerVisible2, setDatePickerVisibility2] = useState(false);\r\n  const [imageUri, setImageUri] = useState(\"\");\r\n  const [isModified, setIsModified] = useState(false);\r\n\r\n  React.useEffect(() => {\r\n    const unsubscribe = navigation.addListener(\"beforeRemove\", (e) => {\r\n      // Empêche le geste de retour par défaut\r\n      if (!isModified) {\r\n        // Si aucune modification n'a été apportée, laissez l'utilisateur quitter la page.\r\n        return;\r\n      }\r\n\r\n      e.preventDefault();\r\n\r\n      // Demande confirmation avant de revenir en arrière\r\n      Alert.alert(\r\n        \"Annuler les changements ?\",\r\n        \"Vous avez des données non sauvegardées. Etes vous certain de vouloir quitter ?\",\r\n        [\r\n          { text: \"Rester\", style: \"cancel\", onPress: () => {} },\r\n          {\r\n            text: \"Confirmer\",\r\n            style: \"destructive\",\r\n            // Si l'utilisateur confirme, revenir\r\n            onPress: () => navigation.dispatch(e.data.action),\r\n          },\r\n        ]\r\n      );\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [navigation, isModified]);\r\n\r\n  useEffect(() => {\r\n    if (animal) {\r\n      setSelectedColors(animal.colors);\r\n      setInitialColors(animal.colors);\r\n      setImageUri(animal.image);\r\n      // setDocuments(animal.documents);\r\n      setAnimalId(animal.id);\r\n    }\r\n  }, [animal]);\r\n\r\n  useEffect(() => {\r\n    if (documents) {\r\n      setUpdatedAnimal((prevAnimal) => ({ ...prevAnimal, documents }));\r\n    }\r\n  }, [documents]);\r\n\r\n  // Update the colors in updatedAnimal whenever selectedColors changes\r\n  useEffect(() => {\r\n    setUpdatedAnimal((prev) => ({\r\n      ...prev,\r\n      colors: selectedColors,\r\n    }));\r\n  }, [selectedColors]);\r\n\r\n  useEffect(() => {\r\n    // Vérifie si le secteur sélectionné est toujours valide\r\n    if (!sectors.find((sector) => sector.id === sectorId)) {\r\n      // Si ce n'est pas le cas, réinitialisez le secteur sélectionné\r\n      setSectorId(null);\r\n    }\r\n  }, [sectors, sectorId]);\r\n\r\n  // Function to handle input changes\r\n  const handleInputChange = (field, value) => {\r\n    setIsModified(true);\r\n    setUpdatedAnimal((prev) => ({\r\n      ...prev,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  const handleObjectFormCityChange = async (id, name) => {\r\n    setIsModified(true);\r\n    console.log(isModified);\r\n    setCity(name);\r\n    setCityId(id);\r\n    setSectorId(null);\r\n    dispatch(fetchSectors(id));\r\n\r\n    setUpdatedAnimal((prev) => ({\r\n      ...prev,\r\n      cityName: name,\r\n      cityId: id,\r\n    }));\r\n  };\r\n\r\n  const handleObjectFormSectorChange = (id, name) => {\r\n    setIsModified(true);\r\n    setSector(name);\r\n    setSectorId(id);\r\n\r\n    setUpdatedAnimal((prev) => ({\r\n      ...prev,\r\n      sectorName: name,\r\n      sectorId: id,\r\n    }));\r\n  };\r\n\r\n  const handleConfirmIdentificationDate = (date) => {\r\n    setIsModified(true);\r\n    const formattedDate = date.toISOString().split(\"T\")[0];\r\n    setDatePickerVisibility(false);\r\n    setDateId(formattedDate);\r\n    handleInputChange(\"identificationDate\", formattedDate);\r\n  };\r\n\r\n  const handleConfirmAge = (date) => {\r\n    setIsModified(true);\r\n    const formattedDate = date.toISOString().split(\"T\")[0];\r\n    setDatePickerVisibility2(false);\r\n    setBirthdate(formattedDate);\r\n    handleInputChange(\"age\", formattedDate);\r\n  };\r\n\r\n  const handleColorChange = (color) => {\r\n    setIsModified(true);\r\n    if (selectedColors.includes(color)) {\r\n      setSelectedColors((prevColors) => prevColors.filter((c) => c !== color));\r\n    } else {\r\n      setSelectedColors((prevColors) => [...prevColors, color]);\r\n    }\r\n  };\r\n\r\n  const handleSavePress = async () => {\r\n    // ajoutez async ici\r\n\r\n    if (imageUri !== animal.image) {\r\n      dispatch(updateAnimalImage({ animalId, image: imageUri }));\r\n    }\r\n\r\n    // if (documents && documents.length > 0) {\r\n    //   const uploadedDocuments = (await Promise.all(documents.map(uploadSingleFile))).filter(Boolean);\r\n\r\n    //   console.log(\"UPLOADED DOCUMENTS : \", uploadedDocuments);\r\n    //   await dispatch(\r\n    //     addDocumentToAnimal({\r\n    //       animalId: animalId,\r\n    //       documents: uploadedDocuments,\r\n    //     })\r\n    //   );\r\n    // }\r\n      console.log('ANIMAL ID ', animalId)\r\n      console.log('ANIMALDATA', updatedAnimal)\r\n      dispatch(updateAnimal({ animalId, animalData: updatedAnimal }));\r\n\r\n    setIsModified(false);\r\n  };\r\n\r\n  const handleSuppAnimal = async () => {\r\n    // console.log(id);\r\n    if (animal.id) {\r\n      setConfirmationVisible(true); // Affiche la modale de confirmation\r\n    }\r\n  };\r\n\r\n  const handleConfirmSuppression = async () => {\r\n    // console.log(id)\r\n    await dispatch(deleteAnimal(animal.id));\r\n    setConfirmationVisible(false); // Ferme la modale de confirmation\r\n    setAlertMessage(\"L'animal a été supprimé avec succès\"); // Définir le message d'alerte\r\n    setAlertVisible(true); // Affiche la modale d'alerte\r\n  };\r\n\r\n  // If animal is not yet loaded, display a loading text\r\n  if (!updatedAnimal) {\r\n    return <Text>Loading...</Text>;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <HeaderEditAnimal navigation={navigation} animalName={animal.name} />\r\n      <ScrollView style={styles.editAnimal}>\r\n        <View style={styles.iconTrash}>\r\n          <TouchableOpacity  onPress={handleSuppAnimal}>\r\n            <Icon name=\"trash-outline\" size={30} color=\"#C40030\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n\r\n        <View style={styles.imgNameAge}>\r\n          <View style={styles.editElt}>\r\n            <View>\r\n              <EditableImage imageUri={imageUri} setImageUri={setImageUri} />\r\n            </View>\r\n          </View>\r\n          <View style={styles.editElt}>\r\n            <TextInput\r\n              value={updatedAnimal.name}\r\n              onChangeText={(text) => handleInputChange(\"name\", text)}\r\n              style={styles.textInput}\r\n            />\r\n            {/* <View style={styles.buttonIcon}>\r\n            <Icon style={styles.buttonIconElt} name=\"pencil-outline\" size={15} color=\"#fff\" />\r\n          </View> */}\r\n          </View>\r\n\r\n          <View style={styles.editElt}>\r\n            <Text style={styles.editEltLabelBorn}>Date de naissance : </Text>\r\n\r\n            <TouchableOpacity\r\n              onPress={() => setDatePickerVisibility2(true)}\r\n              style={styles.buttonsPicker}\r\n            >\r\n              <Text style={styles.buttonText}>\r\n                {animal.age\r\n                  ? animal.age\r\n                  : dateBirthdate\r\n                  ? dateBirthdate\r\n                  : \"Choisir\"}\r\n              </Text>\r\n            </TouchableOpacity>\r\n            <DateTimePickerModal\r\n              isVisible={isDatePickerVisible2}\r\n              mode=\"date\"\r\n              onConfirm={handleConfirmAge}\r\n              onCancel={() => setDatePickerVisibility2(false)}\r\n              style={{\r\n                shadowColor: \"#fff\",\r\n                shadowRadius: 0,\r\n                shadowOpacity: 1,\r\n                shadowOffset: { height: 0, width: 0 },\r\n              }}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        {/* <View style={styles.line} /> */}\r\n\r\n        <View style={styles.editUnicalSection}>\r\n          <Text style={styles.editUnicalSectionTitle}>\r\n            Informations générales{\" \"}\r\n          </Text>\r\n          <View style={styles.containerUnicalSection}>\r\n            {/* Select city */}\r\n            <View style={styles.editEltSelects}>\r\n            <Text style={styles.editEltLabel}>Ville et secteur : </Text>\r\n              <CityAndSectorSelect\r\n                cities={cities}\r\n                sectors={sectors}\r\n                selectedCityId={cityId}\r\n                selectedSectorId={sectorId}\r\n                onCityChange={handleObjectFormCityChange}\r\n                onSectorChange={handleObjectFormSectorChange}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.editEltCheckboxes}>\r\n              <Text style={styles.editEltLabel}>Couleurs de la robe : </Text>\r\n              <ColorSelect\r\n                selectedColors={selectedColors}\r\n                onChange={handleColorChange}\r\n              />\r\n            </View>\r\n            <View style={styles.editElt}>\r\n              <Text style={styles.editEltLabel}>Est stérilisé : </Text>\r\n\r\n              <Switch\r\n                onValueChange={(newValue) =>\r\n                  handleInputChange(\"isSterilized\", newValue)\r\n                }\r\n                value={updatedAnimal.isSterilized}\r\n                trackColor={{ true: \"#d15e41\" }}\r\n                thumbColor={\"#d15e41\"}\r\n              />\r\n            </View>\r\n\r\n            {/* Toggle isSick */}\r\n            <View style={styles.editElt}>\r\n              <Text style={styles.editEltLabel}>Semble malade : </Text>\r\n              <Switch\r\n                onValueChange={(newValue) =>\r\n                  handleInputChange(\"isSick\", newValue)\r\n                }\r\n                value={updatedAnimal.isSick}\r\n                trackColor={{ true: \"#d15e41\" }}\r\n                 thumbColor={\"#d15e41\"}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        {/* <View style={styles.line} /> */}\r\n\r\n        <View style={styles.editUnicalSection}>\r\n          <Text style={styles.editUnicalSectionTitle}>Identification</Text>\r\n          {/* Toggle isIdentificated */}\r\n          <View style={styles.containerUnicalSection}>\r\n            <View style={styles.editElt}>\r\n              <Text style={styles.editEltLabel}>Est identifié : </Text>\r\n              <Switch\r\n                onValueChange={(newValue) =>\r\n                  handleInputChange(\"hasIdNumber\", newValue)\r\n                }\r\n                value={updatedAnimal.hasIdNumber}\r\n                trackColor={{ true: \"#d15e41\" }}\r\n                 thumbColor={\"#d15e41\"}\r\n              />\r\n            </View>\r\n\r\n            {/* Date identificationDate */}\r\n            <View style={styles.editElt}>\r\n              <Text style={styles.editEltLabel}>Date d'identification : </Text>\r\n              <TouchableOpacity\r\n                onPress={() => setDatePickerVisibility(true)}\r\n                style={styles.buttonsPicker}\r\n              >\r\n                <Text style={styles.buttonText}>\r\n                  {dateId ? dateId : \"Choisir\"}\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <DateTimePickerModal\r\n                isVisible={isDatePickerVisible}\r\n                mode=\"date\"\r\n                onConfirm={handleConfirmIdentificationDate}\r\n                onCancel={() => setDatePickerVisibility(false)}\r\n              />\r\n            </View>\r\n\r\n            {/* Toggle isBelonged */}\r\n            <View style={styles.editElt}>\r\n              <Text style={styles.editEltLabel}>\r\n                Appartient à un propriétaire :{\" \"}\r\n              </Text>\r\n              <Switch\r\n                onValueChange={(newValue) =>\r\n                  handleInputChange(\"isBelonged\", newValue)\r\n                }\r\n                value={updatedAnimal.isBelonged}\r\n                trackColor={{ true: \"#d15e41\" }}\r\n                 thumbColor={\"#d15e41\"}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        {/* <View style={styles.line} /> */}\r\n\r\n        <View style={styles.editUnicalSection}>\r\n          <Text style={styles.editUnicalSectionTitle}>Relations</Text>\r\n          {/* Toggle isFamily */}\r\n          <View style={styles.containerUnicalSection}>\r\n            <View style={styles.editElt}>\r\n              <Text style={styles.editEltLabel}>Est lié à une famille : </Text>\r\n              <Switch\r\n                onValueChange={(newValue) =>\r\n                  handleInputChange(\"isFamily\", newValue)\r\n                }\r\n                value={updatedAnimal.isFamily}\r\n                trackColor={{ true: \"#d15e41\" }}\r\n                 thumbColor={\"#d15e41\"}\r\n              />\r\n            </View>\r\n\r\n            {/* Toggle isMother */}\r\n            <View style={styles.editElt}>\r\n              <Text style={styles.editEltLabel}>Est une mère : </Text>\r\n              <Switch\r\n                onValueChange={(newValue) =>\r\n                  handleInputChange(\"isMother\", newValue)\r\n                }\r\n                value={updatedAnimal.isMother}\r\n                trackColor={{ true: \"#d15e41\" }}\r\n                 thumbColor={\"#d15e41\"}\r\n              />\r\n            </View>\r\n\r\n            {/* TextInput motherAppId */}\r\n            <View style={styles.editElt}>\r\n              <Text style={styles.editEltLabel}>AppID de la mère : </Text>\r\n              <TextInput\r\n                value={updatedAnimal.motherAppId}\r\n                onChangeText={(text) => handleInputChange(\"motherAppId\", text)}\r\n                style={styles.textInputWhite}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        {/* <View style={styles.line} /> */}\r\n\r\n        <View style={styles.editUnicalSection}>\r\n          <Text style={styles.editUnicalSectionTitle}>Autre</Text>\r\n          {/* TextInput diseases */}\r\n\r\n          <View style={styles.containerUnicalSection}>\r\n            <View style={styles.editElt}>\r\n              <Text style={styles.editEltLabel}>Maladies : </Text>\r\n              <TextInput\r\n                value={updatedAnimal.diseases}\r\n                onChangeText={(text) => handleInputChange(\"diseases\", text)}\r\n                style={styles.textInputWhite}\r\n              />\r\n            </View>\r\n\r\n            {/* TextInput particularities */}\r\n            <View style={styles.editElt}>\r\n              <Text style={styles.editEltLabel}>Particularités : </Text>\r\n              <TextInput\r\n                value={updatedAnimal.particularities}\r\n                onChangeText={(text) =>\r\n                  handleInputChange(\"particularities\", text)\r\n                }\r\n                style={styles.textInputWhite}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        {/* <View style={styles.line} /> */}\r\n\r\n        <View style={styles.editUnicalSection}>\r\n          {/* <View style={styles.editEltDocuments}> */}\r\n            <Text style={styles.editUnicalSectionTitle}>Documents</Text>\r\n            <View style={styles.containerUnicalSection}>\r\n              <EditableDocumentList\r\n                documents={documents}\r\n                setDocuments={setDocuments}\r\n              />\r\n            </View>\r\n          {/* </View> */}\r\n        </View>\r\n\r\n        {/* <View style={styles.line} /> */}\r\n\r\n        <View style={styles.editUnicalSection}></View>\r\n\r\n        <CustomAlert\r\n          visible={isAlertVisible}\r\n          onClose={() => setAlertVisible(false)}\r\n          message={alertMessage}\r\n        />\r\n        <ConfirmationModal\r\n          visible={isConfirmationVisible}\r\n          onClose={() => setConfirmationVisible(false)}\r\n          onConfirm={handleConfirmSuppression}\r\n          messageType={\"Voulez-vous vraiment supprimer cet animal ?\"}\r\n        />\r\n      </ScrollView>\r\n\r\n      <View style={styles.btnSectionSuppSave}>\r\n        <TouchableOpacity onPress={handleSavePress} style={styles.btnSave}>\r\n          <Text style={styles.buttonSaveText}>SAUVEGARDER</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    height: \"100%\",\r\n    margin: 0,\r\n  },\r\n  containerUnicalSection: {\r\n    backgroundColor: \"#2F4F4F\",\r\n    padding: 15,\r\n    // marginBottom: 20\r\n  },\r\n  editAnimal: {\r\n    // padding: 5,\r\n    flexDirection: \"column\",\r\n    rowGap: 50,\r\n    marginBottom: 40\r\n  },\r\n  editUnicalSection: {\r\n    flexDirection: \"column\",\r\n    rowGap: 20,\r\n    marginTop: 20,\r\n    // backgroundColor: 'blue',\r\n    // margin: 20,\r\n  },\r\n  editUnicalSectionTitle: {\r\n    fontSize: 18,\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    fontWeight: \"600\",\r\n    textAlign: \"left\",\r\n    color: \"#2F4F4F\",\r\n    marginLeft: 15,\r\n  },\r\n  imgNameAge: {\r\n    alignItems: \"center\",\r\n    rowGap: 20,\r\n    // marginTop: 60\r\n  },\r\n  viewImg: {},\r\n  editElt: {\r\n    marginHorizontal: 15,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  line: {\r\n    height: 2,\r\n    backgroundColor: \"#000\", // change this to fit your design\r\n    // alignSelf: 'start',\r\n    marginVertical: 20, // space above and below the line\r\n    width: \"40%\", // change this to fit your design\r\n  },\r\n  editEltCheckboxes: {\r\n    marginHorizontal: 15,\r\n    flexDirection: \"column\",\r\n  },\r\n  editEltSelects: {\r\n    marginHorizontal: 15,\r\n    flexDirection: \"column\",\r\n    rowGap: 20\r\n  },\r\n  // editEltDocuments: {\r\n  //   marginHorizontal: 15,\r\n  //   flexDirection: \"column\",\r\n  // },\r\n  editEltLabel: {\r\n    color: \"#fff\",\r\n    fontSize: 15,\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    fontWeight: \"600\",\r\n  },\r\n  editEltLabelBorn: {\r\n    color: \"#000\",\r\n    fontSize: 15,\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    fontWeight: \"600\",\r\n  },\r\n  textInput: {\r\n    borderBottomWidth: 1,\r\n    height: \"100%\",\r\n    width: \"50%\",\r\n    padding: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  textInputWhite: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#fff',\r\n    height: \"100%\",\r\n    width: \"60%\",\r\n    padding: 1,\r\n    textAlign: \"center\",\r\n    color: '#fff',\r\n    fontFamily: \"WixMadeforDisplay-Regular\",\r\n  },\r\n  buttonsPicker: {\r\n    backgroundColor: \"#2F2F2F\",\r\n    padding: 5,\r\n    borderRadius: 3,\r\n  },\r\n  buttonText: {\r\n    padding: 2,\r\n    color: \"white\",\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n  },\r\n  btnSectionSuppSave: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    height: 60, // Vous pouvez modifier cette valeur en fonction de vos besoins\r\n    backgroundColor: \"#000\", // Pour la visibilité\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\", // Pour espacer les boutons\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    marginTop: 10,\r\n  },\r\n  btnSupp: {\r\n    backgroundColor: \"red\",\r\n  },\r\n  buttonSaveText: {\r\n    // padding: 20,\r\n    color: \"white\",\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  buttonSuppText: {\r\n    padding: 20,\r\n    color: \"white\",\r\n    fontFamily: \"WixMadeforDisplay-Bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  btnSave: {\r\n    // backgroundColor: 'green'\r\n    width: '100%'\r\n  },\r\n  buttonIcon: {\r\n    // marginRight: 5,\r\n    // margin: 10,\r\n    width: 30,\r\n    height: 30,\r\n    backgroundColor: \"black\",\r\n    borderRadius: 2,\r\n    paddingTop: 1,\r\n    // padding: 20\r\n  },\r\n  buttonIconElt: {\r\n    margin: 7,\r\n  },\r\n  iconTrash:{\r\n    alignItems: \"flex-end\",\r\n    marginTop: 5,\r\n    padding: 10,\r\n    width: '100%',\r\n  }\r\n};\r\n\r\nexport default EditAnimalDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}